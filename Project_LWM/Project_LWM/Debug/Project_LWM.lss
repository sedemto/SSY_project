
Project_LWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001ec  00800200  00006a8e  00006b22  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006a8e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000018d3  008003ec  008003ec  00006d0e  2**0
                  ALLOC
  3 .noinit       00000001  00801cbf  00801cbf  00006d0e  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00006d0e  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006d6c  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000a20  00000000  00000000  00006dac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000f42a  00000000  00000000  000077cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000465b  00000000  00000000  00016bf6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000066f8  00000000  00000000  0001b251  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00002584  00000000  00000000  0002194c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000035d1  00000000  00000000  00023ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000bcb8  00000000  00000000  000274a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000009e0  00000000  00000000  00033159  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	f7 c1       	rjmp	.+1006   	; 0x3f0 <__ctors_end>
       2:	00 00       	nop
       4:	25 c2       	rjmp	.+1098   	; 0x450 <__bad_interrupt>
       6:	00 00       	nop
       8:	23 c2       	rjmp	.+1094   	; 0x450 <__bad_interrupt>
       a:	00 00       	nop
       c:	21 c2       	rjmp	.+1090   	; 0x450 <__bad_interrupt>
       e:	00 00       	nop
      10:	1f c2       	rjmp	.+1086   	; 0x450 <__bad_interrupt>
      12:	00 00       	nop
      14:	1d c2       	rjmp	.+1082   	; 0x450 <__bad_interrupt>
      16:	00 00       	nop
      18:	1b c2       	rjmp	.+1078   	; 0x450 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	19 c2       	rjmp	.+1074   	; 0x450 <__bad_interrupt>
      1e:	00 00       	nop
      20:	17 c2       	rjmp	.+1070   	; 0x450 <__bad_interrupt>
      22:	00 00       	nop
      24:	15 c2       	rjmp	.+1066   	; 0x450 <__bad_interrupt>
      26:	00 00       	nop
      28:	13 c2       	rjmp	.+1062   	; 0x450 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	11 c2       	rjmp	.+1058   	; 0x450 <__bad_interrupt>
      2e:	00 00       	nop
      30:	0f c2       	rjmp	.+1054   	; 0x450 <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 b7 23 	jmp	0x476e	; 0x476e <__vector_13>
      38:	0b c2       	rjmp	.+1046   	; 0x450 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	09 c2       	rjmp	.+1042   	; 0x450 <__bad_interrupt>
      3e:	00 00       	nop
      40:	07 c2       	rjmp	.+1038   	; 0x450 <__bad_interrupt>
      42:	00 00       	nop
      44:	05 c2       	rjmp	.+1034   	; 0x450 <__bad_interrupt>
      46:	00 00       	nop
      48:	03 c2       	rjmp	.+1030   	; 0x450 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	01 c2       	rjmp	.+1026   	; 0x450 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ff c1       	rjmp	.+1022   	; 0x450 <__bad_interrupt>
      52:	00 00       	nop
      54:	0c 94 ce 20 	jmp	0x419c	; 0x419c <__vector_21>
      58:	fb c1       	rjmp	.+1014   	; 0x450 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	f9 c1       	rjmp	.+1010   	; 0x450 <__bad_interrupt>
      5e:	00 00       	nop
      60:	f7 c1       	rjmp	.+1006   	; 0x450 <__bad_interrupt>
      62:	00 00       	nop
      64:	f5 c1       	rjmp	.+1002   	; 0x450 <__bad_interrupt>
      66:	00 00       	nop
      68:	f3 c1       	rjmp	.+998    	; 0x450 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	f1 c1       	rjmp	.+994    	; 0x450 <__bad_interrupt>
      6e:	00 00       	nop
      70:	ef c1       	rjmp	.+990    	; 0x450 <__bad_interrupt>
      72:	00 00       	nop
      74:	ed c1       	rjmp	.+986    	; 0x450 <__bad_interrupt>
      76:	00 00       	nop
      78:	eb c1       	rjmp	.+982    	; 0x450 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e9 c1       	rjmp	.+978    	; 0x450 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e7 c1       	rjmp	.+974    	; 0x450 <__bad_interrupt>
      82:	00 00       	nop
      84:	e5 c1       	rjmp	.+970    	; 0x450 <__bad_interrupt>
      86:	00 00       	nop
      88:	e3 c1       	rjmp	.+966    	; 0x450 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	e1 c1       	rjmp	.+962    	; 0x450 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 2f 24 	jmp	0x485e	; 0x485e <__vector_36>
      94:	0c 94 13 24 	jmp	0x4826	; 0x4826 <__vector_37>
      98:	db c1       	rjmp	.+950    	; 0x450 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	d9 c1       	rjmp	.+946    	; 0x450 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d7 c1       	rjmp	.+942    	; 0x450 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d5 c1       	rjmp	.+938    	; 0x450 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0c 94 a6 23 	jmp	0x474c	; 0x474c <__vector_42>
      ac:	d1 c1       	rjmp	.+930    	; 0x450 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	cf c1       	rjmp	.+926    	; 0x450 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	cd c1       	rjmp	.+922    	; 0x450 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	cb c1       	rjmp	.+918    	; 0x450 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	c9 c1       	rjmp	.+914    	; 0x450 <__bad_interrupt>
      be:	00 00       	nop
      c0:	c7 c1       	rjmp	.+910    	; 0x450 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c5 c1       	rjmp	.+906    	; 0x450 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	c3 c1       	rjmp	.+902    	; 0x450 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	c1 c1       	rjmp	.+898    	; 0x450 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	bf c1       	rjmp	.+894    	; 0x450 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	bd c1       	rjmp	.+890    	; 0x450 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	bb c1       	rjmp	.+886    	; 0x450 <__bad_interrupt>
      da:	00 00       	nop
      dc:	b9 c1       	rjmp	.+882    	; 0x450 <__bad_interrupt>
      de:	00 00       	nop
      e0:	b7 c1       	rjmp	.+878    	; 0x450 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	b5 c1       	rjmp	.+874    	; 0x450 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	b3 c1       	rjmp	.+870    	; 0x450 <__bad_interrupt>
      ea:	00 00       	nop
      ec:	b1 c1       	rjmp	.+866    	; 0x450 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	af c1       	rjmp	.+862    	; 0x450 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	ad c1       	rjmp	.+858    	; 0x450 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	ab c1       	rjmp	.+854    	; 0x450 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	a9 c1       	rjmp	.+850    	; 0x450 <__bad_interrupt>
      fe:	00 00       	nop
     100:	a7 c1       	rjmp	.+846    	; 0x450 <__bad_interrupt>
     102:	00 00       	nop
     104:	a5 c1       	rjmp	.+842    	; 0x450 <__bad_interrupt>
     106:	00 00       	nop
     108:	a3 c1       	rjmp	.+838    	; 0x450 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	a1 c1       	rjmp	.+834    	; 0x450 <__bad_interrupt>
     10e:	00 00       	nop
     110:	9f c1       	rjmp	.+830    	; 0x450 <__bad_interrupt>
     112:	00 00       	nop
     114:	9d c1       	rjmp	.+826    	; 0x450 <__bad_interrupt>
     116:	00 00       	nop
     118:	9b c1       	rjmp	.+822    	; 0x450 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	99 c1       	rjmp	.+818    	; 0x450 <__bad_interrupt>
     11e:	00 00       	nop
     120:	97 c1       	rjmp	.+814    	; 0x450 <__bad_interrupt>
     122:	00 00       	nop
     124:	95 c1       	rjmp	.+810    	; 0x450 <__bad_interrupt>
     126:	00 00       	nop
     128:	93 c1       	rjmp	.+806    	; 0x450 <__bad_interrupt>
     12a:	00 00       	nop
     12c:	91 c1       	rjmp	.+802    	; 0x450 <__bad_interrupt>
     12e:	00 00       	nop
     130:	8f c1       	rjmp	.+798    	; 0x450 <__bad_interrupt>
     132:	00 00       	nop
     134:	9b 0c       	add	r9, r11
     136:	9e 0c       	add	r9, r14
     138:	ad 0c       	add	r10, r13
     13a:	a8 0c       	add	r10, r8
     13c:	b2 0c       	add	r11, r2
     13e:	b7 0c       	add	r11, r7
     140:	bc 0c       	add	r11, r12
     142:	ca 0c       	add	r12, r10
     144:	de 0c       	add	r13, r14
     146:	ed 0c       	add	r14, r13
     148:	f0 0c       	add	r15, r0
     14a:	f4 0c       	add	r15, r4
     14c:	07 0d       	add	r16, r7
     14e:	f8 0c       	add	r15, r8
     150:	fb 0c       	add	r15, r11
     152:	01 0d       	add	r16, r1

00000154 <__trampolines_end>:
     154:	6e 61       	ori	r22, 0x1E	; 30
     156:	6e 00       	.word	0x006e	; ????

00000158 <__c.2332>:
     158:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     168:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     178:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     188:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     198:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     1a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     1b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     1c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     1d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     208:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     218:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     228:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     238:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     248:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000256 <__c.3637>:
     256:	44 48 43 50 20 49 50 0d 0a 00                       DHCP IP...

00000260 <__c.3635>:
     260:	53 54 41 54 49 43 20 49 50 0d 0a 00                 STATIC IP...

0000026c <__c.3632>:
     26c:	3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d     ================
     27c:	3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d     ================
     28c:	3d 3d 3d 3d 3d 3d 3d 0d 0a 00                       =======...

00000296 <__c.3630>:
     296:	20 57 49 5a 6e 65 74 20 63 68 69 70 3a 20 20 25      WIZnet chip:  %
     2a6:	73 20 0d 0a 00                                      s ...

000002ab <__c.3628>:
     2ab:	0d 0a 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d     ..==============
     2bb:	3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d 3d     ================
     2cb:	3d 3d 3d 3d 3d 3d 3d 3d 3d 0d 0a 00                 =========...

000002d7 <__c.3609>:
     2d7:	2d 2d 4d 51 54 54 20 43 6f 6e 6e 65 63 74 65 64     --MQTT Connected
     2e7:	20 45 52 52 4f 52 3a 20 25 6c 64 0d 0a 00            ERROR: %ld...

000002f5 <__c.3613>:
     2f5:	53 75 62 73 63 72 69 62 65 64 20 28 25 73 29 20     Subscribed (%s) 
     305:	25 64 0d 0a 00                                      %d...

0000030a <__c.3607>:
     30a:	2b 2b 4d 51 54 54 20 43 6f 6e 6e 65 63 74 65 64     ++MQTT Connected
     31a:	20 53 55 43 43 45 53 53 3a 20 25 6c 64 0d 0a 00      SUCCESS: %ld...

0000032a <__c.3604>:
     32a:	3e 3e 54 72 79 69 6e 67 20 63 6f 6e 6e 65 63 74     >>Trying connect
     33a:	20 74 6f 20 4d 51 54 54 20 62 72 6f 6b 65 72 3a      to MQTT broker:
     34a:	20 25 64 2e 25 64 2e 25 64 2e 25 64 20 2e 2e 0d      %d.%d.%d.%d ...
     35a:	0a 00                                               ..

0000035c <__c.3594>:
     35c:	3e 3e 20 46 72 65 65 20 52 41 4d 20 69 73 3a 20     >> Free RAM is: 
     36c:	25 64 20 62 79 74 65 73 0d 0a 00                    %d bytes...

00000377 <__c.3517>:
     377:	43 6f 6e 6e 65 63 74 69 6f 6e 20 77 69 74 68 20     Connection with 
     387:	4d 51 54 54 20 42 72 6f 6b 65 72 20 77 61 73 20     MQTT Broker was 
     397:	6c 6f 73 74 21 21 0d 0a 52 65 62 6f 6f 74 20 74     lost!!..Reboot t
     3a7:	68 65 20 62 6f 61 72 64 2e 2e 0d 0a 00              he board.....

000003b4 <__c.3515>:
     3b4:	20 2d 20 45 52 52 4f 52 0d 0a 00                     - ERROR...

000003bf <__c.3513>:
     3bf:	20 2d 20 4f 4b 0d 0a 00                              - OK...

000003c7 <__c.3510>:
     3c7:	3e 3e 4d 51 54 54 20 70 75 62 20 6d 73 67 20 25     >>MQTT pub msg %
     3d7:	6c 75 20 00                                         lu .

000003db <__c.3499>:
     3db:	3c 3c 4d 51 54 54 20 53 75 62 3a 20 5b 25 73 5d     <<MQTT Sub: [%s]
     3eb:	20 25 73 00 00                                       %s..

000003f0 <__ctors_end>:
     3f0:	11 24       	eor	r1, r1
     3f2:	1f be       	out	0x3f, r1	; 63
     3f4:	cf ef       	ldi	r28, 0xFF	; 255
     3f6:	d1 e8       	ldi	r29, 0x81	; 129
     3f8:	de bf       	out	0x3e, r29	; 62
     3fa:	cd bf       	out	0x3d, r28	; 61
     3fc:	00 e0       	ldi	r16, 0x00	; 0
     3fe:	0c bf       	out	0x3c, r16	; 60

00000400 <get_mcusr>:
void get_mcusr(void) \
  __attribute__((naked)) \
  __attribute__((section(".init3")));
void get_mcusr(void)
{
  mcucsr_mirror = MCUSR;
     400:	84 b7       	in	r24, 0x34	; 52
     402:	80 93 bf 1c 	sts	0x1CBF, r24	; 0x801cbf <__bss_end>
  MCUSR = 0;
     406:	14 be       	out	0x34, r1	; 52
		);
	}
	else
	{
        uint8_t register temp_reg;
		__asm__ __volatile__ (
     408:	0f b6       	in	r0, 0x3f	; 63
     40a:	f8 94       	cli
     40c:	a8 95       	wdr
     40e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     412:	88 61       	ori	r24, 0x18	; 24
     414:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     418:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     41c:	0f be       	out	0x3f, r0	; 63

0000041e <__do_copy_data>:
     41e:	13 e0       	ldi	r17, 0x03	; 3
     420:	a0 e0       	ldi	r26, 0x00	; 0
     422:	b2 e0       	ldi	r27, 0x02	; 2
     424:	ee e8       	ldi	r30, 0x8E	; 142
     426:	fa e6       	ldi	r31, 0x6A	; 106
     428:	00 e0       	ldi	r16, 0x00	; 0
     42a:	0b bf       	out	0x3b, r16	; 59
     42c:	02 c0       	rjmp	.+4      	; 0x432 <__do_copy_data+0x14>
     42e:	07 90       	elpm	r0, Z+
     430:	0d 92       	st	X+, r0
     432:	ac 3e       	cpi	r26, 0xEC	; 236
     434:	b1 07       	cpc	r27, r17
     436:	d9 f7       	brne	.-10     	; 0x42e <__do_copy_data+0x10>

00000438 <__do_clear_bss>:
     438:	2c e1       	ldi	r18, 0x1C	; 28
     43a:	ac ee       	ldi	r26, 0xEC	; 236
     43c:	b3 e0       	ldi	r27, 0x03	; 3
     43e:	01 c0       	rjmp	.+2      	; 0x442 <.do_clear_bss_start>

00000440 <.do_clear_bss_loop>:
     440:	1d 92       	st	X+, r1

00000442 <.do_clear_bss_start>:
     442:	af 3b       	cpi	r26, 0xBF	; 191
     444:	b2 07       	cpc	r27, r18
     446:	e1 f7       	brne	.-8      	; 0x440 <.do_clear_bss_loop>
     448:	0e 94 1d 22 	call	0x443a	; 0x443a <main>
     44c:	0c 94 45 35 	jmp	0x6a8a	; 0x6a8a <_exit>

00000450 <__bad_interrupt>:
     450:	d7 cd       	rjmp	.-1106   	; 0x0 <__vectors>

00000452 <close>:
     452:	bf 92       	push	r11
     454:	cf 92       	push	r12
     456:	df 92       	push	r13
     458:	ef 92       	push	r14
     45a:	ff 92       	push	r15
     45c:	0f 93       	push	r16
     45e:	1f 93       	push	r17
     460:	cf 93       	push	r28
     462:	df 93       	push	r29
     464:	89 30       	cpi	r24, 0x09	; 9
     466:	08 f0       	brcs	.+2      	; 0x46a <close+0x18>
     468:	59 c0       	rjmp	.+178    	; 0x51c <close+0xca>
     46a:	b8 2e       	mov	r11, r24
     46c:	08 2f       	mov	r16, r24
     46e:	10 e0       	ldi	r17, 0x00	; 0
     470:	e8 01       	movw	r28, r16
     472:	cc 0f       	add	r28, r28
     474:	dd 1f       	adc	r29, r29
     476:	cc 0f       	add	r28, r28
     478:	dd 1f       	adc	r29, r29
     47a:	21 96       	adiw	r28, 0x01	; 1
     47c:	cc 0f       	add	r28, r28
     47e:	dd 1f       	adc	r29, r29
     480:	cc 0f       	add	r28, r28
     482:	dd 1f       	adc	r29, r29
     484:	cc 0f       	add	r28, r28
     486:	dd 1f       	adc	r29, r29
     488:	6e 01       	movw	r12, r28
     48a:	d3 94       	inc	r13
     48c:	0d 2c       	mov	r0, r13
     48e:	00 0c       	add	r0, r0
     490:	ee 08       	sbc	r14, r14
     492:	ff 08       	sbc	r15, r15
     494:	40 e1       	ldi	r20, 0x10	; 16
     496:	c7 01       	movw	r24, r14
     498:	b6 01       	movw	r22, r12
     49a:	c8 d4       	rcall	.+2448   	; 0xe2c <WIZCHIP_WRITE>
     49c:	c7 01       	movw	r24, r14
     49e:	b6 01       	movw	r22, r12
     4a0:	5e d4       	rcall	.+2236   	; 0xd5e <WIZCHIP_READ>
     4a2:	81 11       	cpse	r24, r1
     4a4:	fb cf       	rjmp	.-10     	; 0x49c <close+0x4a>
     4a6:	be 01       	movw	r22, r28
     4a8:	7e 5f       	subi	r23, 0xFE	; 254
     4aa:	07 2e       	mov	r0, r23
     4ac:	00 0c       	add	r0, r0
     4ae:	88 0b       	sbc	r24, r24
     4b0:	99 0b       	sbc	r25, r25
     4b2:	4f e1       	ldi	r20, 0x1F	; 31
     4b4:	bb d4       	rcall	.+2422   	; 0xe2c <WIZCHIP_WRITE>
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <close+0x6e>
     4bc:	88 0f       	add	r24, r24
     4be:	99 1f       	adc	r25, r25
     4c0:	ba 94       	dec	r11
     4c2:	e2 f7       	brpl	.-8      	; 0x4bc <close+0x6a>
     4c4:	80 95       	com	r24
     4c6:	90 95       	com	r25
     4c8:	20 91 06 04 	lds	r18, 0x0406	; 0x800406 <sock_io_mode>
     4cc:	30 91 07 04 	lds	r19, 0x0407	; 0x800407 <sock_io_mode+0x1>
     4d0:	28 23       	and	r18, r24
     4d2:	39 23       	and	r19, r25
     4d4:	30 93 07 04 	sts	0x0407, r19	; 0x800407 <sock_io_mode+0x1>
     4d8:	20 93 06 04 	sts	0x0406, r18	; 0x800406 <sock_io_mode>
     4dc:	20 91 04 04 	lds	r18, 0x0404	; 0x800404 <sock_is_sending>
     4e0:	30 91 05 04 	lds	r19, 0x0405	; 0x800405 <sock_is_sending+0x1>
     4e4:	82 23       	and	r24, r18
     4e6:	93 23       	and	r25, r19
     4e8:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <sock_is_sending+0x1>
     4ec:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <sock_is_sending>
     4f0:	f8 01       	movw	r30, r16
     4f2:	ee 0f       	add	r30, r30
     4f4:	ff 1f       	adc	r31, r31
     4f6:	ec 50       	subi	r30, 0x0C	; 12
     4f8:	fc 4f       	sbci	r31, 0xFC	; 252
     4fa:	11 82       	std	Z+1, r1	; 0x01
     4fc:	10 82       	st	Z, r1
     4fe:	f8 01       	movw	r30, r16
     500:	e4 51       	subi	r30, 0x14	; 20
     502:	fc 4f       	sbci	r31, 0xFC	; 252
     504:	10 82       	st	Z, r1
     506:	be 01       	movw	r22, r28
     508:	7d 5f       	subi	r23, 0xFD	; 253
     50a:	07 2e       	mov	r0, r23
     50c:	00 0c       	add	r0, r0
     50e:	88 0b       	sbc	r24, r24
     510:	99 0b       	sbc	r25, r25
     512:	25 d4       	rcall	.+2122   	; 0xd5e <WIZCHIP_READ>
     514:	81 11       	cpse	r24, r1
     516:	f7 cf       	rjmp	.-18     	; 0x506 <close+0xb4>
     518:	81 e0       	ldi	r24, 0x01	; 1
     51a:	01 c0       	rjmp	.+2      	; 0x51e <close+0xcc>
     51c:	8f ef       	ldi	r24, 0xFF	; 255
     51e:	df 91       	pop	r29
     520:	cf 91       	pop	r28
     522:	1f 91       	pop	r17
     524:	0f 91       	pop	r16
     526:	ff 90       	pop	r15
     528:	ef 90       	pop	r14
     52a:	df 90       	pop	r13
     52c:	cf 90       	pop	r12
     52e:	bf 90       	pop	r11
     530:	08 95       	ret

00000532 <socket>:
     532:	4f 92       	push	r4
     534:	5f 92       	push	r5
     536:	6f 92       	push	r6
     538:	7f 92       	push	r7
     53a:	af 92       	push	r10
     53c:	bf 92       	push	r11
     53e:	cf 92       	push	r12
     540:	df 92       	push	r13
     542:	ef 92       	push	r14
     544:	ff 92       	push	r15
     546:	0f 93       	push	r16
     548:	1f 93       	push	r17
     54a:	cf 93       	push	r28
     54c:	df 93       	push	r29
     54e:	00 d0       	rcall	.+0      	; 0x550 <socket+0x1e>
     550:	1f 92       	push	r1
     552:	cd b7       	in	r28, 0x3d	; 61
     554:	de b7       	in	r29, 0x3e	; 62
     556:	f8 2e       	mov	r15, r24
     558:	56 2e       	mov	r5, r22
     55a:	3a 01       	movw	r6, r20
     55c:	e2 2e       	mov	r14, r18
     55e:	28 e0       	ldi	r18, 0x08	; 8
     560:	28 17       	cp	r18, r24
     562:	08 f4       	brcc	.+2      	; 0x566 <socket+0x34>
     564:	c5 c0       	rjmp	.+394    	; 0x6f0 <socket+0x1be>
     566:	81 e0       	ldi	r24, 0x01	; 1
     568:	68 17       	cp	r22, r24
     56a:	39 f0       	breq	.+14     	; 0x57a <socket+0x48>
     56c:	68 17       	cp	r22, r24
     56e:	08 f4       	brcc	.+2      	; 0x572 <socket+0x40>
     570:	c1 c0       	rjmp	.+386    	; 0x6f4 <socket+0x1c2>
     572:	24 e0       	ldi	r18, 0x04	; 4
     574:	26 17       	cp	r18, r22
     576:	a8 f4       	brcc	.+42     	; 0x5a2 <socket+0x70>
     578:	bd c0       	rjmp	.+378    	; 0x6f4 <socket+0x1c2>
     57a:	24 e0       	ldi	r18, 0x04	; 4
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	ae 01       	movw	r20, r28
     580:	4f 5f       	subi	r20, 0xFF	; 255
     582:	5f 4f       	sbci	r21, 0xFF	; 255
     584:	60 e0       	ldi	r22, 0x00	; 0
     586:	7f e0       	ldi	r23, 0x0F	; 15
     588:	80 e0       	ldi	r24, 0x00	; 0
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	c1 d4       	rcall	.+2434   	; 0xf10 <WIZCHIP_READ_BUF>
     58e:	89 81       	ldd	r24, Y+1	; 0x01
     590:	9a 81       	ldd	r25, Y+2	; 0x02
     592:	ab 81       	ldd	r26, Y+3	; 0x03
     594:	bc 81       	ldd	r27, Y+4	; 0x04
     596:	89 2b       	or	r24, r25
     598:	8a 2b       	or	r24, r26
     59a:	8b 2b       	or	r24, r27
     59c:	11 f4       	brne	.+4      	; 0x5a2 <socket+0x70>
     59e:	8d ef       	ldi	r24, 0xFD	; 253
     5a0:	b2 c0       	rjmp	.+356    	; 0x706 <socket+0x1d4>
     5a2:	e2 fc       	sbrc	r14, 2
     5a4:	a9 c0       	rjmp	.+338    	; 0x6f8 <socket+0x1c6>
     5a6:	ee 20       	and	r14, r14
     5a8:	a9 f0       	breq	.+42     	; 0x5d4 <socket+0xa2>
     5aa:	81 e0       	ldi	r24, 0x01	; 1
     5ac:	58 16       	cp	r5, r24
     5ae:	21 f0       	breq	.+8      	; 0x5b8 <socket+0x86>
     5b0:	22 e0       	ldi	r18, 0x02	; 2
     5b2:	52 16       	cp	r5, r18
     5b4:	29 f0       	breq	.+10     	; 0x5c0 <socket+0x8e>
     5b6:	0e c0       	rjmp	.+28     	; 0x5d4 <socket+0xa2>
     5b8:	8e 2d       	mov	r24, r14
     5ba:	81 72       	andi	r24, 0x21	; 33
     5bc:	59 f4       	brne	.+22     	; 0x5d4 <socket+0xa2>
     5be:	9e c0       	rjmp	.+316    	; 0x6fc <socket+0x1ca>
     5c0:	e5 fe       	sbrs	r14, 5
     5c2:	03 c0       	rjmp	.+6      	; 0x5ca <socket+0x98>
     5c4:	ee 20       	and	r14, r14
     5c6:	0c f0       	brlt	.+2      	; 0x5ca <socket+0x98>
     5c8:	9b c0       	rjmp	.+310    	; 0x700 <socket+0x1ce>
     5ca:	e4 fe       	sbrs	r14, 4
     5cc:	03 c0       	rjmp	.+6      	; 0x5d4 <socket+0xa2>
     5ce:	ee 20       	and	r14, r14
     5d0:	0c f0       	brlt	.+2      	; 0x5d4 <socket+0xa2>
     5d2:	98 c0       	rjmp	.+304    	; 0x704 <socket+0x1d2>
     5d4:	8f 2d       	mov	r24, r15
     5d6:	3d df       	rcall	.-390    	; 0x452 <close>
     5d8:	cf 2c       	mov	r12, r15
     5da:	d1 2c       	mov	r13, r1
     5dc:	86 01       	movw	r16, r12
     5de:	00 0f       	add	r16, r16
     5e0:	11 1f       	adc	r17, r17
     5e2:	00 0f       	add	r16, r16
     5e4:	11 1f       	adc	r17, r17
     5e6:	0f 5f       	subi	r16, 0xFF	; 255
     5e8:	1f 4f       	sbci	r17, 0xFF	; 255
     5ea:	00 0f       	add	r16, r16
     5ec:	11 1f       	adc	r17, r17
     5ee:	00 0f       	add	r16, r16
     5f0:	11 1f       	adc	r17, r17
     5f2:	00 0f       	add	r16, r16
     5f4:	11 1f       	adc	r17, r17
     5f6:	4e 2d       	mov	r20, r14
     5f8:	40 7f       	andi	r20, 0xF0	; 240
     5fa:	45 29       	or	r20, r5
     5fc:	b8 01       	movw	r22, r16
     5fe:	01 2e       	mov	r0, r17
     600:	00 0c       	add	r0, r0
     602:	88 0b       	sbc	r24, r24
     604:	99 0b       	sbc	r25, r25
     606:	12 d4       	rcall	.+2084   	; 0xe2c <WIZCHIP_WRITE>
     608:	61 14       	cp	r6, r1
     60a:	71 04       	cpc	r7, r1
     60c:	91 f4       	brne	.+36     	; 0x632 <socket+0x100>
     60e:	60 90 04 02 	lds	r6, 0x0204	; 0x800204 <sock_any_port>
     612:	70 90 05 02 	lds	r7, 0x0205	; 0x800205 <sock_any_port+0x1>
     616:	c3 01       	movw	r24, r6
     618:	01 96       	adiw	r24, 0x01	; 1
     61a:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <sock_any_port+0x1>
     61e:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <sock_any_port>
     622:	40 96       	adiw	r24, 0x10	; 16
     624:	31 f4       	brne	.+12     	; 0x632 <socket+0x100>
     626:	80 e0       	ldi	r24, 0x00	; 0
     628:	90 ec       	ldi	r25, 0xC0	; 192
     62a:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <sock_any_port+0x1>
     62e:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <sock_any_port>
     632:	b8 01       	movw	r22, r16
     634:	7c 5f       	subi	r23, 0xFC	; 252
     636:	07 2e       	mov	r0, r23
     638:	00 0c       	add	r0, r0
     63a:	88 0b       	sbc	r24, r24
     63c:	99 0b       	sbc	r25, r25
     63e:	47 2d       	mov	r20, r7
     640:	f5 d3       	rcall	.+2026   	; 0xe2c <WIZCHIP_WRITE>
     642:	b8 01       	movw	r22, r16
     644:	7b 5f       	subi	r23, 0xFB	; 251
     646:	07 2e       	mov	r0, r23
     648:	00 0c       	add	r0, r0
     64a:	88 0b       	sbc	r24, r24
     64c:	99 0b       	sbc	r25, r25
     64e:	46 2d       	mov	r20, r6
     650:	ed d3       	rcall	.+2010   	; 0xe2c <WIZCHIP_WRITE>
     652:	28 01       	movw	r4, r16
     654:	53 94       	inc	r5
     656:	05 2c       	mov	r0, r5
     658:	00 0c       	add	r0, r0
     65a:	66 08       	sbc	r6, r6
     65c:	77 08       	sbc	r7, r7
     65e:	41 e0       	ldi	r20, 0x01	; 1
     660:	c3 01       	movw	r24, r6
     662:	b2 01       	movw	r22, r4
     664:	e3 d3       	rcall	.+1990   	; 0xe2c <WIZCHIP_WRITE>
     666:	c3 01       	movw	r24, r6
     668:	b2 01       	movw	r22, r4
     66a:	79 d3       	rcall	.+1778   	; 0xd5e <WIZCHIP_READ>
     66c:	81 11       	cpse	r24, r1
     66e:	fb cf       	rjmp	.-10     	; 0x666 <socket+0x134>
     670:	81 e0       	ldi	r24, 0x01	; 1
     672:	90 e0       	ldi	r25, 0x00	; 0
     674:	0f 2c       	mov	r0, r15
     676:	02 c0       	rjmp	.+4      	; 0x67c <socket+0x14a>
     678:	88 0f       	add	r24, r24
     67a:	99 1f       	adc	r25, r25
     67c:	0a 94       	dec	r0
     67e:	e2 f7       	brpl	.-8      	; 0x678 <socket+0x146>
     680:	80 95       	com	r24
     682:	90 95       	com	r25
     684:	20 91 06 04 	lds	r18, 0x0406	; 0x800406 <sock_io_mode>
     688:	30 91 07 04 	lds	r19, 0x0407	; 0x800407 <sock_io_mode+0x1>
     68c:	28 23       	and	r18, r24
     68e:	39 23       	and	r19, r25
     690:	e0 fa       	bst	r14, 0
     692:	aa 24       	eor	r10, r10
     694:	a0 f8       	bld	r10, 0
     696:	b1 2c       	mov	r11, r1
     698:	0f 2c       	mov	r0, r15
     69a:	02 c0       	rjmp	.+4      	; 0x6a0 <socket+0x16e>
     69c:	aa 0c       	add	r10, r10
     69e:	bb 1c       	adc	r11, r11
     6a0:	0a 94       	dec	r0
     6a2:	e2 f7       	brpl	.-8      	; 0x69c <socket+0x16a>
     6a4:	a2 2a       	or	r10, r18
     6a6:	b3 2a       	or	r11, r19
     6a8:	b0 92 07 04 	sts	0x0407, r11	; 0x800407 <sock_io_mode+0x1>
     6ac:	a0 92 06 04 	sts	0x0406, r10	; 0x800406 <sock_io_mode>
     6b0:	20 91 04 04 	lds	r18, 0x0404	; 0x800404 <sock_is_sending>
     6b4:	30 91 05 04 	lds	r19, 0x0405	; 0x800405 <sock_is_sending+0x1>
     6b8:	82 23       	and	r24, r18
     6ba:	93 23       	and	r25, r19
     6bc:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <sock_is_sending+0x1>
     6c0:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <sock_is_sending>
     6c4:	f6 01       	movw	r30, r12
     6c6:	ee 0f       	add	r30, r30
     6c8:	ff 1f       	adc	r31, r31
     6ca:	ec 50       	subi	r30, 0x0C	; 12
     6cc:	fc 4f       	sbci	r31, 0xFC	; 252
     6ce:	11 82       	std	Z+1, r1	; 0x01
     6d0:	10 82       	st	Z, r1
     6d2:	f6 01       	movw	r30, r12
     6d4:	e4 51       	subi	r30, 0x14	; 20
     6d6:	fc 4f       	sbci	r31, 0xFC	; 252
     6d8:	10 82       	st	Z, r1
     6da:	b8 01       	movw	r22, r16
     6dc:	7d 5f       	subi	r23, 0xFD	; 253
     6de:	07 2e       	mov	r0, r23
     6e0:	00 0c       	add	r0, r0
     6e2:	88 0b       	sbc	r24, r24
     6e4:	99 0b       	sbc	r25, r25
     6e6:	3b d3       	rcall	.+1654   	; 0xd5e <WIZCHIP_READ>
     6e8:	88 23       	and	r24, r24
     6ea:	b9 f3       	breq	.-18     	; 0x6da <socket+0x1a8>
     6ec:	8f 2d       	mov	r24, r15
     6ee:	0b c0       	rjmp	.+22     	; 0x706 <socket+0x1d4>
     6f0:	8f ef       	ldi	r24, 0xFF	; 255
     6f2:	09 c0       	rjmp	.+18     	; 0x706 <socket+0x1d4>
     6f4:	8b ef       	ldi	r24, 0xFB	; 251
     6f6:	07 c0       	rjmp	.+14     	; 0x706 <socket+0x1d4>
     6f8:	8a ef       	ldi	r24, 0xFA	; 250
     6fa:	05 c0       	rjmp	.+10     	; 0x706 <socket+0x1d4>
     6fc:	8a ef       	ldi	r24, 0xFA	; 250
     6fe:	03 c0       	rjmp	.+6      	; 0x706 <socket+0x1d4>
     700:	8a ef       	ldi	r24, 0xFA	; 250
     702:	01 c0       	rjmp	.+2      	; 0x706 <socket+0x1d4>
     704:	8a ef       	ldi	r24, 0xFA	; 250
     706:	0f 90       	pop	r0
     708:	0f 90       	pop	r0
     70a:	0f 90       	pop	r0
     70c:	0f 90       	pop	r0
     70e:	df 91       	pop	r29
     710:	cf 91       	pop	r28
     712:	1f 91       	pop	r17
     714:	0f 91       	pop	r16
     716:	ff 90       	pop	r15
     718:	ef 90       	pop	r14
     71a:	df 90       	pop	r13
     71c:	cf 90       	pop	r12
     71e:	bf 90       	pop	r11
     720:	af 90       	pop	r10
     722:	7f 90       	pop	r7
     724:	6f 90       	pop	r6
     726:	5f 90       	pop	r5
     728:	4f 90       	pop	r4
     72a:	08 95       	ret

0000072c <connect>:
     72c:	8f 92       	push	r8
     72e:	9f 92       	push	r9
     730:	af 92       	push	r10
     732:	bf 92       	push	r11
     734:	cf 92       	push	r12
     736:	df 92       	push	r13
     738:	ef 92       	push	r14
     73a:	ff 92       	push	r15
     73c:	1f 93       	push	r17
     73e:	cf 93       	push	r28
     740:	df 93       	push	r29
     742:	89 30       	cpi	r24, 0x09	; 9
     744:	08 f0       	brcs	.+2      	; 0x748 <connect+0x1c>
     746:	ac c0       	rjmp	.+344    	; 0x8a0 <connect+0x174>
     748:	6a 01       	movw	r12, r20
     74a:	7b 01       	movw	r14, r22
     74c:	18 2f       	mov	r17, r24
     74e:	c8 2f       	mov	r28, r24
     750:	d0 e0       	ldi	r29, 0x00	; 0
     752:	cc 0f       	add	r28, r28
     754:	dd 1f       	adc	r29, r29
     756:	cc 0f       	add	r28, r28
     758:	dd 1f       	adc	r29, r29
     75a:	21 96       	adiw	r28, 0x01	; 1
     75c:	cc 0f       	add	r28, r28
     75e:	dd 1f       	adc	r29, r29
     760:	cc 0f       	add	r28, r28
     762:	dd 1f       	adc	r29, r29
     764:	cc 0f       	add	r28, r28
     766:	dd 1f       	adc	r29, r29
     768:	be 01       	movw	r22, r28
     76a:	0d 2e       	mov	r0, r29
     76c:	00 0c       	add	r0, r0
     76e:	88 0b       	sbc	r24, r24
     770:	99 0b       	sbc	r25, r25
     772:	f5 d2       	rcall	.+1514   	; 0xd5e <WIZCHIP_READ>
     774:	8f 70       	andi	r24, 0x0F	; 15
     776:	81 30       	cpi	r24, 0x01	; 1
     778:	09 f0       	breq	.+2      	; 0x77c <connect+0x50>
     77a:	94 c0       	rjmp	.+296    	; 0x8a4 <connect+0x178>
     77c:	4e 01       	movw	r8, r28
     77e:	8d ef       	ldi	r24, 0xFD	; 253
     780:	98 1a       	sub	r9, r24
     782:	09 2c       	mov	r0, r9
     784:	00 0c       	add	r0, r0
     786:	aa 08       	sbc	r10, r10
     788:	bb 08       	sbc	r11, r11
     78a:	c5 01       	movw	r24, r10
     78c:	b4 01       	movw	r22, r8
     78e:	e7 d2       	rcall	.+1486   	; 0xd5e <WIZCHIP_READ>
     790:	83 31       	cpi	r24, 0x13	; 19
     792:	09 f0       	breq	.+2      	; 0x796 <connect+0x6a>
     794:	89 c0       	rjmp	.+274    	; 0x8a8 <connect+0x17c>
     796:	f7 01       	movw	r30, r14
     798:	40 81       	ld	r20, Z
     79a:	50 e0       	ldi	r21, 0x00	; 0
     79c:	60 e0       	ldi	r22, 0x00	; 0
     79e:	70 e0       	ldi	r23, 0x00	; 0
     7a0:	76 2f       	mov	r23, r22
     7a2:	65 2f       	mov	r22, r21
     7a4:	54 2f       	mov	r21, r20
     7a6:	44 27       	eor	r20, r20
     7a8:	81 81       	ldd	r24, Z+1	; 0x01
     7aa:	48 0f       	add	r20, r24
     7ac:	51 1d       	adc	r21, r1
     7ae:	61 1d       	adc	r22, r1
     7b0:	71 1d       	adc	r23, r1
     7b2:	76 2f       	mov	r23, r22
     7b4:	65 2f       	mov	r22, r21
     7b6:	54 2f       	mov	r21, r20
     7b8:	44 27       	eor	r20, r20
     7ba:	82 81       	ldd	r24, Z+2	; 0x02
     7bc:	48 0f       	add	r20, r24
     7be:	51 1d       	adc	r21, r1
     7c0:	61 1d       	adc	r22, r1
     7c2:	71 1d       	adc	r23, r1
     7c4:	76 2f       	mov	r23, r22
     7c6:	65 2f       	mov	r22, r21
     7c8:	54 2f       	mov	r21, r20
     7ca:	44 27       	eor	r20, r20
     7cc:	83 81       	ldd	r24, Z+3	; 0x03
     7ce:	48 0f       	add	r20, r24
     7d0:	51 1d       	adc	r21, r1
     7d2:	61 1d       	adc	r22, r1
     7d4:	71 1d       	adc	r23, r1
     7d6:	41 50       	subi	r20, 0x01	; 1
     7d8:	51 09       	sbc	r21, r1
     7da:	61 09       	sbc	r22, r1
     7dc:	71 09       	sbc	r23, r1
     7de:	4e 3f       	cpi	r20, 0xFE	; 254
     7e0:	5f 4f       	sbci	r21, 0xFF	; 255
     7e2:	6f 4f       	sbci	r22, 0xFF	; 255
     7e4:	7f 4f       	sbci	r23, 0xFF	; 255
     7e6:	08 f0       	brcs	.+2      	; 0x7ea <connect+0xbe>
     7e8:	61 c0       	rjmp	.+194    	; 0x8ac <connect+0x180>
     7ea:	c1 14       	cp	r12, r1
     7ec:	d1 04       	cpc	r13, r1
     7ee:	09 f4       	brne	.+2      	; 0x7f2 <connect+0xc6>
     7f0:	5f c0       	rjmp	.+190    	; 0x8b0 <connect+0x184>
     7f2:	be 01       	movw	r22, r28
     7f4:	74 5f       	subi	r23, 0xF4	; 244
     7f6:	07 2e       	mov	r0, r23
     7f8:	00 0c       	add	r0, r0
     7fa:	88 0b       	sbc	r24, r24
     7fc:	99 0b       	sbc	r25, r25
     7fe:	24 e0       	ldi	r18, 0x04	; 4
     800:	30 e0       	ldi	r19, 0x00	; 0
     802:	a7 01       	movw	r20, r14
     804:	07 d4       	rcall	.+2062   	; 0x1014 <WIZCHIP_WRITE_BUF>
     806:	be 01       	movw	r22, r28
     808:	70 5f       	subi	r23, 0xF0	; 240
     80a:	07 2e       	mov	r0, r23
     80c:	00 0c       	add	r0, r0
     80e:	88 0b       	sbc	r24, r24
     810:	99 0b       	sbc	r25, r25
     812:	4d 2d       	mov	r20, r13
     814:	0b d3       	rcall	.+1558   	; 0xe2c <WIZCHIP_WRITE>
     816:	be 01       	movw	r22, r28
     818:	7f 5e       	subi	r23, 0xEF	; 239
     81a:	07 2e       	mov	r0, r23
     81c:	00 0c       	add	r0, r0
     81e:	88 0b       	sbc	r24, r24
     820:	99 0b       	sbc	r25, r25
     822:	4c 2d       	mov	r20, r12
     824:	03 d3       	rcall	.+1542   	; 0xe2c <WIZCHIP_WRITE>
     826:	6e 01       	movw	r12, r28
     828:	d3 94       	inc	r13
     82a:	0d 2c       	mov	r0, r13
     82c:	00 0c       	add	r0, r0
     82e:	ee 08       	sbc	r14, r14
     830:	ff 08       	sbc	r15, r15
     832:	44 e0       	ldi	r20, 0x04	; 4
     834:	c7 01       	movw	r24, r14
     836:	b6 01       	movw	r22, r12
     838:	f9 d2       	rcall	.+1522   	; 0xe2c <WIZCHIP_WRITE>
     83a:	c7 01       	movw	r24, r14
     83c:	b6 01       	movw	r22, r12
     83e:	8f d2       	rcall	.+1310   	; 0xd5e <WIZCHIP_READ>
     840:	81 11       	cpse	r24, r1
     842:	fb cf       	rjmp	.-10     	; 0x83a <connect+0x10e>
     844:	81 e0       	ldi	r24, 0x01	; 1
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	02 c0       	rjmp	.+4      	; 0x84e <connect+0x122>
     84a:	88 0f       	add	r24, r24
     84c:	99 1f       	adc	r25, r25
     84e:	1a 95       	dec	r17
     850:	e2 f7       	brpl	.-8      	; 0x84a <connect+0x11e>
     852:	20 91 06 04 	lds	r18, 0x0406	; 0x800406 <sock_io_mode>
     856:	30 91 07 04 	lds	r19, 0x0407	; 0x800407 <sock_io_mode+0x1>
     85a:	82 23       	and	r24, r18
     85c:	93 23       	and	r25, r19
     85e:	89 2b       	or	r24, r25
     860:	c1 f0       	breq	.+48     	; 0x892 <connect+0x166>
     862:	28 c0       	rjmp	.+80     	; 0x8b4 <connect+0x188>
     864:	6e 01       	movw	r12, r28
     866:	ee ef       	ldi	r30, 0xFE	; 254
     868:	de 1a       	sub	r13, r30
     86a:	0d 2c       	mov	r0, r13
     86c:	00 0c       	add	r0, r0
     86e:	ee 08       	sbc	r14, r14
     870:	ff 08       	sbc	r15, r15
     872:	c7 01       	movw	r24, r14
     874:	b6 01       	movw	r22, r12
     876:	73 d2       	rcall	.+1254   	; 0xd5e <WIZCHIP_READ>
     878:	83 ff       	sbrs	r24, 3
     87a:	06 c0       	rjmp	.+12     	; 0x888 <connect+0x15c>
     87c:	48 e0       	ldi	r20, 0x08	; 8
     87e:	c7 01       	movw	r24, r14
     880:	b6 01       	movw	r22, r12
     882:	d4 d2       	rcall	.+1448   	; 0xe2c <WIZCHIP_WRITE>
     884:	83 ef       	ldi	r24, 0xF3	; 243
     886:	19 c0       	rjmp	.+50     	; 0x8ba <connect+0x18e>
     888:	c5 01       	movw	r24, r10
     88a:	b4 01       	movw	r22, r8
     88c:	68 d2       	rcall	.+1232   	; 0xd5e <WIZCHIP_READ>
     88e:	88 23       	and	r24, r24
     890:	99 f0       	breq	.+38     	; 0x8b8 <connect+0x18c>
     892:	c5 01       	movw	r24, r10
     894:	b4 01       	movw	r22, r8
     896:	63 d2       	rcall	.+1222   	; 0xd5e <WIZCHIP_READ>
     898:	87 31       	cpi	r24, 0x17	; 23
     89a:	21 f7       	brne	.-56     	; 0x864 <connect+0x138>
     89c:	81 e0       	ldi	r24, 0x01	; 1
     89e:	0d c0       	rjmp	.+26     	; 0x8ba <connect+0x18e>
     8a0:	8f ef       	ldi	r24, 0xFF	; 255
     8a2:	0b c0       	rjmp	.+22     	; 0x8ba <connect+0x18e>
     8a4:	8b ef       	ldi	r24, 0xFB	; 251
     8a6:	09 c0       	rjmp	.+18     	; 0x8ba <connect+0x18e>
     8a8:	8d ef       	ldi	r24, 0xFD	; 253
     8aa:	07 c0       	rjmp	.+14     	; 0x8ba <connect+0x18e>
     8ac:	84 ef       	ldi	r24, 0xF4	; 244
     8ae:	05 c0       	rjmp	.+10     	; 0x8ba <connect+0x18e>
     8b0:	85 ef       	ldi	r24, 0xF5	; 245
     8b2:	03 c0       	rjmp	.+6      	; 0x8ba <connect+0x18e>
     8b4:	80 e0       	ldi	r24, 0x00	; 0
     8b6:	01 c0       	rjmp	.+2      	; 0x8ba <connect+0x18e>
     8b8:	8c ef       	ldi	r24, 0xFC	; 252
     8ba:	df 91       	pop	r29
     8bc:	cf 91       	pop	r28
     8be:	1f 91       	pop	r17
     8c0:	ff 90       	pop	r15
     8c2:	ef 90       	pop	r14
     8c4:	df 90       	pop	r13
     8c6:	cf 90       	pop	r12
     8c8:	bf 90       	pop	r11
     8ca:	af 90       	pop	r10
     8cc:	9f 90       	pop	r9
     8ce:	8f 90       	pop	r8
     8d0:	08 95       	ret

000008d2 <disconnect>:
     8d2:	cf 92       	push	r12
     8d4:	df 92       	push	r13
     8d6:	ef 92       	push	r14
     8d8:	ff 92       	push	r15
     8da:	1f 93       	push	r17
     8dc:	cf 93       	push	r28
     8de:	df 93       	push	r29
     8e0:	89 30       	cpi	r24, 0x09	; 9
     8e2:	08 f0       	brcs	.+2      	; 0x8e6 <disconnect+0x14>
     8e4:	5d c0       	rjmp	.+186    	; 0x9a0 <disconnect+0xce>
     8e6:	18 2f       	mov	r17, r24
     8e8:	c8 2f       	mov	r28, r24
     8ea:	d0 e0       	ldi	r29, 0x00	; 0
     8ec:	cc 0f       	add	r28, r28
     8ee:	dd 1f       	adc	r29, r29
     8f0:	cc 0f       	add	r28, r28
     8f2:	dd 1f       	adc	r29, r29
     8f4:	21 96       	adiw	r28, 0x01	; 1
     8f6:	cc 0f       	add	r28, r28
     8f8:	dd 1f       	adc	r29, r29
     8fa:	cc 0f       	add	r28, r28
     8fc:	dd 1f       	adc	r29, r29
     8fe:	cc 0f       	add	r28, r28
     900:	dd 1f       	adc	r29, r29
     902:	be 01       	movw	r22, r28
     904:	0d 2e       	mov	r0, r29
     906:	00 0c       	add	r0, r0
     908:	88 0b       	sbc	r24, r24
     90a:	99 0b       	sbc	r25, r25
     90c:	28 d2       	rcall	.+1104   	; 0xd5e <WIZCHIP_READ>
     90e:	8f 70       	andi	r24, 0x0F	; 15
     910:	81 30       	cpi	r24, 0x01	; 1
     912:	09 f0       	breq	.+2      	; 0x916 <disconnect+0x44>
     914:	47 c0       	rjmp	.+142    	; 0x9a4 <disconnect+0xd2>
     916:	6e 01       	movw	r12, r28
     918:	d3 94       	inc	r13
     91a:	0d 2c       	mov	r0, r13
     91c:	00 0c       	add	r0, r0
     91e:	ee 08       	sbc	r14, r14
     920:	ff 08       	sbc	r15, r15
     922:	48 e0       	ldi	r20, 0x08	; 8
     924:	c7 01       	movw	r24, r14
     926:	b6 01       	movw	r22, r12
     928:	81 d2       	rcall	.+1282   	; 0xe2c <WIZCHIP_WRITE>
     92a:	c7 01       	movw	r24, r14
     92c:	b6 01       	movw	r22, r12
     92e:	17 d2       	rcall	.+1070   	; 0xd5e <WIZCHIP_READ>
     930:	81 11       	cpse	r24, r1
     932:	fb cf       	rjmp	.-10     	; 0x92a <disconnect+0x58>
     934:	81 e0       	ldi	r24, 0x01	; 1
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	01 2e       	mov	r0, r17
     93a:	02 c0       	rjmp	.+4      	; 0x940 <disconnect+0x6e>
     93c:	88 0f       	add	r24, r24
     93e:	99 1f       	adc	r25, r25
     940:	0a 94       	dec	r0
     942:	e2 f7       	brpl	.-8      	; 0x93c <disconnect+0x6a>
     944:	9c 01       	movw	r18, r24
     946:	20 95       	com	r18
     948:	30 95       	com	r19
     94a:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <sock_is_sending>
     94e:	50 91 05 04 	lds	r21, 0x0405	; 0x800405 <sock_is_sending+0x1>
     952:	24 23       	and	r18, r20
     954:	35 23       	and	r19, r21
     956:	30 93 05 04 	sts	0x0405, r19	; 0x800405 <sock_is_sending+0x1>
     95a:	20 93 04 04 	sts	0x0404, r18	; 0x800404 <sock_is_sending>
     95e:	20 91 06 04 	lds	r18, 0x0406	; 0x800406 <sock_io_mode>
     962:	30 91 07 04 	lds	r19, 0x0407	; 0x800407 <sock_io_mode+0x1>
     966:	82 23       	and	r24, r18
     968:	93 23       	and	r25, r19
     96a:	89 2b       	or	r24, r25
     96c:	71 f0       	breq	.+28     	; 0x98a <disconnect+0xb8>
     96e:	1c c0       	rjmp	.+56     	; 0x9a8 <disconnect+0xd6>
     970:	be 01       	movw	r22, r28
     972:	7e 5f       	subi	r23, 0xFE	; 254
     974:	07 2e       	mov	r0, r23
     976:	00 0c       	add	r0, r0
     978:	88 0b       	sbc	r24, r24
     97a:	99 0b       	sbc	r25, r25
     97c:	f0 d1       	rcall	.+992    	; 0xd5e <WIZCHIP_READ>
     97e:	83 ff       	sbrs	r24, 3
     980:	04 c0       	rjmp	.+8      	; 0x98a <disconnect+0xb8>
     982:	81 2f       	mov	r24, r17
     984:	66 dd       	rcall	.-1332   	; 0x452 <close>
     986:	83 ef       	ldi	r24, 0xF3	; 243
     988:	10 c0       	rjmp	.+32     	; 0x9aa <disconnect+0xd8>
     98a:	be 01       	movw	r22, r28
     98c:	7d 5f       	subi	r23, 0xFD	; 253
     98e:	07 2e       	mov	r0, r23
     990:	00 0c       	add	r0, r0
     992:	88 0b       	sbc	r24, r24
     994:	99 0b       	sbc	r25, r25
     996:	e3 d1       	rcall	.+966    	; 0xd5e <WIZCHIP_READ>
     998:	81 11       	cpse	r24, r1
     99a:	ea cf       	rjmp	.-44     	; 0x970 <disconnect+0x9e>
     99c:	81 e0       	ldi	r24, 0x01	; 1
     99e:	05 c0       	rjmp	.+10     	; 0x9aa <disconnect+0xd8>
     9a0:	8f ef       	ldi	r24, 0xFF	; 255
     9a2:	03 c0       	rjmp	.+6      	; 0x9aa <disconnect+0xd8>
     9a4:	8b ef       	ldi	r24, 0xFB	; 251
     9a6:	01 c0       	rjmp	.+2      	; 0x9aa <disconnect+0xd8>
     9a8:	80 e0       	ldi	r24, 0x00	; 0
     9aa:	df 91       	pop	r29
     9ac:	cf 91       	pop	r28
     9ae:	1f 91       	pop	r17
     9b0:	ff 90       	pop	r15
     9b2:	ef 90       	pop	r14
     9b4:	df 90       	pop	r13
     9b6:	cf 90       	pop	r12
     9b8:	08 95       	ret

000009ba <send>:
     9ba:	2f 92       	push	r2
     9bc:	3f 92       	push	r3
     9be:	4f 92       	push	r4
     9c0:	5f 92       	push	r5
     9c2:	6f 92       	push	r6
     9c4:	7f 92       	push	r7
     9c6:	8f 92       	push	r8
     9c8:	9f 92       	push	r9
     9ca:	af 92       	push	r10
     9cc:	bf 92       	push	r11
     9ce:	cf 92       	push	r12
     9d0:	df 92       	push	r13
     9d2:	ef 92       	push	r14
     9d4:	ff 92       	push	r15
     9d6:	0f 93       	push	r16
     9d8:	1f 93       	push	r17
     9da:	cf 93       	push	r28
     9dc:	df 93       	push	r29
     9de:	00 d0       	rcall	.+0      	; 0x9e0 <send+0x26>
     9e0:	00 d0       	rcall	.+0      	; 0x9e2 <send+0x28>
     9e2:	cd b7       	in	r28, 0x3d	; 61
     9e4:	de b7       	in	r29, 0x3e	; 62
     9e6:	89 30       	cpi	r24, 0x09	; 9
     9e8:	08 f0       	brcs	.+2      	; 0x9ec <send+0x32>
     9ea:	c7 c0       	rjmp	.+398    	; 0xb7a <send+0x1c0>
     9ec:	5e 83       	std	Y+6, r21	; 0x06
     9ee:	4d 83       	std	Y+5, r20	; 0x05
     9f0:	1b 01       	movw	r2, r22
     9f2:	f8 2e       	mov	r15, r24
     9f4:	c8 2e       	mov	r12, r24
     9f6:	d1 2c       	mov	r13, r1
     9f8:	cc 0c       	add	r12, r12
     9fa:	dd 1c       	adc	r13, r13
     9fc:	cc 0c       	add	r12, r12
     9fe:	dd 1c       	adc	r13, r13
     a00:	2f ef       	ldi	r18, 0xFF	; 255
     a02:	c2 1a       	sub	r12, r18
     a04:	d2 0a       	sbc	r13, r18
     a06:	cc 0c       	add	r12, r12
     a08:	dd 1c       	adc	r13, r13
     a0a:	cc 0c       	add	r12, r12
     a0c:	dd 1c       	adc	r13, r13
     a0e:	cc 0c       	add	r12, r12
     a10:	dd 1c       	adc	r13, r13
     a12:	b6 01       	movw	r22, r12
     a14:	0d 2c       	mov	r0, r13
     a16:	00 0c       	add	r0, r0
     a18:	88 0b       	sbc	r24, r24
     a1a:	99 0b       	sbc	r25, r25
     a1c:	a0 d1       	rcall	.+832    	; 0xd5e <WIZCHIP_READ>
     a1e:	8f 70       	andi	r24, 0x0F	; 15
     a20:	81 30       	cpi	r24, 0x01	; 1
     a22:	09 f0       	breq	.+2      	; 0xa26 <send+0x6c>
     a24:	ae c0       	rjmp	.+348    	; 0xb82 <send+0x1c8>
     a26:	4d 81       	ldd	r20, Y+5	; 0x05
     a28:	5e 81       	ldd	r21, Y+6	; 0x06
     a2a:	45 2b       	or	r20, r21
     a2c:	09 f4       	brne	.+2      	; 0xa30 <send+0x76>
     a2e:	ae c0       	rjmp	.+348    	; 0xb8c <send+0x1d2>
     a30:	26 01       	movw	r4, r12
     a32:	5d ef       	ldi	r21, 0xFD	; 253
     a34:	55 1a       	sub	r5, r21
     a36:	05 2c       	mov	r0, r5
     a38:	00 0c       	add	r0, r0
     a3a:	66 08       	sbc	r6, r6
     a3c:	77 08       	sbc	r7, r7
     a3e:	c3 01       	movw	r24, r6
     a40:	b2 01       	movw	r22, r4
     a42:	8d d1       	rcall	.+794    	; 0xd5e <WIZCHIP_READ>
     a44:	87 31       	cpi	r24, 0x17	; 23
     a46:	19 f0       	breq	.+6      	; 0xa4e <send+0x94>
     a48:	8c 31       	cpi	r24, 0x1C	; 28
     a4a:	09 f0       	breq	.+2      	; 0xa4e <send+0x94>
     a4c:	a4 c0       	rjmp	.+328    	; 0xb96 <send+0x1dc>
     a4e:	81 e0       	ldi	r24, 0x01	; 1
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	4c 01       	movw	r8, r24
     a54:	0f 2c       	mov	r0, r15
     a56:	02 c0       	rjmp	.+4      	; 0xa5c <send+0xa2>
     a58:	88 0c       	add	r8, r8
     a5a:	99 1c       	adc	r9, r9
     a5c:	0a 94       	dec	r0
     a5e:	e2 f7       	brpl	.-8      	; 0xa58 <send+0x9e>
     a60:	54 01       	movw	r10, r8
     a62:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <sock_is_sending>
     a66:	90 91 05 04 	lds	r25, 0x0405	; 0x800405 <sock_is_sending+0x1>
     a6a:	88 21       	and	r24, r8
     a6c:	99 21       	and	r25, r9
     a6e:	89 2b       	or	r24, r25
     a70:	61 f1       	breq	.+88     	; 0xaca <send+0x110>
     a72:	c6 01       	movw	r24, r12
     a74:	9e 5f       	subi	r25, 0xFE	; 254
     a76:	9c 01       	movw	r18, r24
     a78:	99 0f       	add	r25, r25
     a7a:	44 0b       	sbc	r20, r20
     a7c:	55 0b       	sbc	r21, r21
     a7e:	29 83       	std	Y+1, r18	; 0x01
     a80:	3a 83       	std	Y+2, r19	; 0x02
     a82:	4b 83       	std	Y+3, r20	; 0x03
     a84:	5c 83       	std	Y+4, r21	; 0x04
     a86:	ca 01       	movw	r24, r20
     a88:	b9 01       	movw	r22, r18
     a8a:	69 d1       	rcall	.+722    	; 0xd5e <WIZCHIP_READ>
     a8c:	84 ff       	sbrs	r24, 4
     a8e:	14 c0       	rjmp	.+40     	; 0xab8 <send+0xfe>
     a90:	40 e1       	ldi	r20, 0x10	; 16
     a92:	69 81       	ldd	r22, Y+1	; 0x01
     a94:	7a 81       	ldd	r23, Y+2	; 0x02
     a96:	8b 81       	ldd	r24, Y+3	; 0x03
     a98:	9c 81       	ldd	r25, Y+4	; 0x04
     a9a:	c8 d1       	rcall	.+912    	; 0xe2c <WIZCHIP_WRITE>
     a9c:	20 91 04 04 	lds	r18, 0x0404	; 0x800404 <sock_is_sending>
     aa0:	30 91 05 04 	lds	r19, 0x0405	; 0x800405 <sock_is_sending+0x1>
     aa4:	c4 01       	movw	r24, r8
     aa6:	80 95       	com	r24
     aa8:	90 95       	com	r25
     aaa:	82 23       	and	r24, r18
     aac:	93 23       	and	r25, r19
     aae:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <sock_is_sending+0x1>
     ab2:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <sock_is_sending>
     ab6:	09 c0       	rjmp	.+18     	; 0xaca <send+0x110>
     ab8:	83 ff       	sbrs	r24, 3
     aba:	72 c0       	rjmp	.+228    	; 0xba0 <send+0x1e6>
     abc:	8f 2d       	mov	r24, r15
     abe:	c9 dc       	rcall	.-1646   	; 0x452 <close>
     ac0:	63 ef       	ldi	r22, 0xF3	; 243
     ac2:	7f ef       	ldi	r23, 0xFF	; 255
     ac4:	8f ef       	ldi	r24, 0xFF	; 255
     ac6:	9f ef       	ldi	r25, 0xFF	; 255
     ac8:	72 c0       	rjmp	.+228    	; 0xbae <send+0x1f4>
     aca:	b6 01       	movw	r22, r12
     acc:	71 5e       	subi	r23, 0xE1	; 225
     ace:	07 2e       	mov	r0, r23
     ad0:	00 0c       	add	r0, r0
     ad2:	88 0b       	sbc	r24, r24
     ad4:	99 0b       	sbc	r25, r25
     ad6:	43 d1       	rcall	.+646    	; 0xd5e <WIZCHIP_READ>
     ad8:	08 2f       	mov	r16, r24
     ada:	10 e0       	ldi	r17, 0x00	; 0
     adc:	10 2f       	mov	r17, r16
     ade:	00 27       	eor	r16, r16
     ae0:	11 0f       	add	r17, r17
     ae2:	11 0f       	add	r17, r17
     ae4:	4d 81       	ldd	r20, Y+5	; 0x05
     ae6:	5e 81       	ldd	r21, Y+6	; 0x06
     ae8:	04 17       	cp	r16, r20
     aea:	15 07       	cpc	r17, r21
     aec:	08 f0       	brcs	.+2      	; 0xaf0 <send+0x136>
     aee:	8a 01       	movw	r16, r20
     af0:	8f 2d       	mov	r24, r15
     af2:	17 d3       	rcall	.+1582   	; 0x1122 <getSn_TX_FSR>
     af4:	9a 83       	std	Y+2, r25	; 0x02
     af6:	89 83       	std	Y+1, r24	; 0x01
     af8:	c3 01       	movw	r24, r6
     afa:	b2 01       	movw	r22, r4
     afc:	30 d1       	rcall	.+608    	; 0xd5e <WIZCHIP_READ>
     afe:	87 31       	cpi	r24, 0x17	; 23
     b00:	49 f0       	breq	.+18     	; 0xb14 <send+0x15a>
     b02:	8c 31       	cpi	r24, 0x1C	; 28
     b04:	39 f0       	breq	.+14     	; 0xb14 <send+0x15a>
     b06:	8f 2d       	mov	r24, r15
     b08:	a4 dc       	rcall	.-1720   	; 0x452 <close>
     b0a:	69 ef       	ldi	r22, 0xF9	; 249
     b0c:	7f ef       	ldi	r23, 0xFF	; 255
     b0e:	8f ef       	ldi	r24, 0xFF	; 255
     b10:	9f ef       	ldi	r25, 0xFF	; 255
     b12:	4d c0       	rjmp	.+154    	; 0xbae <send+0x1f4>
     b14:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <sock_io_mode>
     b18:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <sock_io_mode+0x1>
     b1c:	8a 21       	and	r24, r10
     b1e:	9b 21       	and	r25, r11
     b20:	89 2b       	or	r24, r25
     b22:	31 f0       	breq	.+12     	; 0xb30 <send+0x176>
     b24:	89 81       	ldd	r24, Y+1	; 0x01
     b26:	9a 81       	ldd	r25, Y+2	; 0x02
     b28:	80 17       	cp	r24, r16
     b2a:	91 07       	cpc	r25, r17
     b2c:	08 f4       	brcc	.+2      	; 0xb30 <send+0x176>
     b2e:	3c c0       	rjmp	.+120    	; 0xba8 <send+0x1ee>
     b30:	29 81       	ldd	r18, Y+1	; 0x01
     b32:	3a 81       	ldd	r19, Y+2	; 0x02
     b34:	20 17       	cp	r18, r16
     b36:	31 07       	cpc	r19, r17
     b38:	d8 f2       	brcs	.-74     	; 0xaf0 <send+0x136>
     b3a:	a8 01       	movw	r20, r16
     b3c:	b1 01       	movw	r22, r2
     b3e:	8f 2d       	mov	r24, r15
     b40:	a0 d3       	rcall	.+1856   	; 0x1282 <wiz_send_data>
     b42:	d3 94       	inc	r13
     b44:	0d 2c       	mov	r0, r13
     b46:	00 0c       	add	r0, r0
     b48:	ee 08       	sbc	r14, r14
     b4a:	ff 08       	sbc	r15, r15
     b4c:	40 e2       	ldi	r20, 0x20	; 32
     b4e:	c7 01       	movw	r24, r14
     b50:	b6 01       	movw	r22, r12
     b52:	6c d1       	rcall	.+728    	; 0xe2c <WIZCHIP_WRITE>
     b54:	c7 01       	movw	r24, r14
     b56:	b6 01       	movw	r22, r12
     b58:	02 d1       	rcall	.+516    	; 0xd5e <WIZCHIP_READ>
     b5a:	81 11       	cpse	r24, r1
     b5c:	fb cf       	rjmp	.-10     	; 0xb54 <send+0x19a>
     b5e:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <sock_is_sending>
     b62:	90 91 05 04 	lds	r25, 0x0405	; 0x800405 <sock_is_sending+0x1>
     b66:	88 2a       	or	r8, r24
     b68:	99 2a       	or	r9, r25
     b6a:	90 92 05 04 	sts	0x0405, r9	; 0x800405 <sock_is_sending+0x1>
     b6e:	80 92 04 04 	sts	0x0404, r8	; 0x800404 <sock_is_sending>
     b72:	b8 01       	movw	r22, r16
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	1a c0       	rjmp	.+52     	; 0xbae <send+0x1f4>
     b7a:	6f ef       	ldi	r22, 0xFF	; 255
     b7c:	7f ef       	ldi	r23, 0xFF	; 255
     b7e:	cb 01       	movw	r24, r22
     b80:	16 c0       	rjmp	.+44     	; 0xbae <send+0x1f4>
     b82:	6b ef       	ldi	r22, 0xFB	; 251
     b84:	7f ef       	ldi	r23, 0xFF	; 255
     b86:	8f ef       	ldi	r24, 0xFF	; 255
     b88:	9f ef       	ldi	r25, 0xFF	; 255
     b8a:	11 c0       	rjmp	.+34     	; 0xbae <send+0x1f4>
     b8c:	62 ef       	ldi	r22, 0xF2	; 242
     b8e:	7f ef       	ldi	r23, 0xFF	; 255
     b90:	8f ef       	ldi	r24, 0xFF	; 255
     b92:	9f ef       	ldi	r25, 0xFF	; 255
     b94:	0c c0       	rjmp	.+24     	; 0xbae <send+0x1f4>
     b96:	69 ef       	ldi	r22, 0xF9	; 249
     b98:	7f ef       	ldi	r23, 0xFF	; 255
     b9a:	8f ef       	ldi	r24, 0xFF	; 255
     b9c:	9f ef       	ldi	r25, 0xFF	; 255
     b9e:	07 c0       	rjmp	.+14     	; 0xbae <send+0x1f4>
     ba0:	60 e0       	ldi	r22, 0x00	; 0
     ba2:	70 e0       	ldi	r23, 0x00	; 0
     ba4:	cb 01       	movw	r24, r22
     ba6:	03 c0       	rjmp	.+6      	; 0xbae <send+0x1f4>
     ba8:	60 e0       	ldi	r22, 0x00	; 0
     baa:	70 e0       	ldi	r23, 0x00	; 0
     bac:	cb 01       	movw	r24, r22
     bae:	26 96       	adiw	r28, 0x06	; 6
     bb0:	0f b6       	in	r0, 0x3f	; 63
     bb2:	f8 94       	cli
     bb4:	de bf       	out	0x3e, r29	; 62
     bb6:	0f be       	out	0x3f, r0	; 63
     bb8:	cd bf       	out	0x3d, r28	; 61
     bba:	df 91       	pop	r29
     bbc:	cf 91       	pop	r28
     bbe:	1f 91       	pop	r17
     bc0:	0f 91       	pop	r16
     bc2:	ff 90       	pop	r15
     bc4:	ef 90       	pop	r14
     bc6:	df 90       	pop	r13
     bc8:	cf 90       	pop	r12
     bca:	bf 90       	pop	r11
     bcc:	af 90       	pop	r10
     bce:	9f 90       	pop	r9
     bd0:	8f 90       	pop	r8
     bd2:	7f 90       	pop	r7
     bd4:	6f 90       	pop	r6
     bd6:	5f 90       	pop	r5
     bd8:	4f 90       	pop	r4
     bda:	3f 90       	pop	r3
     bdc:	2f 90       	pop	r2
     bde:	08 95       	ret

00000be0 <recv>:
     be0:	7f 92       	push	r7
     be2:	8f 92       	push	r8
     be4:	9f 92       	push	r9
     be6:	af 92       	push	r10
     be8:	bf 92       	push	r11
     bea:	cf 92       	push	r12
     bec:	df 92       	push	r13
     bee:	ef 92       	push	r14
     bf0:	ff 92       	push	r15
     bf2:	0f 93       	push	r16
     bf4:	1f 93       	push	r17
     bf6:	cf 93       	push	r28
     bf8:	df 93       	push	r29
     bfa:	89 30       	cpi	r24, 0x09	; 9
     bfc:	08 f0       	brcs	.+2      	; 0xc00 <recv+0x20>
     bfe:	90 c0       	rjmp	.+288    	; 0xd20 <recv+0x140>
     c00:	ea 01       	movw	r28, r20
     c02:	4b 01       	movw	r8, r22
     c04:	78 2e       	mov	r7, r24
     c06:	c8 2e       	mov	r12, r24
     c08:	d1 2c       	mov	r13, r1
     c0a:	86 01       	movw	r16, r12
     c0c:	00 0f       	add	r16, r16
     c0e:	11 1f       	adc	r17, r17
     c10:	00 0f       	add	r16, r16
     c12:	11 1f       	adc	r17, r17
     c14:	0f 5f       	subi	r16, 0xFF	; 255
     c16:	1f 4f       	sbci	r17, 0xFF	; 255
     c18:	00 0f       	add	r16, r16
     c1a:	11 1f       	adc	r17, r17
     c1c:	00 0f       	add	r16, r16
     c1e:	11 1f       	adc	r17, r17
     c20:	00 0f       	add	r16, r16
     c22:	11 1f       	adc	r17, r17
     c24:	b8 01       	movw	r22, r16
     c26:	01 2e       	mov	r0, r17
     c28:	00 0c       	add	r0, r0
     c2a:	88 0b       	sbc	r24, r24
     c2c:	99 0b       	sbc	r25, r25
     c2e:	97 d0       	rcall	.+302    	; 0xd5e <WIZCHIP_READ>
     c30:	8f 70       	andi	r24, 0x0F	; 15
     c32:	81 30       	cpi	r24, 0x01	; 1
     c34:	09 f0       	breq	.+2      	; 0xc38 <recv+0x58>
     c36:	78 c0       	rjmp	.+240    	; 0xd28 <recv+0x148>
     c38:	20 97       	sbiw	r28, 0x00	; 0
     c3a:	09 f4       	brne	.+2      	; 0xc3e <recv+0x5e>
     c3c:	7a c0       	rjmp	.+244    	; 0xd32 <recv+0x152>
     c3e:	b8 01       	movw	r22, r16
     c40:	72 5e       	subi	r23, 0xE2	; 226
     c42:	07 2e       	mov	r0, r23
     c44:	00 0c       	add	r0, r0
     c46:	88 0b       	sbc	r24, r24
     c48:	99 0b       	sbc	r25, r25
     c4a:	89 d0       	rcall	.+274    	; 0xd5e <WIZCHIP_READ>
     c4c:	a8 2e       	mov	r10, r24
     c4e:	b1 2c       	mov	r11, r1
     c50:	ba 2c       	mov	r11, r10
     c52:	aa 24       	eor	r10, r10
     c54:	bb 0c       	add	r11, r11
     c56:	bb 0c       	add	r11, r11
     c58:	ac 16       	cp	r10, r28
     c5a:	bd 06       	cpc	r11, r29
     c5c:	08 f0       	brcs	.+2      	; 0xc60 <recv+0x80>
     c5e:	5e 01       	movw	r10, r28
     c60:	87 2d       	mov	r24, r7
     c62:	b7 d2       	rcall	.+1390   	; 0x11d2 <getSn_RX_RSR>
     c64:	ec 01       	movw	r28, r24
     c66:	b8 01       	movw	r22, r16
     c68:	7d 5f       	subi	r23, 0xFD	; 253
     c6a:	07 2e       	mov	r0, r23
     c6c:	00 0c       	add	r0, r0
     c6e:	88 0b       	sbc	r24, r24
     c70:	99 0b       	sbc	r25, r25
     c72:	75 d0       	rcall	.+234    	; 0xd5e <WIZCHIP_READ>
     c74:	87 31       	cpi	r24, 0x17	; 23
     c76:	21 f1       	breq	.+72     	; 0xcc0 <recv+0xe0>
     c78:	8c 31       	cpi	r24, 0x1C	; 28
     c7a:	d9 f4       	brne	.+54     	; 0xcb2 <recv+0xd2>
     c7c:	20 97       	sbiw	r28, 0x00	; 0
     c7e:	a9 f5       	brne	.+106    	; 0xcea <recv+0x10a>
     c80:	87 2d       	mov	r24, r7
     c82:	4f d2       	rcall	.+1182   	; 0x1122 <getSn_TX_FSR>
     c84:	7c 01       	movw	r14, r24
     c86:	b8 01       	movw	r22, r16
     c88:	71 5e       	subi	r23, 0xE1	; 225
     c8a:	07 2e       	mov	r0, r23
     c8c:	00 0c       	add	r0, r0
     c8e:	88 0b       	sbc	r24, r24
     c90:	99 0b       	sbc	r25, r25
     c92:	65 d0       	rcall	.+202    	; 0xd5e <WIZCHIP_READ>
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	98 2f       	mov	r25, r24
     c98:	88 27       	eor	r24, r24
     c9a:	99 0f       	add	r25, r25
     c9c:	99 0f       	add	r25, r25
     c9e:	e8 16       	cp	r14, r24
     ca0:	f9 06       	cpc	r15, r25
     ca2:	71 f4       	brne	.+28     	; 0xcc0 <recv+0xe0>
     ca4:	87 2d       	mov	r24, r7
     ca6:	d5 db       	rcall	.-2134   	; 0x452 <close>
     ca8:	69 ef       	ldi	r22, 0xF9	; 249
     caa:	7f ef       	ldi	r23, 0xFF	; 255
     cac:	8f ef       	ldi	r24, 0xFF	; 255
     cae:	9f ef       	ldi	r25, 0xFF	; 255
     cb0:	48 c0       	rjmp	.+144    	; 0xd42 <recv+0x162>
     cb2:	87 2d       	mov	r24, r7
     cb4:	ce db       	rcall	.-2148   	; 0x452 <close>
     cb6:	69 ef       	ldi	r22, 0xF9	; 249
     cb8:	7f ef       	ldi	r23, 0xFF	; 255
     cba:	8f ef       	ldi	r24, 0xFF	; 255
     cbc:	9f ef       	ldi	r25, 0xFF	; 255
     cbe:	41 c0       	rjmp	.+130    	; 0xd42 <recv+0x162>
     cc0:	81 e0       	ldi	r24, 0x01	; 1
     cc2:	90 e0       	ldi	r25, 0x00	; 0
     cc4:	0c 2c       	mov	r0, r12
     cc6:	02 c0       	rjmp	.+4      	; 0xccc <recv+0xec>
     cc8:	88 0f       	add	r24, r24
     cca:	99 1f       	adc	r25, r25
     ccc:	0a 94       	dec	r0
     cce:	e2 f7       	brpl	.-8      	; 0xcc8 <recv+0xe8>
     cd0:	20 91 06 04 	lds	r18, 0x0406	; 0x800406 <sock_io_mode>
     cd4:	30 91 07 04 	lds	r19, 0x0407	; 0x800407 <sock_io_mode+0x1>
     cd8:	82 23       	and	r24, r18
     cda:	93 23       	and	r25, r19
     cdc:	89 2b       	or	r24, r25
     cde:	11 f0       	breq	.+4      	; 0xce4 <recv+0x104>
     ce0:	20 97       	sbiw	r28, 0x00	; 0
     ce2:	61 f1       	breq	.+88     	; 0xd3c <recv+0x15c>
     ce4:	20 97       	sbiw	r28, 0x00	; 0
     ce6:	09 f4       	brne	.+2      	; 0xcea <recv+0x10a>
     ce8:	bb cf       	rjmp	.-138    	; 0xc60 <recv+0x80>
     cea:	ca 15       	cp	r28, r10
     cec:	db 05       	cpc	r29, r11
     cee:	08 f0       	brcs	.+2      	; 0xcf2 <recv+0x112>
     cf0:	e5 01       	movw	r28, r10
     cf2:	ae 01       	movw	r20, r28
     cf4:	b4 01       	movw	r22, r8
     cf6:	87 2d       	mov	r24, r7
     cf8:	4b d3       	rcall	.+1686   	; 0x1390 <wiz_recv_data>
     cfa:	68 01       	movw	r12, r16
     cfc:	d3 94       	inc	r13
     cfe:	0d 2c       	mov	r0, r13
     d00:	00 0c       	add	r0, r0
     d02:	ee 08       	sbc	r14, r14
     d04:	ff 08       	sbc	r15, r15
     d06:	40 e4       	ldi	r20, 0x40	; 64
     d08:	c7 01       	movw	r24, r14
     d0a:	b6 01       	movw	r22, r12
     d0c:	8f d0       	rcall	.+286    	; 0xe2c <WIZCHIP_WRITE>
     d0e:	c7 01       	movw	r24, r14
     d10:	b6 01       	movw	r22, r12
     d12:	25 d0       	rcall	.+74     	; 0xd5e <WIZCHIP_READ>
     d14:	81 11       	cpse	r24, r1
     d16:	fb cf       	rjmp	.-10     	; 0xd0e <recv+0x12e>
     d18:	be 01       	movw	r22, r28
     d1a:	80 e0       	ldi	r24, 0x00	; 0
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	11 c0       	rjmp	.+34     	; 0xd42 <recv+0x162>
     d20:	6f ef       	ldi	r22, 0xFF	; 255
     d22:	7f ef       	ldi	r23, 0xFF	; 255
     d24:	cb 01       	movw	r24, r22
     d26:	0d c0       	rjmp	.+26     	; 0xd42 <recv+0x162>
     d28:	6b ef       	ldi	r22, 0xFB	; 251
     d2a:	7f ef       	ldi	r23, 0xFF	; 255
     d2c:	8f ef       	ldi	r24, 0xFF	; 255
     d2e:	9f ef       	ldi	r25, 0xFF	; 255
     d30:	08 c0       	rjmp	.+16     	; 0xd42 <recv+0x162>
     d32:	62 ef       	ldi	r22, 0xF2	; 242
     d34:	7f ef       	ldi	r23, 0xFF	; 255
     d36:	8f ef       	ldi	r24, 0xFF	; 255
     d38:	9f ef       	ldi	r25, 0xFF	; 255
     d3a:	03 c0       	rjmp	.+6      	; 0xd42 <recv+0x162>
     d3c:	60 e0       	ldi	r22, 0x00	; 0
     d3e:	70 e0       	ldi	r23, 0x00	; 0
     d40:	cb 01       	movw	r24, r22
     d42:	df 91       	pop	r29
     d44:	cf 91       	pop	r28
     d46:	1f 91       	pop	r17
     d48:	0f 91       	pop	r16
     d4a:	ff 90       	pop	r15
     d4c:	ef 90       	pop	r14
     d4e:	df 90       	pop	r13
     d50:	cf 90       	pop	r12
     d52:	bf 90       	pop	r11
     d54:	af 90       	pop	r10
     d56:	9f 90       	pop	r9
     d58:	8f 90       	pop	r8
     d5a:	7f 90       	pop	r7
     d5c:	08 95       	ret

00000d5e <WIZCHIP_READ>:
     d5e:	df 92       	push	r13
     d60:	ef 92       	push	r14
     d62:	ff 92       	push	r15
     d64:	0f 93       	push	r16
     d66:	1f 93       	push	r17
     d68:	cf 93       	push	r28
     d6a:	df 93       	push	r29
     d6c:	00 d0       	rcall	.+0      	; 0xd6e <WIZCHIP_READ+0x10>
     d6e:	cd b7       	in	r28, 0x3d	; 61
     d70:	de b7       	in	r29, 0x3e	; 62
     d72:	f6 2e       	mov	r15, r22
     d74:	e7 2e       	mov	r14, r23
     d76:	d8 2e       	mov	r13, r24
     d78:	06 e0       	ldi	r16, 0x06	; 6
     d7a:	12 e0       	ldi	r17, 0x02	; 2
     d7c:	d8 01       	movw	r26, r16
     d7e:	18 96       	adiw	r26, 0x08	; 8
     d80:	ed 91       	ld	r30, X+
     d82:	fc 91       	ld	r31, X
     d84:	19 97       	sbiw	r26, 0x09	; 9
     d86:	19 95       	eicall
     d88:	d8 01       	movw	r26, r16
     d8a:	1c 96       	adiw	r26, 0x0c	; 12
     d8c:	ed 91       	ld	r30, X+
     d8e:	fc 91       	ld	r31, X
     d90:	1d 97       	sbiw	r26, 0x0d	; 13
     d92:	19 95       	eicall
     d94:	f8 01       	movw	r30, r16
     d96:	84 89       	ldd	r24, Z+20	; 0x14
     d98:	95 89       	ldd	r25, Z+21	; 0x15
     d9a:	89 2b       	or	r24, r25
     d9c:	31 f0       	breq	.+12     	; 0xdaa <WIZCHIP_READ+0x4c>
     d9e:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <WIZCHIP+0x16>
     da2:	f0 91 1d 02 	lds	r31, 0x021D	; 0x80021d <WIZCHIP+0x17>
     da6:	30 97       	sbiw	r30, 0x00	; 0
     da8:	c1 f4       	brne	.+48     	; 0xdda <WIZCHIP_READ+0x7c>
     daa:	06 e0       	ldi	r16, 0x06	; 6
     dac:	12 e0       	ldi	r17, 0x02	; 2
     dae:	d8 01       	movw	r26, r16
     db0:	52 96       	adiw	r26, 0x12	; 18
     db2:	ed 91       	ld	r30, X+
     db4:	fc 91       	ld	r31, X
     db6:	53 97       	sbiw	r26, 0x13	; 19
     db8:	8d 2d       	mov	r24, r13
     dba:	19 95       	eicall
     dbc:	d8 01       	movw	r26, r16
     dbe:	52 96       	adiw	r26, 0x12	; 18
     dc0:	ed 91       	ld	r30, X+
     dc2:	fc 91       	ld	r31, X
     dc4:	53 97       	sbiw	r26, 0x13	; 19
     dc6:	8e 2d       	mov	r24, r14
     dc8:	19 95       	eicall
     dca:	d8 01       	movw	r26, r16
     dcc:	52 96       	adiw	r26, 0x12	; 18
     dce:	ed 91       	ld	r30, X+
     dd0:	fc 91       	ld	r31, X
     dd2:	53 97       	sbiw	r26, 0x13	; 19
     dd4:	8f 2d       	mov	r24, r15
     dd6:	19 95       	eicall
     dd8:	08 c0       	rjmp	.+16     	; 0xdea <WIZCHIP_READ+0x8c>
     dda:	d9 82       	std	Y+1, r13	; 0x01
     ddc:	ea 82       	std	Y+2, r14	; 0x02
     dde:	fb 82       	std	Y+3, r15	; 0x03
     de0:	63 e0       	ldi	r22, 0x03	; 3
     de2:	70 e0       	ldi	r23, 0x00	; 0
     de4:	ce 01       	movw	r24, r28
     de6:	01 96       	adiw	r24, 0x01	; 1
     de8:	19 95       	eicall
     dea:	06 e0       	ldi	r16, 0x06	; 6
     dec:	12 e0       	ldi	r17, 0x02	; 2
     dee:	d8 01       	movw	r26, r16
     df0:	50 96       	adiw	r26, 0x10	; 16
     df2:	ed 91       	ld	r30, X+
     df4:	fc 91       	ld	r31, X
     df6:	51 97       	sbiw	r26, 0x11	; 17
     df8:	19 95       	eicall
     dfa:	f8 2e       	mov	r15, r24
     dfc:	d8 01       	movw	r26, r16
     dfe:	1e 96       	adiw	r26, 0x0e	; 14
     e00:	ed 91       	ld	r30, X+
     e02:	fc 91       	ld	r31, X
     e04:	1f 97       	sbiw	r26, 0x0f	; 15
     e06:	19 95       	eicall
     e08:	d8 01       	movw	r26, r16
     e0a:	1a 96       	adiw	r26, 0x0a	; 10
     e0c:	ed 91       	ld	r30, X+
     e0e:	fc 91       	ld	r31, X
     e10:	1b 97       	sbiw	r26, 0x0b	; 11
     e12:	19 95       	eicall
     e14:	8f 2d       	mov	r24, r15
     e16:	0f 90       	pop	r0
     e18:	0f 90       	pop	r0
     e1a:	0f 90       	pop	r0
     e1c:	df 91       	pop	r29
     e1e:	cf 91       	pop	r28
     e20:	1f 91       	pop	r17
     e22:	0f 91       	pop	r16
     e24:	ff 90       	pop	r15
     e26:	ef 90       	pop	r14
     e28:	df 90       	pop	r13
     e2a:	08 95       	ret

00000e2c <WIZCHIP_WRITE>:
     e2c:	4f 92       	push	r4
     e2e:	5f 92       	push	r5
     e30:	6f 92       	push	r6
     e32:	7f 92       	push	r7
     e34:	bf 92       	push	r11
     e36:	cf 92       	push	r12
     e38:	df 92       	push	r13
     e3a:	ef 92       	push	r14
     e3c:	ff 92       	push	r15
     e3e:	0f 93       	push	r16
     e40:	1f 93       	push	r17
     e42:	cf 93       	push	r28
     e44:	df 93       	push	r29
     e46:	00 d0       	rcall	.+0      	; 0xe48 <WIZCHIP_WRITE+0x1c>
     e48:	1f 92       	push	r1
     e4a:	cd b7       	in	r28, 0x3d	; 61
     e4c:	de b7       	in	r29, 0x3e	; 62
     e4e:	6b 01       	movw	r12, r22
     e50:	7c 01       	movw	r14, r24
     e52:	b4 2e       	mov	r11, r20
     e54:	06 e0       	ldi	r16, 0x06	; 6
     e56:	12 e0       	ldi	r17, 0x02	; 2
     e58:	d8 01       	movw	r26, r16
     e5a:	18 96       	adiw	r26, 0x08	; 8
     e5c:	ed 91       	ld	r30, X+
     e5e:	fc 91       	ld	r31, X
     e60:	19 97       	sbiw	r26, 0x09	; 9
     e62:	19 95       	eicall
     e64:	d8 01       	movw	r26, r16
     e66:	1c 96       	adiw	r26, 0x0c	; 12
     e68:	ed 91       	ld	r30, X+
     e6a:	fc 91       	ld	r31, X
     e6c:	1d 97       	sbiw	r26, 0x0d	; 13
     e6e:	19 95       	eicall
     e70:	26 01       	movw	r4, r12
     e72:	37 01       	movw	r6, r14
     e74:	68 94       	set
     e76:	42 f8       	bld	r4, 2
     e78:	d8 01       	movw	r26, r16
     e7a:	56 96       	adiw	r26, 0x16	; 22
     e7c:	ed 91       	ld	r30, X+
     e7e:	fc 91       	ld	r31, X
     e80:	57 97       	sbiw	r26, 0x17	; 23
     e82:	30 97       	sbiw	r30, 0x00	; 0
     e84:	e1 f4       	brne	.+56     	; 0xebe <WIZCHIP_WRITE+0x92>
     e86:	52 96       	adiw	r26, 0x12	; 18
     e88:	ed 91       	ld	r30, X+
     e8a:	fc 91       	ld	r31, X
     e8c:	53 97       	sbiw	r26, 0x13	; 19
     e8e:	8e 2d       	mov	r24, r14
     e90:	19 95       	eicall
     e92:	d8 01       	movw	r26, r16
     e94:	52 96       	adiw	r26, 0x12	; 18
     e96:	ed 91       	ld	r30, X+
     e98:	fc 91       	ld	r31, X
     e9a:	53 97       	sbiw	r26, 0x13	; 19
     e9c:	8d 2d       	mov	r24, r13
     e9e:	19 95       	eicall
     ea0:	d8 01       	movw	r26, r16
     ea2:	52 96       	adiw	r26, 0x12	; 18
     ea4:	ed 91       	ld	r30, X+
     ea6:	fc 91       	ld	r31, X
     ea8:	53 97       	sbiw	r26, 0x13	; 19
     eaa:	84 2d       	mov	r24, r4
     eac:	19 95       	eicall
     eae:	d8 01       	movw	r26, r16
     eb0:	52 96       	adiw	r26, 0x12	; 18
     eb2:	ed 91       	ld	r30, X+
     eb4:	fc 91       	ld	r31, X
     eb6:	53 97       	sbiw	r26, 0x13	; 19
     eb8:	8b 2d       	mov	r24, r11
     eba:	19 95       	eicall
     ebc:	09 c0       	rjmp	.+18     	; 0xed0 <WIZCHIP_WRITE+0xa4>
     ebe:	e9 82       	std	Y+1, r14	; 0x01
     ec0:	da 82       	std	Y+2, r13	; 0x02
     ec2:	4b 82       	std	Y+3, r4	; 0x03
     ec4:	bc 82       	std	Y+4, r11	; 0x04
     ec6:	64 e0       	ldi	r22, 0x04	; 4
     ec8:	70 e0       	ldi	r23, 0x00	; 0
     eca:	ce 01       	movw	r24, r28
     ecc:	01 96       	adiw	r24, 0x01	; 1
     ece:	19 95       	eicall
     ed0:	06 e0       	ldi	r16, 0x06	; 6
     ed2:	12 e0       	ldi	r17, 0x02	; 2
     ed4:	d8 01       	movw	r26, r16
     ed6:	1e 96       	adiw	r26, 0x0e	; 14
     ed8:	ed 91       	ld	r30, X+
     eda:	fc 91       	ld	r31, X
     edc:	1f 97       	sbiw	r26, 0x0f	; 15
     ede:	19 95       	eicall
     ee0:	d8 01       	movw	r26, r16
     ee2:	1a 96       	adiw	r26, 0x0a	; 10
     ee4:	ed 91       	ld	r30, X+
     ee6:	fc 91       	ld	r31, X
     ee8:	1b 97       	sbiw	r26, 0x0b	; 11
     eea:	19 95       	eicall
     eec:	0f 90       	pop	r0
     eee:	0f 90       	pop	r0
     ef0:	0f 90       	pop	r0
     ef2:	0f 90       	pop	r0
     ef4:	df 91       	pop	r29
     ef6:	cf 91       	pop	r28
     ef8:	1f 91       	pop	r17
     efa:	0f 91       	pop	r16
     efc:	ff 90       	pop	r15
     efe:	ef 90       	pop	r14
     f00:	df 90       	pop	r13
     f02:	cf 90       	pop	r12
     f04:	bf 90       	pop	r11
     f06:	7f 90       	pop	r7
     f08:	6f 90       	pop	r6
     f0a:	5f 90       	pop	r5
     f0c:	4f 90       	pop	r4
     f0e:	08 95       	ret

00000f10 <WIZCHIP_READ_BUF>:
     f10:	9f 92       	push	r9
     f12:	af 92       	push	r10
     f14:	bf 92       	push	r11
     f16:	cf 92       	push	r12
     f18:	df 92       	push	r13
     f1a:	ef 92       	push	r14
     f1c:	ff 92       	push	r15
     f1e:	0f 93       	push	r16
     f20:	1f 93       	push	r17
     f22:	cf 93       	push	r28
     f24:	df 93       	push	r29
     f26:	00 d0       	rcall	.+0      	; 0xf28 <WIZCHIP_READ_BUF+0x18>
     f28:	cd b7       	in	r28, 0x3d	; 61
     f2a:	de b7       	in	r29, 0x3e	; 62
     f2c:	f6 2e       	mov	r15, r22
     f2e:	e7 2e       	mov	r14, r23
     f30:	98 2e       	mov	r9, r24
     f32:	5a 01       	movw	r10, r20
     f34:	69 01       	movw	r12, r18
     f36:	06 e0       	ldi	r16, 0x06	; 6
     f38:	12 e0       	ldi	r17, 0x02	; 2
     f3a:	d8 01       	movw	r26, r16
     f3c:	18 96       	adiw	r26, 0x08	; 8
     f3e:	ed 91       	ld	r30, X+
     f40:	fc 91       	ld	r31, X
     f42:	19 97       	sbiw	r26, 0x09	; 9
     f44:	19 95       	eicall
     f46:	d8 01       	movw	r26, r16
     f48:	1c 96       	adiw	r26, 0x0c	; 12
     f4a:	ed 91       	ld	r30, X+
     f4c:	fc 91       	ld	r31, X
     f4e:	1d 97       	sbiw	r26, 0x0d	; 13
     f50:	19 95       	eicall
     f52:	f8 01       	movw	r30, r16
     f54:	84 89       	ldd	r24, Z+20	; 0x14
     f56:	95 89       	ldd	r25, Z+21	; 0x15
     f58:	89 2b       	or	r24, r25
     f5a:	31 f0       	breq	.+12     	; 0xf68 <WIZCHIP_READ_BUF+0x58>
     f5c:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <WIZCHIP+0x16>
     f60:	f0 91 1d 02 	lds	r31, 0x021D	; 0x80021d <WIZCHIP+0x17>
     f64:	30 97       	sbiw	r30, 0x00	; 0
     f66:	51 f5       	brne	.+84     	; 0xfbc <WIZCHIP_READ_BUF+0xac>
     f68:	06 e0       	ldi	r16, 0x06	; 6
     f6a:	12 e0       	ldi	r17, 0x02	; 2
     f6c:	d8 01       	movw	r26, r16
     f6e:	52 96       	adiw	r26, 0x12	; 18
     f70:	ed 91       	ld	r30, X+
     f72:	fc 91       	ld	r31, X
     f74:	53 97       	sbiw	r26, 0x13	; 19
     f76:	89 2d       	mov	r24, r9
     f78:	19 95       	eicall
     f7a:	d8 01       	movw	r26, r16
     f7c:	52 96       	adiw	r26, 0x12	; 18
     f7e:	ed 91       	ld	r30, X+
     f80:	fc 91       	ld	r31, X
     f82:	53 97       	sbiw	r26, 0x13	; 19
     f84:	8e 2d       	mov	r24, r14
     f86:	19 95       	eicall
     f88:	d8 01       	movw	r26, r16
     f8a:	52 96       	adiw	r26, 0x12	; 18
     f8c:	ed 91       	ld	r30, X+
     f8e:	fc 91       	ld	r31, X
     f90:	53 97       	sbiw	r26, 0x13	; 19
     f92:	8f 2d       	mov	r24, r15
     f94:	19 95       	eicall
     f96:	00 e0       	ldi	r16, 0x00	; 0
     f98:	10 e0       	ldi	r17, 0x00	; 0
     f9a:	0c c0       	rjmp	.+24     	; 0xfb4 <WIZCHIP_READ_BUF+0xa4>
     f9c:	75 01       	movw	r14, r10
     f9e:	e0 0e       	add	r14, r16
     fa0:	f1 1e       	adc	r15, r17
     fa2:	e0 91 16 02 	lds	r30, 0x0216	; 0x800216 <WIZCHIP+0x10>
     fa6:	f0 91 17 02 	lds	r31, 0x0217	; 0x800217 <WIZCHIP+0x11>
     faa:	19 95       	eicall
     fac:	f7 01       	movw	r30, r14
     fae:	80 83       	st	Z, r24
     fb0:	0f 5f       	subi	r16, 0xFF	; 255
     fb2:	1f 4f       	sbci	r17, 0xFF	; 255
     fb4:	0c 15       	cp	r16, r12
     fb6:	1d 05       	cpc	r17, r13
     fb8:	88 f3       	brcs	.-30     	; 0xf9c <WIZCHIP_READ_BUF+0x8c>
     fba:	0f c0       	rjmp	.+30     	; 0xfda <WIZCHIP_READ_BUF+0xca>
     fbc:	99 82       	std	Y+1, r9	; 0x01
     fbe:	ea 82       	std	Y+2, r14	; 0x02
     fc0:	fb 82       	std	Y+3, r15	; 0x03
     fc2:	63 e0       	ldi	r22, 0x03	; 3
     fc4:	70 e0       	ldi	r23, 0x00	; 0
     fc6:	ce 01       	movw	r24, r28
     fc8:	01 96       	adiw	r24, 0x01	; 1
     fca:	19 95       	eicall
     fcc:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <WIZCHIP+0x14>
     fd0:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <WIZCHIP+0x15>
     fd4:	b6 01       	movw	r22, r12
     fd6:	c5 01       	movw	r24, r10
     fd8:	19 95       	eicall
     fda:	06 e0       	ldi	r16, 0x06	; 6
     fdc:	12 e0       	ldi	r17, 0x02	; 2
     fde:	d8 01       	movw	r26, r16
     fe0:	1e 96       	adiw	r26, 0x0e	; 14
     fe2:	ed 91       	ld	r30, X+
     fe4:	fc 91       	ld	r31, X
     fe6:	1f 97       	sbiw	r26, 0x0f	; 15
     fe8:	19 95       	eicall
     fea:	d8 01       	movw	r26, r16
     fec:	1a 96       	adiw	r26, 0x0a	; 10
     fee:	ed 91       	ld	r30, X+
     ff0:	fc 91       	ld	r31, X
     ff2:	1b 97       	sbiw	r26, 0x0b	; 11
     ff4:	19 95       	eicall
     ff6:	0f 90       	pop	r0
     ff8:	0f 90       	pop	r0
     ffa:	0f 90       	pop	r0
     ffc:	df 91       	pop	r29
     ffe:	cf 91       	pop	r28
    1000:	1f 91       	pop	r17
    1002:	0f 91       	pop	r16
    1004:	ff 90       	pop	r15
    1006:	ef 90       	pop	r14
    1008:	df 90       	pop	r13
    100a:	cf 90       	pop	r12
    100c:	bf 90       	pop	r11
    100e:	af 90       	pop	r10
    1010:	9f 90       	pop	r9
    1012:	08 95       	ret

00001014 <WIZCHIP_WRITE_BUF>:
    1014:	4f 92       	push	r4
    1016:	5f 92       	push	r5
    1018:	6f 92       	push	r6
    101a:	7f 92       	push	r7
    101c:	8f 92       	push	r8
    101e:	9f 92       	push	r9
    1020:	af 92       	push	r10
    1022:	bf 92       	push	r11
    1024:	cf 92       	push	r12
    1026:	df 92       	push	r13
    1028:	ef 92       	push	r14
    102a:	ff 92       	push	r15
    102c:	0f 93       	push	r16
    102e:	1f 93       	push	r17
    1030:	cf 93       	push	r28
    1032:	df 93       	push	r29
    1034:	00 d0       	rcall	.+0      	; 0x1036 <WIZCHIP_WRITE_BUF+0x22>
    1036:	cd b7       	in	r28, 0x3d	; 61
    1038:	de b7       	in	r29, 0x3e	; 62
    103a:	6b 01       	movw	r12, r22
    103c:	7c 01       	movw	r14, r24
    103e:	4a 01       	movw	r8, r20
    1040:	59 01       	movw	r10, r18
    1042:	06 e0       	ldi	r16, 0x06	; 6
    1044:	12 e0       	ldi	r17, 0x02	; 2
    1046:	d8 01       	movw	r26, r16
    1048:	18 96       	adiw	r26, 0x08	; 8
    104a:	ed 91       	ld	r30, X+
    104c:	fc 91       	ld	r31, X
    104e:	19 97       	sbiw	r26, 0x09	; 9
    1050:	19 95       	eicall
    1052:	d8 01       	movw	r26, r16
    1054:	1c 96       	adiw	r26, 0x0c	; 12
    1056:	ed 91       	ld	r30, X+
    1058:	fc 91       	ld	r31, X
    105a:	1d 97       	sbiw	r26, 0x0d	; 13
    105c:	19 95       	eicall
    105e:	26 01       	movw	r4, r12
    1060:	37 01       	movw	r6, r14
    1062:	68 94       	set
    1064:	42 f8       	bld	r4, 2
    1066:	d8 01       	movw	r26, r16
    1068:	56 96       	adiw	r26, 0x16	; 22
    106a:	ed 91       	ld	r30, X+
    106c:	fc 91       	ld	r31, X
    106e:	57 97       	sbiw	r26, 0x17	; 23
    1070:	30 97       	sbiw	r30, 0x00	; 0
    1072:	31 f5       	brne	.+76     	; 0x10c0 <WIZCHIP_WRITE_BUF+0xac>
    1074:	52 96       	adiw	r26, 0x12	; 18
    1076:	ed 91       	ld	r30, X+
    1078:	fc 91       	ld	r31, X
    107a:	53 97       	sbiw	r26, 0x13	; 19
    107c:	8e 2d       	mov	r24, r14
    107e:	19 95       	eicall
    1080:	d8 01       	movw	r26, r16
    1082:	52 96       	adiw	r26, 0x12	; 18
    1084:	ed 91       	ld	r30, X+
    1086:	fc 91       	ld	r31, X
    1088:	53 97       	sbiw	r26, 0x13	; 19
    108a:	8d 2d       	mov	r24, r13
    108c:	19 95       	eicall
    108e:	d8 01       	movw	r26, r16
    1090:	52 96       	adiw	r26, 0x12	; 18
    1092:	ed 91       	ld	r30, X+
    1094:	fc 91       	ld	r31, X
    1096:	53 97       	sbiw	r26, 0x13	; 19
    1098:	84 2d       	mov	r24, r4
    109a:	19 95       	eicall
    109c:	00 e0       	ldi	r16, 0x00	; 0
    109e:	10 e0       	ldi	r17, 0x00	; 0
    10a0:	0b c0       	rjmp	.+22     	; 0x10b8 <WIZCHIP_WRITE_BUF+0xa4>
    10a2:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <WIZCHIP+0x12>
    10a6:	f0 91 19 02 	lds	r31, 0x0219	; 0x800219 <WIZCHIP+0x13>
    10aa:	d4 01       	movw	r26, r8
    10ac:	a0 0f       	add	r26, r16
    10ae:	b1 1f       	adc	r27, r17
    10b0:	8c 91       	ld	r24, X
    10b2:	19 95       	eicall
    10b4:	0f 5f       	subi	r16, 0xFF	; 255
    10b6:	1f 4f       	sbci	r17, 0xFF	; 255
    10b8:	0a 15       	cp	r16, r10
    10ba:	1b 05       	cpc	r17, r11
    10bc:	90 f3       	brcs	.-28     	; 0x10a2 <WIZCHIP_WRITE_BUF+0x8e>
    10be:	0f c0       	rjmp	.+30     	; 0x10de <WIZCHIP_WRITE_BUF+0xca>
    10c0:	e9 82       	std	Y+1, r14	; 0x01
    10c2:	da 82       	std	Y+2, r13	; 0x02
    10c4:	4b 82       	std	Y+3, r4	; 0x03
    10c6:	63 e0       	ldi	r22, 0x03	; 3
    10c8:	70 e0       	ldi	r23, 0x00	; 0
    10ca:	ce 01       	movw	r24, r28
    10cc:	01 96       	adiw	r24, 0x01	; 1
    10ce:	19 95       	eicall
    10d0:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <WIZCHIP+0x16>
    10d4:	f0 91 1d 02 	lds	r31, 0x021D	; 0x80021d <WIZCHIP+0x17>
    10d8:	b5 01       	movw	r22, r10
    10da:	c4 01       	movw	r24, r8
    10dc:	19 95       	eicall
    10de:	06 e0       	ldi	r16, 0x06	; 6
    10e0:	12 e0       	ldi	r17, 0x02	; 2
    10e2:	d8 01       	movw	r26, r16
    10e4:	1e 96       	adiw	r26, 0x0e	; 14
    10e6:	ed 91       	ld	r30, X+
    10e8:	fc 91       	ld	r31, X
    10ea:	1f 97       	sbiw	r26, 0x0f	; 15
    10ec:	19 95       	eicall
    10ee:	d8 01       	movw	r26, r16
    10f0:	1a 96       	adiw	r26, 0x0a	; 10
    10f2:	ed 91       	ld	r30, X+
    10f4:	fc 91       	ld	r31, X
    10f6:	1b 97       	sbiw	r26, 0x0b	; 11
    10f8:	19 95       	eicall
    10fa:	0f 90       	pop	r0
    10fc:	0f 90       	pop	r0
    10fe:	0f 90       	pop	r0
    1100:	df 91       	pop	r29
    1102:	cf 91       	pop	r28
    1104:	1f 91       	pop	r17
    1106:	0f 91       	pop	r16
    1108:	ff 90       	pop	r15
    110a:	ef 90       	pop	r14
    110c:	df 90       	pop	r13
    110e:	cf 90       	pop	r12
    1110:	bf 90       	pop	r11
    1112:	af 90       	pop	r10
    1114:	9f 90       	pop	r9
    1116:	8f 90       	pop	r8
    1118:	7f 90       	pop	r7
    111a:	6f 90       	pop	r6
    111c:	5f 90       	pop	r5
    111e:	4f 90       	pop	r4
    1120:	08 95       	ret

00001122 <getSn_TX_FSR>:
    1122:	7f 92       	push	r7
    1124:	8f 92       	push	r8
    1126:	9f 92       	push	r9
    1128:	af 92       	push	r10
    112a:	bf 92       	push	r11
    112c:	cf 92       	push	r12
    112e:	df 92       	push	r13
    1130:	ef 92       	push	r14
    1132:	ff 92       	push	r15
    1134:	0f 93       	push	r16
    1136:	1f 93       	push	r17
    1138:	cf 93       	push	r28
    113a:	df 93       	push	r29
    113c:	78 2e       	mov	r7, r24
    113e:	00 e0       	ldi	r16, 0x00	; 0
    1140:	10 e0       	ldi	r17, 0x00	; 0
    1142:	c7 2c       	mov	r12, r7
    1144:	d1 2c       	mov	r13, r1
    1146:	cc 0c       	add	r12, r12
    1148:	dd 1c       	adc	r13, r13
    114a:	cc 0c       	add	r12, r12
    114c:	dd 1c       	adc	r13, r13
    114e:	8f ef       	ldi	r24, 0xFF	; 255
    1150:	c8 1a       	sub	r12, r24
    1152:	d8 0a       	sbc	r13, r24
    1154:	cc 0c       	add	r12, r12
    1156:	dd 1c       	adc	r13, r13
    1158:	cc 0c       	add	r12, r12
    115a:	dd 1c       	adc	r13, r13
    115c:	cc 0c       	add	r12, r12
    115e:	dd 1c       	adc	r13, r13
    1160:	46 01       	movw	r8, r12
    1162:	80 ee       	ldi	r24, 0xE0	; 224
    1164:	98 1a       	sub	r9, r24
    1166:	09 2c       	mov	r0, r9
    1168:	00 0c       	add	r0, r0
    116a:	aa 08       	sbc	r10, r10
    116c:	bb 08       	sbc	r11, r11
    116e:	c5 01       	movw	r24, r10
    1170:	b4 01       	movw	r22, r8
    1172:	f5 dd       	rcall	.-1046   	; 0xd5e <WIZCHIP_READ>
    1174:	c8 2f       	mov	r28, r24
    1176:	d0 e0       	ldi	r29, 0x00	; 0
    1178:	dc 2f       	mov	r29, r28
    117a:	cc 27       	eor	r28, r28
    117c:	8f ed       	ldi	r24, 0xDF	; 223
    117e:	d8 1a       	sub	r13, r24
    1180:	0d 2c       	mov	r0, r13
    1182:	00 0c       	add	r0, r0
    1184:	ee 08       	sbc	r14, r14
    1186:	ff 08       	sbc	r15, r15
    1188:	c7 01       	movw	r24, r14
    118a:	b6 01       	movw	r22, r12
    118c:	e8 dd       	rcall	.-1072   	; 0xd5e <WIZCHIP_READ>
    118e:	c8 0f       	add	r28, r24
    1190:	d1 1d       	adc	r29, r1
    1192:	20 97       	sbiw	r28, 0x00	; 0
    1194:	61 f0       	breq	.+24     	; 0x11ae <getSn_TX_FSR+0x8c>
    1196:	c5 01       	movw	r24, r10
    1198:	b4 01       	movw	r22, r8
    119a:	e1 dd       	rcall	.-1086   	; 0xd5e <WIZCHIP_READ>
    119c:	08 2f       	mov	r16, r24
    119e:	10 e0       	ldi	r17, 0x00	; 0
    11a0:	10 2f       	mov	r17, r16
    11a2:	00 27       	eor	r16, r16
    11a4:	c7 01       	movw	r24, r14
    11a6:	b6 01       	movw	r22, r12
    11a8:	da dd       	rcall	.-1100   	; 0xd5e <WIZCHIP_READ>
    11aa:	08 0f       	add	r16, r24
    11ac:	11 1d       	adc	r17, r1
    11ae:	0c 17       	cp	r16, r28
    11b0:	1d 07       	cpc	r17, r29
    11b2:	39 f6       	brne	.-114    	; 0x1142 <getSn_TX_FSR+0x20>
    11b4:	c8 01       	movw	r24, r16
    11b6:	df 91       	pop	r29
    11b8:	cf 91       	pop	r28
    11ba:	1f 91       	pop	r17
    11bc:	0f 91       	pop	r16
    11be:	ff 90       	pop	r15
    11c0:	ef 90       	pop	r14
    11c2:	df 90       	pop	r13
    11c4:	cf 90       	pop	r12
    11c6:	bf 90       	pop	r11
    11c8:	af 90       	pop	r10
    11ca:	9f 90       	pop	r9
    11cc:	8f 90       	pop	r8
    11ce:	7f 90       	pop	r7
    11d0:	08 95       	ret

000011d2 <getSn_RX_RSR>:
    11d2:	7f 92       	push	r7
    11d4:	8f 92       	push	r8
    11d6:	9f 92       	push	r9
    11d8:	af 92       	push	r10
    11da:	bf 92       	push	r11
    11dc:	cf 92       	push	r12
    11de:	df 92       	push	r13
    11e0:	ef 92       	push	r14
    11e2:	ff 92       	push	r15
    11e4:	0f 93       	push	r16
    11e6:	1f 93       	push	r17
    11e8:	cf 93       	push	r28
    11ea:	df 93       	push	r29
    11ec:	78 2e       	mov	r7, r24
    11ee:	00 e0       	ldi	r16, 0x00	; 0
    11f0:	10 e0       	ldi	r17, 0x00	; 0
    11f2:	c7 2c       	mov	r12, r7
    11f4:	d1 2c       	mov	r13, r1
    11f6:	cc 0c       	add	r12, r12
    11f8:	dd 1c       	adc	r13, r13
    11fa:	cc 0c       	add	r12, r12
    11fc:	dd 1c       	adc	r13, r13
    11fe:	8f ef       	ldi	r24, 0xFF	; 255
    1200:	c8 1a       	sub	r12, r24
    1202:	d8 0a       	sbc	r13, r24
    1204:	cc 0c       	add	r12, r12
    1206:	dd 1c       	adc	r13, r13
    1208:	cc 0c       	add	r12, r12
    120a:	dd 1c       	adc	r13, r13
    120c:	cc 0c       	add	r12, r12
    120e:	dd 1c       	adc	r13, r13
    1210:	46 01       	movw	r8, r12
    1212:	8a ed       	ldi	r24, 0xDA	; 218
    1214:	98 1a       	sub	r9, r24
    1216:	09 2c       	mov	r0, r9
    1218:	00 0c       	add	r0, r0
    121a:	aa 08       	sbc	r10, r10
    121c:	bb 08       	sbc	r11, r11
    121e:	c5 01       	movw	r24, r10
    1220:	b4 01       	movw	r22, r8
    1222:	9d dd       	rcall	.-1222   	; 0xd5e <WIZCHIP_READ>
    1224:	c8 2f       	mov	r28, r24
    1226:	d0 e0       	ldi	r29, 0x00	; 0
    1228:	dc 2f       	mov	r29, r28
    122a:	cc 27       	eor	r28, r28
    122c:	89 ed       	ldi	r24, 0xD9	; 217
    122e:	d8 1a       	sub	r13, r24
    1230:	0d 2c       	mov	r0, r13
    1232:	00 0c       	add	r0, r0
    1234:	ee 08       	sbc	r14, r14
    1236:	ff 08       	sbc	r15, r15
    1238:	c7 01       	movw	r24, r14
    123a:	b6 01       	movw	r22, r12
    123c:	90 dd       	rcall	.-1248   	; 0xd5e <WIZCHIP_READ>
    123e:	c8 0f       	add	r28, r24
    1240:	d1 1d       	adc	r29, r1
    1242:	20 97       	sbiw	r28, 0x00	; 0
    1244:	61 f0       	breq	.+24     	; 0x125e <getSn_RX_RSR+0x8c>
    1246:	c5 01       	movw	r24, r10
    1248:	b4 01       	movw	r22, r8
    124a:	89 dd       	rcall	.-1262   	; 0xd5e <WIZCHIP_READ>
    124c:	08 2f       	mov	r16, r24
    124e:	10 e0       	ldi	r17, 0x00	; 0
    1250:	10 2f       	mov	r17, r16
    1252:	00 27       	eor	r16, r16
    1254:	c7 01       	movw	r24, r14
    1256:	b6 01       	movw	r22, r12
    1258:	82 dd       	rcall	.-1276   	; 0xd5e <WIZCHIP_READ>
    125a:	08 0f       	add	r16, r24
    125c:	11 1d       	adc	r17, r1
    125e:	0c 17       	cp	r16, r28
    1260:	1d 07       	cpc	r17, r29
    1262:	39 f6       	brne	.-114    	; 0x11f2 <getSn_RX_RSR+0x20>
    1264:	c8 01       	movw	r24, r16
    1266:	df 91       	pop	r29
    1268:	cf 91       	pop	r28
    126a:	1f 91       	pop	r17
    126c:	0f 91       	pop	r16
    126e:	ff 90       	pop	r15
    1270:	ef 90       	pop	r14
    1272:	df 90       	pop	r13
    1274:	cf 90       	pop	r12
    1276:	bf 90       	pop	r11
    1278:	af 90       	pop	r10
    127a:	9f 90       	pop	r9
    127c:	8f 90       	pop	r8
    127e:	7f 90       	pop	r7
    1280:	08 95       	ret

00001282 <wiz_send_data>:
    1282:	2f 92       	push	r2
    1284:	3f 92       	push	r3
    1286:	4f 92       	push	r4
    1288:	5f 92       	push	r5
    128a:	6f 92       	push	r6
    128c:	7f 92       	push	r7
    128e:	8f 92       	push	r8
    1290:	9f 92       	push	r9
    1292:	af 92       	push	r10
    1294:	bf 92       	push	r11
    1296:	cf 92       	push	r12
    1298:	df 92       	push	r13
    129a:	ef 92       	push	r14
    129c:	ff 92       	push	r15
    129e:	0f 93       	push	r16
    12a0:	1f 93       	push	r17
    12a2:	cf 93       	push	r28
    12a4:	df 93       	push	r29
    12a6:	00 d0       	rcall	.+0      	; 0x12a8 <wiz_send_data+0x26>
    12a8:	1f 92       	push	r1
    12aa:	cd b7       	in	r28, 0x3d	; 61
    12ac:	de b7       	in	r29, 0x3e	; 62
    12ae:	41 15       	cp	r20, r1
    12b0:	51 05       	cpc	r21, r1
    12b2:	09 f4       	brne	.+2      	; 0x12b6 <wiz_send_data+0x34>
    12b4:	56 c0       	rjmp	.+172    	; 0x1362 <wiz_send_data+0xe0>
    12b6:	3a 01       	movw	r6, r20
    12b8:	7a 83       	std	Y+2, r23	; 0x02
    12ba:	69 83       	std	Y+1, r22	; 0x01
    12bc:	28 2e       	mov	r2, r24
    12be:	31 2c       	mov	r3, r1
    12c0:	22 0c       	add	r2, r2
    12c2:	33 1c       	adc	r3, r3
    12c4:	22 0c       	add	r2, r2
    12c6:	33 1c       	adc	r3, r3
    12c8:	61 01       	movw	r12, r2
    12ca:	2f ef       	ldi	r18, 0xFF	; 255
    12cc:	c2 1a       	sub	r12, r18
    12ce:	d2 0a       	sbc	r13, r18
    12d0:	cc 0c       	add	r12, r12
    12d2:	dd 1c       	adc	r13, r13
    12d4:	cc 0c       	add	r12, r12
    12d6:	dd 1c       	adc	r13, r13
    12d8:	cc 0c       	add	r12, r12
    12da:	dd 1c       	adc	r13, r13
    12dc:	46 01       	movw	r8, r12
    12de:	3c ed       	ldi	r19, 0xDC	; 220
    12e0:	93 1a       	sub	r9, r19
    12e2:	09 2c       	mov	r0, r9
    12e4:	00 0c       	add	r0, r0
    12e6:	aa 08       	sbc	r10, r10
    12e8:	bb 08       	sbc	r11, r11
    12ea:	c5 01       	movw	r24, r10
    12ec:	b4 01       	movw	r22, r8
    12ee:	37 dd       	rcall	.-1426   	; 0xd5e <WIZCHIP_READ>
    12f0:	08 2f       	mov	r16, r24
    12f2:	10 e0       	ldi	r17, 0x00	; 0
    12f4:	10 2f       	mov	r17, r16
    12f6:	00 27       	eor	r16, r16
    12f8:	8b ed       	ldi	r24, 0xDB	; 219
    12fa:	d8 1a       	sub	r13, r24
    12fc:	0d 2c       	mov	r0, r13
    12fe:	00 0c       	add	r0, r0
    1300:	ee 08       	sbc	r14, r14
    1302:	ff 08       	sbc	r15, r15
    1304:	c7 01       	movw	r24, r14
    1306:	b6 01       	movw	r22, r12
    1308:	2a dd       	rcall	.-1452   	; 0xd5e <WIZCHIP_READ>
    130a:	08 0f       	add	r16, r24
    130c:	11 1d       	adc	r17, r1
    130e:	c8 01       	movw	r24, r16
    1310:	a0 e0       	ldi	r26, 0x00	; 0
    1312:	b0 e0       	ldi	r27, 0x00	; 0
    1314:	44 27       	eor	r20, r20
    1316:	58 2f       	mov	r21, r24
    1318:	69 2f       	mov	r22, r25
    131a:	7a 2f       	mov	r23, r26
    131c:	c1 01       	movw	r24, r2
    131e:	02 96       	adiw	r24, 0x02	; 2
    1320:	1c 01       	movw	r2, r24
    1322:	22 0c       	add	r2, r2
    1324:	33 1c       	adc	r3, r3
    1326:	22 0c       	add	r2, r2
    1328:	33 1c       	adc	r3, r3
    132a:	22 0c       	add	r2, r2
    132c:	33 1c       	adc	r3, r3
    132e:	c1 01       	movw	r24, r2
    1330:	33 0c       	add	r3, r3
    1332:	aa 0b       	sbc	r26, r26
    1334:	bb 0b       	sbc	r27, r27
    1336:	1a 01       	movw	r2, r20
    1338:	2b 01       	movw	r4, r22
    133a:	28 0e       	add	r2, r24
    133c:	39 1e       	adc	r3, r25
    133e:	4a 1e       	adc	r4, r26
    1340:	5b 1e       	adc	r5, r27
    1342:	c2 01       	movw	r24, r4
    1344:	b1 01       	movw	r22, r2
    1346:	93 01       	movw	r18, r6
    1348:	49 81       	ldd	r20, Y+1	; 0x01
    134a:	5a 81       	ldd	r21, Y+2	; 0x02
    134c:	63 de       	rcall	.-826    	; 0x1014 <WIZCHIP_WRITE_BUF>
    134e:	06 0d       	add	r16, r6
    1350:	17 1d       	adc	r17, r7
    1352:	41 2f       	mov	r20, r17
    1354:	c5 01       	movw	r24, r10
    1356:	b4 01       	movw	r22, r8
    1358:	69 dd       	rcall	.-1326   	; 0xe2c <WIZCHIP_WRITE>
    135a:	40 2f       	mov	r20, r16
    135c:	c7 01       	movw	r24, r14
    135e:	b6 01       	movw	r22, r12
    1360:	65 dd       	rcall	.-1334   	; 0xe2c <WIZCHIP_WRITE>
    1362:	0f 90       	pop	r0
    1364:	0f 90       	pop	r0
    1366:	0f 90       	pop	r0
    1368:	0f 90       	pop	r0
    136a:	df 91       	pop	r29
    136c:	cf 91       	pop	r28
    136e:	1f 91       	pop	r17
    1370:	0f 91       	pop	r16
    1372:	ff 90       	pop	r15
    1374:	ef 90       	pop	r14
    1376:	df 90       	pop	r13
    1378:	cf 90       	pop	r12
    137a:	bf 90       	pop	r11
    137c:	af 90       	pop	r10
    137e:	9f 90       	pop	r9
    1380:	8f 90       	pop	r8
    1382:	7f 90       	pop	r7
    1384:	6f 90       	pop	r6
    1386:	5f 90       	pop	r5
    1388:	4f 90       	pop	r4
    138a:	3f 90       	pop	r3
    138c:	2f 90       	pop	r2
    138e:	08 95       	ret

00001390 <wiz_recv_data>:
    1390:	2f 92       	push	r2
    1392:	3f 92       	push	r3
    1394:	4f 92       	push	r4
    1396:	5f 92       	push	r5
    1398:	6f 92       	push	r6
    139a:	7f 92       	push	r7
    139c:	8f 92       	push	r8
    139e:	9f 92       	push	r9
    13a0:	af 92       	push	r10
    13a2:	bf 92       	push	r11
    13a4:	cf 92       	push	r12
    13a6:	df 92       	push	r13
    13a8:	ef 92       	push	r14
    13aa:	ff 92       	push	r15
    13ac:	0f 93       	push	r16
    13ae:	1f 93       	push	r17
    13b0:	cf 93       	push	r28
    13b2:	df 93       	push	r29
    13b4:	00 d0       	rcall	.+0      	; 0x13b6 <wiz_recv_data+0x26>
    13b6:	1f 92       	push	r1
    13b8:	cd b7       	in	r28, 0x3d	; 61
    13ba:	de b7       	in	r29, 0x3e	; 62
    13bc:	41 15       	cp	r20, r1
    13be:	51 05       	cpc	r21, r1
    13c0:	09 f4       	brne	.+2      	; 0x13c4 <wiz_recv_data+0x34>
    13c2:	56 c0       	rjmp	.+172    	; 0x1470 <wiz_recv_data+0xe0>
    13c4:	3a 01       	movw	r6, r20
    13c6:	7a 83       	std	Y+2, r23	; 0x02
    13c8:	69 83       	std	Y+1, r22	; 0x01
    13ca:	28 2e       	mov	r2, r24
    13cc:	31 2c       	mov	r3, r1
    13ce:	22 0c       	add	r2, r2
    13d0:	33 1c       	adc	r3, r3
    13d2:	22 0c       	add	r2, r2
    13d4:	33 1c       	adc	r3, r3
    13d6:	61 01       	movw	r12, r2
    13d8:	2f ef       	ldi	r18, 0xFF	; 255
    13da:	c2 1a       	sub	r12, r18
    13dc:	d2 0a       	sbc	r13, r18
    13de:	cc 0c       	add	r12, r12
    13e0:	dd 1c       	adc	r13, r13
    13e2:	cc 0c       	add	r12, r12
    13e4:	dd 1c       	adc	r13, r13
    13e6:	cc 0c       	add	r12, r12
    13e8:	dd 1c       	adc	r13, r13
    13ea:	46 01       	movw	r8, r12
    13ec:	38 ed       	ldi	r19, 0xD8	; 216
    13ee:	93 1a       	sub	r9, r19
    13f0:	09 2c       	mov	r0, r9
    13f2:	00 0c       	add	r0, r0
    13f4:	aa 08       	sbc	r10, r10
    13f6:	bb 08       	sbc	r11, r11
    13f8:	c5 01       	movw	r24, r10
    13fa:	b4 01       	movw	r22, r8
    13fc:	b0 dc       	rcall	.-1696   	; 0xd5e <WIZCHIP_READ>
    13fe:	08 2f       	mov	r16, r24
    1400:	10 e0       	ldi	r17, 0x00	; 0
    1402:	10 2f       	mov	r17, r16
    1404:	00 27       	eor	r16, r16
    1406:	87 ed       	ldi	r24, 0xD7	; 215
    1408:	d8 1a       	sub	r13, r24
    140a:	0d 2c       	mov	r0, r13
    140c:	00 0c       	add	r0, r0
    140e:	ee 08       	sbc	r14, r14
    1410:	ff 08       	sbc	r15, r15
    1412:	c7 01       	movw	r24, r14
    1414:	b6 01       	movw	r22, r12
    1416:	a3 dc       	rcall	.-1722   	; 0xd5e <WIZCHIP_READ>
    1418:	08 0f       	add	r16, r24
    141a:	11 1d       	adc	r17, r1
    141c:	c8 01       	movw	r24, r16
    141e:	a0 e0       	ldi	r26, 0x00	; 0
    1420:	b0 e0       	ldi	r27, 0x00	; 0
    1422:	44 27       	eor	r20, r20
    1424:	58 2f       	mov	r21, r24
    1426:	69 2f       	mov	r22, r25
    1428:	7a 2f       	mov	r23, r26
    142a:	c1 01       	movw	r24, r2
    142c:	03 96       	adiw	r24, 0x03	; 3
    142e:	1c 01       	movw	r2, r24
    1430:	22 0c       	add	r2, r2
    1432:	33 1c       	adc	r3, r3
    1434:	22 0c       	add	r2, r2
    1436:	33 1c       	adc	r3, r3
    1438:	22 0c       	add	r2, r2
    143a:	33 1c       	adc	r3, r3
    143c:	c1 01       	movw	r24, r2
    143e:	33 0c       	add	r3, r3
    1440:	aa 0b       	sbc	r26, r26
    1442:	bb 0b       	sbc	r27, r27
    1444:	1a 01       	movw	r2, r20
    1446:	2b 01       	movw	r4, r22
    1448:	28 0e       	add	r2, r24
    144a:	39 1e       	adc	r3, r25
    144c:	4a 1e       	adc	r4, r26
    144e:	5b 1e       	adc	r5, r27
    1450:	c2 01       	movw	r24, r4
    1452:	b1 01       	movw	r22, r2
    1454:	93 01       	movw	r18, r6
    1456:	49 81       	ldd	r20, Y+1	; 0x01
    1458:	5a 81       	ldd	r21, Y+2	; 0x02
    145a:	5a dd       	rcall	.-1356   	; 0xf10 <WIZCHIP_READ_BUF>
    145c:	06 0d       	add	r16, r6
    145e:	17 1d       	adc	r17, r7
    1460:	41 2f       	mov	r20, r17
    1462:	c5 01       	movw	r24, r10
    1464:	b4 01       	movw	r22, r8
    1466:	e2 dc       	rcall	.-1596   	; 0xe2c <WIZCHIP_WRITE>
    1468:	40 2f       	mov	r20, r16
    146a:	c7 01       	movw	r24, r14
    146c:	b6 01       	movw	r22, r12
    146e:	de dc       	rcall	.-1604   	; 0xe2c <WIZCHIP_WRITE>
    1470:	0f 90       	pop	r0
    1472:	0f 90       	pop	r0
    1474:	0f 90       	pop	r0
    1476:	0f 90       	pop	r0
    1478:	df 91       	pop	r29
    147a:	cf 91       	pop	r28
    147c:	1f 91       	pop	r17
    147e:	0f 91       	pop	r16
    1480:	ff 90       	pop	r15
    1482:	ef 90       	pop	r14
    1484:	df 90       	pop	r13
    1486:	cf 90       	pop	r12
    1488:	bf 90       	pop	r11
    148a:	af 90       	pop	r10
    148c:	9f 90       	pop	r9
    148e:	8f 90       	pop	r8
    1490:	7f 90       	pop	r7
    1492:	6f 90       	pop	r6
    1494:	5f 90       	pop	r5
    1496:	4f 90       	pop	r4
    1498:	3f 90       	pop	r3
    149a:	2f 90       	pop	r2
    149c:	08 95       	ret

0000149e <wizchip_cris_enter>:
    149e:	08 95       	ret

000014a0 <wizchip_cris_exit>:
    14a0:	08 95       	ret

000014a2 <wizchip_cs_select>:
    14a2:	08 95       	ret

000014a4 <wizchip_cs_deselect>:
    14a4:	08 95       	ret

000014a6 <wizchip_bus_readdata>:
    14a6:	fb 01       	movw	r30, r22
    14a8:	80 81       	ld	r24, Z
    14aa:	08 95       	ret

000014ac <wizchip_bus_writedata>:
    14ac:	fb 01       	movw	r30, r22
    14ae:	40 83       	st	Z, r20
    14b0:	08 95       	ret

000014b2 <wizchip_spi_readbyte>:
    14b2:	80 e0       	ldi	r24, 0x00	; 0
    14b4:	08 95       	ret

000014b6 <wizchip_spi_writebyte>:
    14b6:	08 95       	ret

000014b8 <wizchip_spi_readburst>:
    14b8:	08 95       	ret

000014ba <wizchip_spi_writeburst>:
    14ba:	08 95       	ret

000014bc <reg_wizchip_cs_cbfunc>:
    14bc:	00 97       	sbiw	r24, 0x00	; 0
    14be:	19 f0       	breq	.+6      	; 0x14c6 <reg_wizchip_cs_cbfunc+0xa>
    14c0:	61 15       	cp	r22, r1
    14c2:	71 05       	cpc	r23, r1
    14c4:	59 f4       	brne	.+22     	; 0x14dc <reg_wizchip_cs_cbfunc+0x20>
    14c6:	e6 e0       	ldi	r30, 0x06	; 6
    14c8:	f2 e0       	ldi	r31, 0x02	; 2
    14ca:	81 e5       	ldi	r24, 0x51	; 81
    14cc:	9a e0       	ldi	r25, 0x0A	; 10
    14ce:	95 87       	std	Z+13, r25	; 0x0d
    14d0:	84 87       	std	Z+12, r24	; 0x0c
    14d2:	82 e5       	ldi	r24, 0x52	; 82
    14d4:	9a e0       	ldi	r25, 0x0A	; 10
    14d6:	97 87       	std	Z+15, r25	; 0x0f
    14d8:	86 87       	std	Z+14, r24	; 0x0e
    14da:	08 95       	ret
    14dc:	e6 e0       	ldi	r30, 0x06	; 6
    14de:	f2 e0       	ldi	r31, 0x02	; 2
    14e0:	95 87       	std	Z+13, r25	; 0x0d
    14e2:	84 87       	std	Z+12, r24	; 0x0c
    14e4:	77 87       	std	Z+15, r23	; 0x0f
    14e6:	66 87       	std	Z+14, r22	; 0x0e
    14e8:	08 95       	ret

000014ea <reg_wizchip_spi_cbfunc>:
    14ea:	20 91 06 02 	lds	r18, 0x0206	; 0x800206 <WIZCHIP>
    14ee:	30 91 07 02 	lds	r19, 0x0207	; 0x800207 <WIZCHIP+0x1>
    14f2:	31 ff       	sbrs	r19, 1
    14f4:	fa cf       	rjmp	.-12     	; 0x14ea <reg_wizchip_spi_cbfunc>
    14f6:	00 97       	sbiw	r24, 0x00	; 0
    14f8:	19 f0       	breq	.+6      	; 0x1500 <reg_wizchip_spi_cbfunc+0x16>
    14fa:	61 15       	cp	r22, r1
    14fc:	71 05       	cpc	r23, r1
    14fe:	59 f4       	brne	.+22     	; 0x1516 <reg_wizchip_spi_cbfunc+0x2c>
    1500:	e6 e0       	ldi	r30, 0x06	; 6
    1502:	f2 e0       	ldi	r31, 0x02	; 2
    1504:	89 e5       	ldi	r24, 0x59	; 89
    1506:	9a e0       	ldi	r25, 0x0A	; 10
    1508:	91 8b       	std	Z+17, r25	; 0x11
    150a:	80 8b       	std	Z+16, r24	; 0x10
    150c:	8b e5       	ldi	r24, 0x5B	; 91
    150e:	9a e0       	ldi	r25, 0x0A	; 10
    1510:	93 8b       	std	Z+19, r25	; 0x13
    1512:	82 8b       	std	Z+18, r24	; 0x12
    1514:	08 95       	ret
    1516:	e6 e0       	ldi	r30, 0x06	; 6
    1518:	f2 e0       	ldi	r31, 0x02	; 2
    151a:	91 8b       	std	Z+17, r25	; 0x11
    151c:	80 8b       	std	Z+16, r24	; 0x10
    151e:	73 8b       	std	Z+19, r23	; 0x13
    1520:	62 8b       	std	Z+18, r22	; 0x12
    1522:	08 95       	ret

00001524 <reg_wizchip_spiburst_cbfunc>:
    1524:	20 91 06 02 	lds	r18, 0x0206	; 0x800206 <WIZCHIP>
    1528:	30 91 07 02 	lds	r19, 0x0207	; 0x800207 <WIZCHIP+0x1>
    152c:	31 ff       	sbrs	r19, 1
    152e:	fa cf       	rjmp	.-12     	; 0x1524 <reg_wizchip_spiburst_cbfunc>
    1530:	00 97       	sbiw	r24, 0x00	; 0
    1532:	19 f0       	breq	.+6      	; 0x153a <reg_wizchip_spiburst_cbfunc+0x16>
    1534:	61 15       	cp	r22, r1
    1536:	71 05       	cpc	r23, r1
    1538:	59 f4       	brne	.+22     	; 0x1550 <reg_wizchip_spiburst_cbfunc+0x2c>
    153a:	e6 e0       	ldi	r30, 0x06	; 6
    153c:	f2 e0       	ldi	r31, 0x02	; 2
    153e:	8c e5       	ldi	r24, 0x5C	; 92
    1540:	9a e0       	ldi	r25, 0x0A	; 10
    1542:	95 8b       	std	Z+21, r25	; 0x15
    1544:	84 8b       	std	Z+20, r24	; 0x14
    1546:	8d e5       	ldi	r24, 0x5D	; 93
    1548:	9a e0       	ldi	r25, 0x0A	; 10
    154a:	97 8b       	std	Z+23, r25	; 0x17
    154c:	86 8b       	std	Z+22, r24	; 0x16
    154e:	08 95       	ret
    1550:	e6 e0       	ldi	r30, 0x06	; 6
    1552:	f2 e0       	ldi	r31, 0x02	; 2
    1554:	95 8b       	std	Z+21, r25	; 0x15
    1556:	84 8b       	std	Z+20, r24	; 0x14
    1558:	77 8b       	std	Z+23, r23	; 0x17
    155a:	66 8b       	std	Z+22, r22	; 0x16
    155c:	08 95       	ret

0000155e <wizchip_sw_reset>:
    155e:	cf 93       	push	r28
    1560:	df 93       	push	r29
    1562:	cd b7       	in	r28, 0x3d	; 61
    1564:	de b7       	in	r29, 0x3e	; 62
    1566:	62 97       	sbiw	r28, 0x12	; 18
    1568:	0f b6       	in	r0, 0x3f	; 63
    156a:	f8 94       	cli
    156c:	de bf       	out	0x3e, r29	; 62
    156e:	0f be       	out	0x3f, r0	; 63
    1570:	cd bf       	out	0x3d, r28	; 61
    1572:	26 e0       	ldi	r18, 0x06	; 6
    1574:	30 e0       	ldi	r19, 0x00	; 0
    1576:	ae 01       	movw	r20, r28
    1578:	43 5f       	subi	r20, 0xF3	; 243
    157a:	5f 4f       	sbci	r21, 0xFF	; 255
    157c:	60 e0       	ldi	r22, 0x00	; 0
    157e:	79 e0       	ldi	r23, 0x09	; 9
    1580:	80 e0       	ldi	r24, 0x00	; 0
    1582:	90 e0       	ldi	r25, 0x00	; 0
    1584:	c5 dc       	rcall	.-1654   	; 0xf10 <WIZCHIP_READ_BUF>
    1586:	24 e0       	ldi	r18, 0x04	; 4
    1588:	30 e0       	ldi	r19, 0x00	; 0
    158a:	ae 01       	movw	r20, r28
    158c:	4f 5f       	subi	r20, 0xFF	; 255
    158e:	5f 4f       	sbci	r21, 0xFF	; 255
    1590:	60 e0       	ldi	r22, 0x00	; 0
    1592:	71 e0       	ldi	r23, 0x01	; 1
    1594:	80 e0       	ldi	r24, 0x00	; 0
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	bb dc       	rcall	.-1674   	; 0xf10 <WIZCHIP_READ_BUF>
    159a:	24 e0       	ldi	r18, 0x04	; 4
    159c:	30 e0       	ldi	r19, 0x00	; 0
    159e:	ae 01       	movw	r20, r28
    15a0:	4b 5f       	subi	r20, 0xFB	; 251
    15a2:	5f 4f       	sbci	r21, 0xFF	; 255
    15a4:	60 e0       	ldi	r22, 0x00	; 0
    15a6:	75 e0       	ldi	r23, 0x05	; 5
    15a8:	80 e0       	ldi	r24, 0x00	; 0
    15aa:	90 e0       	ldi	r25, 0x00	; 0
    15ac:	b1 dc       	rcall	.-1694   	; 0xf10 <WIZCHIP_READ_BUF>
    15ae:	24 e0       	ldi	r18, 0x04	; 4
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	ae 01       	movw	r20, r28
    15b4:	47 5f       	subi	r20, 0xF7	; 247
    15b6:	5f 4f       	sbci	r21, 0xFF	; 255
    15b8:	60 e0       	ldi	r22, 0x00	; 0
    15ba:	7f e0       	ldi	r23, 0x0F	; 15
    15bc:	80 e0       	ldi	r24, 0x00	; 0
    15be:	90 e0       	ldi	r25, 0x00	; 0
    15c0:	a7 dc       	rcall	.-1714   	; 0xf10 <WIZCHIP_READ_BUF>
    15c2:	40 e8       	ldi	r20, 0x80	; 128
    15c4:	60 e0       	ldi	r22, 0x00	; 0
    15c6:	70 e0       	ldi	r23, 0x00	; 0
    15c8:	cb 01       	movw	r24, r22
    15ca:	30 dc       	rcall	.-1952   	; 0xe2c <WIZCHIP_WRITE>
    15cc:	60 e0       	ldi	r22, 0x00	; 0
    15ce:	70 e0       	ldi	r23, 0x00	; 0
    15d0:	cb 01       	movw	r24, r22
    15d2:	c5 db       	rcall	.-2166   	; 0xd5e <WIZCHIP_READ>
    15d4:	26 e0       	ldi	r18, 0x06	; 6
    15d6:	30 e0       	ldi	r19, 0x00	; 0
    15d8:	ae 01       	movw	r20, r28
    15da:	43 5f       	subi	r20, 0xF3	; 243
    15dc:	5f 4f       	sbci	r21, 0xFF	; 255
    15de:	60 e0       	ldi	r22, 0x00	; 0
    15e0:	79 e0       	ldi	r23, 0x09	; 9
    15e2:	80 e0       	ldi	r24, 0x00	; 0
    15e4:	90 e0       	ldi	r25, 0x00	; 0
    15e6:	16 dd       	rcall	.-1492   	; 0x1014 <WIZCHIP_WRITE_BUF>
    15e8:	24 e0       	ldi	r18, 0x04	; 4
    15ea:	30 e0       	ldi	r19, 0x00	; 0
    15ec:	ae 01       	movw	r20, r28
    15ee:	4f 5f       	subi	r20, 0xFF	; 255
    15f0:	5f 4f       	sbci	r21, 0xFF	; 255
    15f2:	60 e0       	ldi	r22, 0x00	; 0
    15f4:	71 e0       	ldi	r23, 0x01	; 1
    15f6:	80 e0       	ldi	r24, 0x00	; 0
    15f8:	90 e0       	ldi	r25, 0x00	; 0
    15fa:	0c dd       	rcall	.-1512   	; 0x1014 <WIZCHIP_WRITE_BUF>
    15fc:	24 e0       	ldi	r18, 0x04	; 4
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	ae 01       	movw	r20, r28
    1602:	4b 5f       	subi	r20, 0xFB	; 251
    1604:	5f 4f       	sbci	r21, 0xFF	; 255
    1606:	60 e0       	ldi	r22, 0x00	; 0
    1608:	75 e0       	ldi	r23, 0x05	; 5
    160a:	80 e0       	ldi	r24, 0x00	; 0
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	02 dd       	rcall	.-1532   	; 0x1014 <WIZCHIP_WRITE_BUF>
    1610:	24 e0       	ldi	r18, 0x04	; 4
    1612:	30 e0       	ldi	r19, 0x00	; 0
    1614:	ae 01       	movw	r20, r28
    1616:	47 5f       	subi	r20, 0xF7	; 247
    1618:	5f 4f       	sbci	r21, 0xFF	; 255
    161a:	60 e0       	ldi	r22, 0x00	; 0
    161c:	7f e0       	ldi	r23, 0x0F	; 15
    161e:	80 e0       	ldi	r24, 0x00	; 0
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	f8 dc       	rcall	.-1552   	; 0x1014 <WIZCHIP_WRITE_BUF>
    1624:	62 96       	adiw	r28, 0x12	; 18
    1626:	0f b6       	in	r0, 0x3f	; 63
    1628:	f8 94       	cli
    162a:	de bf       	out	0x3e, r29	; 62
    162c:	0f be       	out	0x3f, r0	; 63
    162e:	cd bf       	out	0x3d, r28	; 61
    1630:	df 91       	pop	r29
    1632:	cf 91       	pop	r28
    1634:	08 95       	ret

00001636 <wizchip_init>:
    1636:	ff 92       	push	r15
    1638:	0f 93       	push	r16
    163a:	1f 93       	push	r17
    163c:	cf 93       	push	r28
    163e:	df 93       	push	r29
    1640:	ec 01       	movw	r28, r24
    1642:	8b 01       	movw	r16, r22
    1644:	8c df       	rcall	.-232    	; 0x155e <wizchip_sw_reset>
    1646:	20 97       	sbiw	r28, 0x00	; 0
    1648:	69 f4       	brne	.+26     	; 0x1664 <wizchip_init+0x2e>
    164a:	30 c0       	rjmp	.+96     	; 0x16ac <wizchip_init+0x76>
    164c:	fe 01       	movw	r30, r28
    164e:	e8 0f       	add	r30, r24
    1650:	f1 1d       	adc	r31, r1
    1652:	87 fd       	sbrc	r24, 7
    1654:	fa 95       	dec	r31
    1656:	20 81       	ld	r18, Z
    1658:	92 0f       	add	r25, r18
    165a:	91 31       	cpi	r25, 0x11	; 17
    165c:	0c f0       	brlt	.+2      	; 0x1660 <wizchip_init+0x2a>
    165e:	5b c0       	rjmp	.+182    	; 0x1716 <wizchip_init+0xe0>
    1660:	8f 5f       	subi	r24, 0xFF	; 255
    1662:	02 c0       	rjmp	.+4      	; 0x1668 <wizchip_init+0x32>
    1664:	90 e0       	ldi	r25, 0x00	; 0
    1666:	80 e0       	ldi	r24, 0x00	; 0
    1668:	88 30       	cpi	r24, 0x08	; 8
    166a:	84 f3       	brlt	.-32     	; 0x164c <wizchip_init+0x16>
    166c:	f1 2c       	mov	r15, r1
    166e:	1b c0       	rjmp	.+54     	; 0x16a6 <wizchip_init+0x70>
    1670:	6f 2d       	mov	r22, r15
    1672:	0f 2c       	mov	r0, r15
    1674:	00 0c       	add	r0, r0
    1676:	77 0b       	sbc	r23, r23
    1678:	fe 01       	movw	r30, r28
    167a:	e6 0f       	add	r30, r22
    167c:	f7 1f       	adc	r31, r23
    167e:	66 0f       	add	r22, r22
    1680:	77 1f       	adc	r23, r23
    1682:	66 0f       	add	r22, r22
    1684:	77 1f       	adc	r23, r23
    1686:	6f 5f       	subi	r22, 0xFF	; 255
    1688:	7f 4f       	sbci	r23, 0xFF	; 255
    168a:	66 0f       	add	r22, r22
    168c:	77 1f       	adc	r23, r23
    168e:	66 0f       	add	r22, r22
    1690:	77 1f       	adc	r23, r23
    1692:	66 0f       	add	r22, r22
    1694:	77 1f       	adc	r23, r23
    1696:	71 5e       	subi	r23, 0xE1	; 225
    1698:	07 2e       	mov	r0, r23
    169a:	00 0c       	add	r0, r0
    169c:	88 0b       	sbc	r24, r24
    169e:	99 0b       	sbc	r25, r25
    16a0:	40 81       	ld	r20, Z
    16a2:	c4 db       	rcall	.-2168   	; 0xe2c <WIZCHIP_WRITE>
    16a4:	f3 94       	inc	r15
    16a6:	87 e0       	ldi	r24, 0x07	; 7
    16a8:	8f 15       	cp	r24, r15
    16aa:	14 f7       	brge	.-60     	; 0x1670 <wizchip_init+0x3a>
    16ac:	01 15       	cp	r16, r1
    16ae:	11 05       	cpc	r17, r1
    16b0:	69 f4       	brne	.+26     	; 0x16cc <wizchip_init+0x96>
    16b2:	80 e0       	ldi	r24, 0x00	; 0
    16b4:	33 c0       	rjmp	.+102    	; 0x171c <wizchip_init+0xe6>
    16b6:	f8 01       	movw	r30, r16
    16b8:	e8 0f       	add	r30, r24
    16ba:	f1 1d       	adc	r31, r1
    16bc:	87 fd       	sbrc	r24, 7
    16be:	fa 95       	dec	r31
    16c0:	20 81       	ld	r18, Z
    16c2:	92 0f       	add	r25, r18
    16c4:	91 31       	cpi	r25, 0x11	; 17
    16c6:	4c f5       	brge	.+82     	; 0x171a <wizchip_init+0xe4>
    16c8:	8f 5f       	subi	r24, 0xFF	; 255
    16ca:	02 c0       	rjmp	.+4      	; 0x16d0 <wizchip_init+0x9a>
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	80 e0       	ldi	r24, 0x00	; 0
    16d0:	88 30       	cpi	r24, 0x08	; 8
    16d2:	8c f3       	brlt	.-30     	; 0x16b6 <wizchip_init+0x80>
    16d4:	c0 e0       	ldi	r28, 0x00	; 0
    16d6:	1b c0       	rjmp	.+54     	; 0x170e <wizchip_init+0xd8>
    16d8:	6c 2f       	mov	r22, r28
    16da:	0c 2e       	mov	r0, r28
    16dc:	00 0c       	add	r0, r0
    16de:	77 0b       	sbc	r23, r23
    16e0:	f8 01       	movw	r30, r16
    16e2:	e6 0f       	add	r30, r22
    16e4:	f7 1f       	adc	r31, r23
    16e6:	66 0f       	add	r22, r22
    16e8:	77 1f       	adc	r23, r23
    16ea:	66 0f       	add	r22, r22
    16ec:	77 1f       	adc	r23, r23
    16ee:	6f 5f       	subi	r22, 0xFF	; 255
    16f0:	7f 4f       	sbci	r23, 0xFF	; 255
    16f2:	66 0f       	add	r22, r22
    16f4:	77 1f       	adc	r23, r23
    16f6:	66 0f       	add	r22, r22
    16f8:	77 1f       	adc	r23, r23
    16fa:	66 0f       	add	r22, r22
    16fc:	77 1f       	adc	r23, r23
    16fe:	72 5e       	subi	r23, 0xE2	; 226
    1700:	07 2e       	mov	r0, r23
    1702:	00 0c       	add	r0, r0
    1704:	88 0b       	sbc	r24, r24
    1706:	99 0b       	sbc	r25, r25
    1708:	40 81       	ld	r20, Z
    170a:	90 db       	rcall	.-2272   	; 0xe2c <WIZCHIP_WRITE>
    170c:	cf 5f       	subi	r28, 0xFF	; 255
    170e:	c8 30       	cpi	r28, 0x08	; 8
    1710:	1c f3       	brlt	.-58     	; 0x16d8 <wizchip_init+0xa2>
    1712:	80 e0       	ldi	r24, 0x00	; 0
    1714:	03 c0       	rjmp	.+6      	; 0x171c <wizchip_init+0xe6>
    1716:	8f ef       	ldi	r24, 0xFF	; 255
    1718:	01 c0       	rjmp	.+2      	; 0x171c <wizchip_init+0xe6>
    171a:	8f ef       	ldi	r24, 0xFF	; 255
    171c:	df 91       	pop	r29
    171e:	cf 91       	pop	r28
    1720:	1f 91       	pop	r17
    1722:	0f 91       	pop	r16
    1724:	ff 90       	pop	r15
    1726:	08 95       	ret

00001728 <wizchip_clrinterrupt>:
    1728:	cf 93       	push	r28
    172a:	c9 2f       	mov	r28, r25
    172c:	48 2f       	mov	r20, r24
    172e:	40 7f       	andi	r20, 0xF0	; 240
    1730:	60 e0       	ldi	r22, 0x00	; 0
    1732:	75 e1       	ldi	r23, 0x15	; 21
    1734:	80 e0       	ldi	r24, 0x00	; 0
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	79 db       	rcall	.-2318   	; 0xe2c <WIZCHIP_WRITE>
    173a:	4c 2f       	mov	r20, r28
    173c:	60 e0       	ldi	r22, 0x00	; 0
    173e:	77 e1       	ldi	r23, 0x17	; 23
    1740:	80 e0       	ldi	r24, 0x00	; 0
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	73 db       	rcall	.-2330   	; 0xe2c <WIZCHIP_WRITE>
    1746:	cf 91       	pop	r28
    1748:	08 95       	ret

0000174a <wizchip_getinterrupt>:
    174a:	cf 93       	push	r28
    174c:	60 e0       	ldi	r22, 0x00	; 0
    174e:	75 e1       	ldi	r23, 0x15	; 21
    1750:	80 e0       	ldi	r24, 0x00	; 0
    1752:	90 e0       	ldi	r25, 0x00	; 0
    1754:	04 db       	rcall	.-2552   	; 0xd5e <WIZCHIP_READ>
    1756:	c8 2f       	mov	r28, r24
    1758:	c0 7f       	andi	r28, 0xF0	; 240
    175a:	60 e0       	ldi	r22, 0x00	; 0
    175c:	77 e1       	ldi	r23, 0x17	; 23
    175e:	80 e0       	ldi	r24, 0x00	; 0
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	fd da       	rcall	.-2566   	; 0xd5e <WIZCHIP_READ>
    1764:	90 e0       	ldi	r25, 0x00	; 0
    1766:	98 2f       	mov	r25, r24
    1768:	88 27       	eor	r24, r24
    176a:	8c 0f       	add	r24, r28
    176c:	91 1d       	adc	r25, r1
    176e:	cf 91       	pop	r28
    1770:	08 95       	ret

00001772 <wizchip_setinterruptmask>:
    1772:	cf 93       	push	r28
    1774:	c9 2f       	mov	r28, r25
    1776:	48 2f       	mov	r20, r24
    1778:	60 e0       	ldi	r22, 0x00	; 0
    177a:	76 e1       	ldi	r23, 0x16	; 22
    177c:	80 e0       	ldi	r24, 0x00	; 0
    177e:	90 e0       	ldi	r25, 0x00	; 0
    1780:	55 db       	rcall	.-2390   	; 0xe2c <WIZCHIP_WRITE>
    1782:	4c 2f       	mov	r20, r28
    1784:	60 e0       	ldi	r22, 0x00	; 0
    1786:	78 e1       	ldi	r23, 0x18	; 24
    1788:	80 e0       	ldi	r24, 0x00	; 0
    178a:	90 e0       	ldi	r25, 0x00	; 0
    178c:	4f db       	rcall	.-2402   	; 0xe2c <WIZCHIP_WRITE>
    178e:	cf 91       	pop	r28
    1790:	08 95       	ret

00001792 <wizchip_getinterruptmask>:
    1792:	cf 93       	push	r28
    1794:	60 e0       	ldi	r22, 0x00	; 0
    1796:	76 e1       	ldi	r23, 0x16	; 22
    1798:	80 e0       	ldi	r24, 0x00	; 0
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	e0 da       	rcall	.-2624   	; 0xd5e <WIZCHIP_READ>
    179e:	c8 2f       	mov	r28, r24
    17a0:	60 e0       	ldi	r22, 0x00	; 0
    17a2:	78 e1       	ldi	r23, 0x18	; 24
    17a4:	80 e0       	ldi	r24, 0x00	; 0
    17a6:	90 e0       	ldi	r25, 0x00	; 0
    17a8:	da da       	rcall	.-2636   	; 0xd5e <WIZCHIP_READ>
    17aa:	90 e0       	ldi	r25, 0x00	; 0
    17ac:	98 2f       	mov	r25, r24
    17ae:	88 27       	eor	r24, r24
    17b0:	8c 0f       	add	r24, r28
    17b2:	91 1d       	adc	r25, r1
    17b4:	cf 91       	pop	r28
    17b6:	08 95       	ret

000017b8 <wizphy_getphylink>:
    17b8:	60 e0       	ldi	r22, 0x00	; 0
    17ba:	7e e2       	ldi	r23, 0x2E	; 46
    17bc:	80 e0       	ldi	r24, 0x00	; 0
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	ce da       	rcall	.-2660   	; 0xd5e <WIZCHIP_READ>
    17c2:	80 fd       	sbrc	r24, 0
    17c4:	02 c0       	rjmp	.+4      	; 0x17ca <wizphy_getphylink+0x12>
    17c6:	80 e0       	ldi	r24, 0x00	; 0
    17c8:	08 95       	ret
    17ca:	81 e0       	ldi	r24, 0x01	; 1
    17cc:	08 95       	ret

000017ce <wizphy_getphypmode>:
    17ce:	60 e0       	ldi	r22, 0x00	; 0
    17d0:	7e e2       	ldi	r23, 0x2E	; 46
    17d2:	80 e0       	ldi	r24, 0x00	; 0
    17d4:	90 e0       	ldi	r25, 0x00	; 0
    17d6:	c3 da       	rcall	.-2682   	; 0xd5e <WIZCHIP_READ>
    17d8:	88 73       	andi	r24, 0x38	; 56
    17da:	80 33       	cpi	r24, 0x30	; 48
    17dc:	11 f4       	brne	.+4      	; 0x17e2 <wizphy_getphypmode+0x14>
    17de:	81 e0       	ldi	r24, 0x01	; 1
    17e0:	08 95       	ret
    17e2:	80 e0       	ldi	r24, 0x00	; 0
    17e4:	08 95       	ret

000017e6 <wizphy_reset>:
    17e6:	60 e0       	ldi	r22, 0x00	; 0
    17e8:	7e e2       	ldi	r23, 0x2E	; 46
    17ea:	80 e0       	ldi	r24, 0x00	; 0
    17ec:	90 e0       	ldi	r25, 0x00	; 0
    17ee:	b7 da       	rcall	.-2706   	; 0xd5e <WIZCHIP_READ>
    17f0:	48 2f       	mov	r20, r24
    17f2:	4f 77       	andi	r20, 0x7F	; 127
    17f4:	60 e0       	ldi	r22, 0x00	; 0
    17f6:	7e e2       	ldi	r23, 0x2E	; 46
    17f8:	80 e0       	ldi	r24, 0x00	; 0
    17fa:	90 e0       	ldi	r25, 0x00	; 0
    17fc:	17 db       	rcall	.-2514   	; 0xe2c <WIZCHIP_WRITE>
    17fe:	60 e0       	ldi	r22, 0x00	; 0
    1800:	7e e2       	ldi	r23, 0x2E	; 46
    1802:	80 e0       	ldi	r24, 0x00	; 0
    1804:	90 e0       	ldi	r25, 0x00	; 0
    1806:	ab da       	rcall	.-2730   	; 0xd5e <WIZCHIP_READ>
    1808:	48 2f       	mov	r20, r24
    180a:	40 68       	ori	r20, 0x80	; 128
    180c:	60 e0       	ldi	r22, 0x00	; 0
    180e:	7e e2       	ldi	r23, 0x2E	; 46
    1810:	80 e0       	ldi	r24, 0x00	; 0
    1812:	90 e0       	ldi	r25, 0x00	; 0
    1814:	0b cb       	rjmp	.-2538   	; 0xe2c <WIZCHIP_WRITE>
    1816:	08 95       	ret

00001818 <wizphy_setphyconf>:
    1818:	fc 01       	movw	r30, r24
    181a:	80 81       	ld	r24, Z
    181c:	81 30       	cpi	r24, 0x01	; 1
    181e:	11 f4       	brne	.+4      	; 0x1824 <wizphy_setphyconf+0xc>
    1820:	40 e4       	ldi	r20, 0x40	; 64
    1822:	01 c0       	rjmp	.+2      	; 0x1826 <wizphy_setphyconf+0xe>
    1824:	40 e0       	ldi	r20, 0x00	; 0
    1826:	81 81       	ldd	r24, Z+1	; 0x01
    1828:	81 30       	cpi	r24, 0x01	; 1
    182a:	11 f4       	brne	.+4      	; 0x1830 <wizphy_setphyconf+0x18>
    182c:	48 63       	ori	r20, 0x38	; 56
    182e:	0e c0       	rjmp	.+28     	; 0x184c <wizphy_setphyconf+0x34>
    1830:	83 81       	ldd	r24, Z+3	; 0x03
    1832:	81 30       	cpi	r24, 0x01	; 1
    1834:	39 f4       	brne	.+14     	; 0x1844 <wizphy_setphyconf+0x2c>
    1836:	82 81       	ldd	r24, Z+2	; 0x02
    1838:	81 30       	cpi	r24, 0x01	; 1
    183a:	11 f4       	brne	.+4      	; 0x1840 <wizphy_setphyconf+0x28>
    183c:	48 61       	ori	r20, 0x18	; 24
    183e:	06 c0       	rjmp	.+12     	; 0x184c <wizphy_setphyconf+0x34>
    1840:	48 60       	ori	r20, 0x08	; 8
    1842:	04 c0       	rjmp	.+8      	; 0x184c <wizphy_setphyconf+0x34>
    1844:	82 81       	ldd	r24, Z+2	; 0x02
    1846:	81 30       	cpi	r24, 0x01	; 1
    1848:	09 f4       	brne	.+2      	; 0x184c <wizphy_setphyconf+0x34>
    184a:	40 61       	ori	r20, 0x10	; 16
    184c:	60 e0       	ldi	r22, 0x00	; 0
    184e:	7e e2       	ldi	r23, 0x2E	; 46
    1850:	80 e0       	ldi	r24, 0x00	; 0
    1852:	90 e0       	ldi	r25, 0x00	; 0
    1854:	eb da       	rcall	.-2602   	; 0xe2c <WIZCHIP_WRITE>
    1856:	c7 cf       	rjmp	.-114    	; 0x17e6 <wizphy_reset>
    1858:	08 95       	ret

0000185a <wizphy_getphyconf>:
    185a:	cf 93       	push	r28
    185c:	df 93       	push	r29
    185e:	ec 01       	movw	r28, r24
    1860:	60 e0       	ldi	r22, 0x00	; 0
    1862:	7e e2       	ldi	r23, 0x2E	; 46
    1864:	80 e0       	ldi	r24, 0x00	; 0
    1866:	90 e0       	ldi	r25, 0x00	; 0
    1868:	7a da       	rcall	.-2828   	; 0xd5e <WIZCHIP_READ>
    186a:	86 fb       	bst	r24, 6
    186c:	99 27       	eor	r25, r25
    186e:	90 f9       	bld	r25, 0
    1870:	98 83       	st	Y, r25
    1872:	88 73       	andi	r24, 0x38	; 56
    1874:	80 32       	cpi	r24, 0x20	; 32
    1876:	11 f0       	breq	.+4      	; 0x187c <wizphy_getphyconf+0x22>
    1878:	88 33       	cpi	r24, 0x38	; 56
    187a:	19 f4       	brne	.+6      	; 0x1882 <wizphy_getphyconf+0x28>
    187c:	91 e0       	ldi	r25, 0x01	; 1
    187e:	99 83       	std	Y+1, r25	; 0x01
    1880:	01 c0       	rjmp	.+2      	; 0x1884 <wizphy_getphyconf+0x2a>
    1882:	19 82       	std	Y+1, r1	; 0x01
    1884:	88 31       	cpi	r24, 0x18	; 24
    1886:	21 f0       	breq	.+8      	; 0x1890 <wizphy_getphyconf+0x36>
    1888:	80 32       	cpi	r24, 0x20	; 32
    188a:	11 f0       	breq	.+4      	; 0x1890 <wizphy_getphyconf+0x36>
    188c:	80 31       	cpi	r24, 0x10	; 16
    188e:	19 f4       	brne	.+6      	; 0x1896 <wizphy_getphyconf+0x3c>
    1890:	91 e0       	ldi	r25, 0x01	; 1
    1892:	9a 83       	std	Y+2, r25	; 0x02
    1894:	01 c0       	rjmp	.+2      	; 0x1898 <wizphy_getphyconf+0x3e>
    1896:	1a 82       	std	Y+2, r1	; 0x02
    1898:	88 31       	cpi	r24, 0x18	; 24
    189a:	21 f0       	breq	.+8      	; 0x18a4 <wizphy_getphyconf+0x4a>
    189c:	80 32       	cpi	r24, 0x20	; 32
    189e:	11 f0       	breq	.+4      	; 0x18a4 <wizphy_getphyconf+0x4a>
    18a0:	88 30       	cpi	r24, 0x08	; 8
    18a2:	19 f4       	brne	.+6      	; 0x18aa <wizphy_getphyconf+0x50>
    18a4:	81 e0       	ldi	r24, 0x01	; 1
    18a6:	8b 83       	std	Y+3, r24	; 0x03
    18a8:	01 c0       	rjmp	.+2      	; 0x18ac <wizphy_getphyconf+0x52>
    18aa:	1b 82       	std	Y+3, r1	; 0x03
    18ac:	df 91       	pop	r29
    18ae:	cf 91       	pop	r28
    18b0:	08 95       	ret

000018b2 <wizphy_setphypmode>:
    18b2:	cf 93       	push	r28
    18b4:	c8 2f       	mov	r28, r24
    18b6:	60 e0       	ldi	r22, 0x00	; 0
    18b8:	7e e2       	ldi	r23, 0x2E	; 46
    18ba:	80 e0       	ldi	r24, 0x00	; 0
    18bc:	90 e0       	ldi	r25, 0x00	; 0
    18be:	4f da       	rcall	.-2914   	; 0xd5e <WIZCHIP_READ>
    18c0:	86 ff       	sbrs	r24, 6
    18c2:	1d c0       	rjmp	.+58     	; 0x18fe <wizphy_setphypmode+0x4c>
    18c4:	87 7c       	andi	r24, 0xC7	; 199
    18c6:	c1 30       	cpi	r28, 0x01	; 1
    18c8:	19 f4       	brne	.+6      	; 0x18d0 <wizphy_setphypmode+0x1e>
    18ca:	48 2f       	mov	r20, r24
    18cc:	40 63       	ori	r20, 0x30	; 48
    18ce:	02 c0       	rjmp	.+4      	; 0x18d4 <wizphy_setphypmode+0x22>
    18d0:	48 2f       	mov	r20, r24
    18d2:	48 63       	ori	r20, 0x38	; 56
    18d4:	60 e0       	ldi	r22, 0x00	; 0
    18d6:	7e e2       	ldi	r23, 0x2E	; 46
    18d8:	80 e0       	ldi	r24, 0x00	; 0
    18da:	90 e0       	ldi	r25, 0x00	; 0
    18dc:	a7 da       	rcall	.-2738   	; 0xe2c <WIZCHIP_WRITE>
    18de:	83 df       	rcall	.-250    	; 0x17e6 <wizphy_reset>
    18e0:	60 e0       	ldi	r22, 0x00	; 0
    18e2:	7e e2       	ldi	r23, 0x2E	; 46
    18e4:	80 e0       	ldi	r24, 0x00	; 0
    18e6:	90 e0       	ldi	r25, 0x00	; 0
    18e8:	3a da       	rcall	.-2956   	; 0xd5e <WIZCHIP_READ>
    18ea:	c1 30       	cpi	r28, 0x01	; 1
    18ec:	21 f4       	brne	.+8      	; 0x18f6 <wizphy_setphypmode+0x44>
    18ee:	80 73       	andi	r24, 0x30	; 48
    18f0:	41 f4       	brne	.+16     	; 0x1902 <wizphy_setphypmode+0x50>
    18f2:	8f ef       	ldi	r24, 0xFF	; 255
    18f4:	09 c0       	rjmp	.+18     	; 0x1908 <wizphy_setphypmode+0x56>
    18f6:	88 73       	andi	r24, 0x38	; 56
    18f8:	31 f4       	brne	.+12     	; 0x1906 <wizphy_setphypmode+0x54>
    18fa:	8f ef       	ldi	r24, 0xFF	; 255
    18fc:	05 c0       	rjmp	.+10     	; 0x1908 <wizphy_setphypmode+0x56>
    18fe:	8f ef       	ldi	r24, 0xFF	; 255
    1900:	03 c0       	rjmp	.+6      	; 0x1908 <wizphy_setphypmode+0x56>
    1902:	80 e0       	ldi	r24, 0x00	; 0
    1904:	01 c0       	rjmp	.+2      	; 0x1908 <wizphy_setphypmode+0x56>
    1906:	80 e0       	ldi	r24, 0x00	; 0
    1908:	cf 91       	pop	r28
    190a:	08 95       	ret

0000190c <ctlwizchip>:
    190c:	0f 93       	push	r16
    190e:	1f 93       	push	r17
    1910:	cf 93       	push	r28
    1912:	df 93       	push	r29
    1914:	00 e0       	ldi	r16, 0x00	; 0
    1916:	10 e0       	ldi	r17, 0x00	; 0
    1918:	98 01       	movw	r18, r16
    191a:	90 e0       	ldi	r25, 0x00	; 0
    191c:	80 31       	cpi	r24, 0x10	; 16
    191e:	91 05       	cpc	r25, r1
    1920:	40 f4       	brcc	.+16     	; 0x1932 <ctlwizchip+0x26>
    1922:	eb 01       	movw	r28, r22
    1924:	fc 01       	movw	r30, r24
    1926:	88 27       	eor	r24, r24
    1928:	e6 56       	subi	r30, 0x66	; 102
    192a:	ff 4f       	sbci	r31, 0xFF	; 255
    192c:	8f 4f       	sbci	r24, 0xFF	; 255
    192e:	0c 94 e1 32 	jmp	0x65c2	; 0x65c2 <__tablejump2__>
    1932:	8f ef       	ldi	r24, 0xFF	; 255
    1934:	71 c0       	rjmp	.+226    	; 0x1a18 <ctlwizchip+0x10c>
    1936:	13 de       	rcall	.-986    	; 0x155e <wizchip_sw_reset>
    1938:	80 e0       	ldi	r24, 0x00	; 0
    193a:	6e c0       	rjmp	.+220    	; 0x1a18 <ctlwizchip+0x10c>
    193c:	cd 2b       	or	r28, r29
    193e:	21 f0       	breq	.+8      	; 0x1948 <ctlwizchip+0x3c>
    1940:	8b 01       	movw	r16, r22
    1942:	9b 01       	movw	r18, r22
    1944:	28 5f       	subi	r18, 0xF8	; 248
    1946:	3f 4f       	sbci	r19, 0xFF	; 255
    1948:	b9 01       	movw	r22, r18
    194a:	c8 01       	movw	r24, r16
    194c:	74 de       	rcall	.-792    	; 0x1636 <wizchip_init>
    194e:	64 c0       	rjmp	.+200    	; 0x1a18 <ctlwizchip+0x10c>
    1950:	88 81       	ld	r24, Y
    1952:	99 81       	ldd	r25, Y+1	; 0x01
    1954:	e9 de       	rcall	.-558    	; 0x1728 <wizchip_clrinterrupt>
    1956:	80 e0       	ldi	r24, 0x00	; 0
    1958:	5f c0       	rjmp	.+190    	; 0x1a18 <ctlwizchip+0x10c>
    195a:	f7 de       	rcall	.-530    	; 0x174a <wizchip_getinterrupt>
    195c:	99 83       	std	Y+1, r25	; 0x01
    195e:	88 83       	st	Y, r24
    1960:	80 e0       	ldi	r24, 0x00	; 0
    1962:	5a c0       	rjmp	.+180    	; 0x1a18 <ctlwizchip+0x10c>
    1964:	88 81       	ld	r24, Y
    1966:	99 81       	ldd	r25, Y+1	; 0x01
    1968:	04 df       	rcall	.-504    	; 0x1772 <wizchip_setinterruptmask>
    196a:	80 e0       	ldi	r24, 0x00	; 0
    196c:	55 c0       	rjmp	.+170    	; 0x1a18 <ctlwizchip+0x10c>
    196e:	11 df       	rcall	.-478    	; 0x1792 <wizchip_getinterruptmask>
    1970:	99 83       	std	Y+1, r25	; 0x01
    1972:	88 83       	st	Y, r24
    1974:	80 e0       	ldi	r24, 0x00	; 0
    1976:	50 c0       	rjmp	.+160    	; 0x1a18 <ctlwizchip+0x10c>
    1978:	49 81       	ldd	r20, Y+1	; 0x01
    197a:	60 e0       	ldi	r22, 0x00	; 0
    197c:	73 e1       	ldi	r23, 0x13	; 19
    197e:	80 e0       	ldi	r24, 0x00	; 0
    1980:	90 e0       	ldi	r25, 0x00	; 0
    1982:	54 da       	rcall	.-2904   	; 0xe2c <WIZCHIP_WRITE>
    1984:	48 81       	ld	r20, Y
    1986:	60 e0       	ldi	r22, 0x00	; 0
    1988:	74 e1       	ldi	r23, 0x14	; 20
    198a:	80 e0       	ldi	r24, 0x00	; 0
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	4e da       	rcall	.-2916   	; 0xe2c <WIZCHIP_WRITE>
    1990:	80 e0       	ldi	r24, 0x00	; 0
    1992:	42 c0       	rjmp	.+132    	; 0x1a18 <ctlwizchip+0x10c>
    1994:	60 e0       	ldi	r22, 0x00	; 0
    1996:	73 e1       	ldi	r23, 0x13	; 19
    1998:	80 e0       	ldi	r24, 0x00	; 0
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	e0 d9       	rcall	.-3136   	; 0xd5e <WIZCHIP_READ>
    199e:	08 2f       	mov	r16, r24
    19a0:	10 e0       	ldi	r17, 0x00	; 0
    19a2:	10 2f       	mov	r17, r16
    19a4:	00 27       	eor	r16, r16
    19a6:	60 e0       	ldi	r22, 0x00	; 0
    19a8:	74 e1       	ldi	r23, 0x14	; 20
    19aa:	80 e0       	ldi	r24, 0x00	; 0
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	d7 d9       	rcall	.-3154   	; 0xd5e <WIZCHIP_READ>
    19b0:	08 0f       	add	r16, r24
    19b2:	11 1d       	adc	r17, r1
    19b4:	19 83       	std	Y+1, r17	; 0x01
    19b6:	08 83       	st	Y, r16
    19b8:	80 e0       	ldi	r24, 0x00	; 0
    19ba:	2e c0       	rjmp	.+92     	; 0x1a18 <ctlwizchip+0x10c>
    19bc:	e6 e0       	ldi	r30, 0x06	; 6
    19be:	f2 e0       	ldi	r31, 0x02	; 2
    19c0:	82 81       	ldd	r24, Z+2	; 0x02
    19c2:	88 83       	st	Y, r24
    19c4:	83 81       	ldd	r24, Z+3	; 0x03
    19c6:	89 83       	std	Y+1, r24	; 0x01
    19c8:	84 81       	ldd	r24, Z+4	; 0x04
    19ca:	8a 83       	std	Y+2, r24	; 0x02
    19cc:	85 81       	ldd	r24, Z+5	; 0x05
    19ce:	8b 83       	std	Y+3, r24	; 0x03
    19d0:	86 81       	ldd	r24, Z+6	; 0x06
    19d2:	8c 83       	std	Y+4, r24	; 0x04
    19d4:	1d 82       	std	Y+5, r1	; 0x05
    19d6:	80 e0       	ldi	r24, 0x00	; 0
    19d8:	1f c0       	rjmp	.+62     	; 0x1a18 <ctlwizchip+0x10c>
    19da:	05 df       	rcall	.-502    	; 0x17e6 <wizphy_reset>
    19dc:	80 e0       	ldi	r24, 0x00	; 0
    19de:	1c c0       	rjmp	.+56     	; 0x1a18 <ctlwizchip+0x10c>
    19e0:	cb 01       	movw	r24, r22
    19e2:	1a df       	rcall	.-460    	; 0x1818 <wizphy_setphyconf>
    19e4:	80 e0       	ldi	r24, 0x00	; 0
    19e6:	18 c0       	rjmp	.+48     	; 0x1a18 <ctlwizchip+0x10c>
    19e8:	cb 01       	movw	r24, r22
    19ea:	37 df       	rcall	.-402    	; 0x185a <wizphy_getphyconf>
    19ec:	80 e0       	ldi	r24, 0x00	; 0
    19ee:	14 c0       	rjmp	.+40     	; 0x1a18 <ctlwizchip+0x10c>
    19f0:	88 81       	ld	r24, Y
    19f2:	5f df       	rcall	.-322    	; 0x18b2 <wizphy_setphypmode>
    19f4:	11 c0       	rjmp	.+34     	; 0x1a18 <ctlwizchip+0x10c>
    19f6:	eb de       	rcall	.-554    	; 0x17ce <wizphy_getphypmode>
    19f8:	8f 3f       	cpi	r24, 0xFF	; 255
    19fa:	59 f0       	breq	.+22     	; 0x1a12 <ctlwizchip+0x106>
    19fc:	88 83       	st	Y, r24
    19fe:	80 e0       	ldi	r24, 0x00	; 0
    1a00:	0b c0       	rjmp	.+22     	; 0x1a18 <ctlwizchip+0x10c>
    1a02:	da de       	rcall	.-588    	; 0x17b8 <wizphy_getphylink>
    1a04:	8f 3f       	cpi	r24, 0xFF	; 255
    1a06:	39 f0       	breq	.+14     	; 0x1a16 <ctlwizchip+0x10a>
    1a08:	88 83       	st	Y, r24
    1a0a:	80 e0       	ldi	r24, 0x00	; 0
    1a0c:	05 c0       	rjmp	.+10     	; 0x1a18 <ctlwizchip+0x10c>
    1a0e:	80 e0       	ldi	r24, 0x00	; 0
    1a10:	03 c0       	rjmp	.+6      	; 0x1a18 <ctlwizchip+0x10c>
    1a12:	8f ef       	ldi	r24, 0xFF	; 255
    1a14:	01 c0       	rjmp	.+2      	; 0x1a18 <ctlwizchip+0x10c>
    1a16:	8f ef       	ldi	r24, 0xFF	; 255
    1a18:	df 91       	pop	r29
    1a1a:	cf 91       	pop	r28
    1a1c:	1f 91       	pop	r17
    1a1e:	0f 91       	pop	r16
    1a20:	08 95       	ret

00001a22 <wizchip_setnetinfo>:
    1a22:	cf 93       	push	r28
    1a24:	df 93       	push	r29
    1a26:	ec 01       	movw	r28, r24
    1a28:	26 e0       	ldi	r18, 0x06	; 6
    1a2a:	30 e0       	ldi	r19, 0x00	; 0
    1a2c:	ac 01       	movw	r20, r24
    1a2e:	60 e0       	ldi	r22, 0x00	; 0
    1a30:	79 e0       	ldi	r23, 0x09	; 9
    1a32:	80 e0       	ldi	r24, 0x00	; 0
    1a34:	90 e0       	ldi	r25, 0x00	; 0
    1a36:	ee da       	rcall	.-2596   	; 0x1014 <WIZCHIP_WRITE_BUF>
    1a38:	ae 01       	movw	r20, r28
    1a3a:	42 5f       	subi	r20, 0xF2	; 242
    1a3c:	5f 4f       	sbci	r21, 0xFF	; 255
    1a3e:	24 e0       	ldi	r18, 0x04	; 4
    1a40:	30 e0       	ldi	r19, 0x00	; 0
    1a42:	60 e0       	ldi	r22, 0x00	; 0
    1a44:	71 e0       	ldi	r23, 0x01	; 1
    1a46:	80 e0       	ldi	r24, 0x00	; 0
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	e4 da       	rcall	.-2616   	; 0x1014 <WIZCHIP_WRITE_BUF>
    1a4c:	ae 01       	movw	r20, r28
    1a4e:	46 5f       	subi	r20, 0xF6	; 246
    1a50:	5f 4f       	sbci	r21, 0xFF	; 255
    1a52:	24 e0       	ldi	r18, 0x04	; 4
    1a54:	30 e0       	ldi	r19, 0x00	; 0
    1a56:	60 e0       	ldi	r22, 0x00	; 0
    1a58:	75 e0       	ldi	r23, 0x05	; 5
    1a5a:	80 e0       	ldi	r24, 0x00	; 0
    1a5c:	90 e0       	ldi	r25, 0x00	; 0
    1a5e:	da da       	rcall	.-2636   	; 0x1014 <WIZCHIP_WRITE_BUF>
    1a60:	ae 01       	movw	r20, r28
    1a62:	4a 5f       	subi	r20, 0xFA	; 250
    1a64:	5f 4f       	sbci	r21, 0xFF	; 255
    1a66:	24 e0       	ldi	r18, 0x04	; 4
    1a68:	30 e0       	ldi	r19, 0x00	; 0
    1a6a:	60 e0       	ldi	r22, 0x00	; 0
    1a6c:	7f e0       	ldi	r23, 0x0F	; 15
    1a6e:	80 e0       	ldi	r24, 0x00	; 0
    1a70:	90 e0       	ldi	r25, 0x00	; 0
    1a72:	d0 da       	rcall	.-2656   	; 0x1014 <WIZCHIP_WRITE_BUF>
    1a74:	8a 89       	ldd	r24, Y+18	; 0x12
    1a76:	e9 e0       	ldi	r30, 0x09	; 9
    1a78:	f4 e0       	ldi	r31, 0x04	; 4
    1a7a:	80 83       	st	Z, r24
    1a7c:	8b 89       	ldd	r24, Y+19	; 0x13
    1a7e:	81 83       	std	Z+1, r24	; 0x01
    1a80:	8c 89       	ldd	r24, Y+20	; 0x14
    1a82:	82 83       	std	Z+2, r24	; 0x02
    1a84:	8d 89       	ldd	r24, Y+21	; 0x15
    1a86:	83 83       	std	Z+3, r24	; 0x03
    1a88:	8e 89       	ldd	r24, Y+22	; 0x16
    1a8a:	80 93 08 04 	sts	0x0408, r24	; 0x800408 <_DHCP_>
    1a8e:	df 91       	pop	r29
    1a90:	cf 91       	pop	r28
    1a92:	08 95       	ret

00001a94 <wizchip_getnetinfo>:
    1a94:	cf 93       	push	r28
    1a96:	df 93       	push	r29
    1a98:	ec 01       	movw	r28, r24
    1a9a:	26 e0       	ldi	r18, 0x06	; 6
    1a9c:	30 e0       	ldi	r19, 0x00	; 0
    1a9e:	ac 01       	movw	r20, r24
    1aa0:	60 e0       	ldi	r22, 0x00	; 0
    1aa2:	79 e0       	ldi	r23, 0x09	; 9
    1aa4:	80 e0       	ldi	r24, 0x00	; 0
    1aa6:	90 e0       	ldi	r25, 0x00	; 0
    1aa8:	33 da       	rcall	.-2970   	; 0xf10 <WIZCHIP_READ_BUF>
    1aaa:	ae 01       	movw	r20, r28
    1aac:	42 5f       	subi	r20, 0xF2	; 242
    1aae:	5f 4f       	sbci	r21, 0xFF	; 255
    1ab0:	24 e0       	ldi	r18, 0x04	; 4
    1ab2:	30 e0       	ldi	r19, 0x00	; 0
    1ab4:	60 e0       	ldi	r22, 0x00	; 0
    1ab6:	71 e0       	ldi	r23, 0x01	; 1
    1ab8:	80 e0       	ldi	r24, 0x00	; 0
    1aba:	90 e0       	ldi	r25, 0x00	; 0
    1abc:	29 da       	rcall	.-2990   	; 0xf10 <WIZCHIP_READ_BUF>
    1abe:	ae 01       	movw	r20, r28
    1ac0:	46 5f       	subi	r20, 0xF6	; 246
    1ac2:	5f 4f       	sbci	r21, 0xFF	; 255
    1ac4:	24 e0       	ldi	r18, 0x04	; 4
    1ac6:	30 e0       	ldi	r19, 0x00	; 0
    1ac8:	60 e0       	ldi	r22, 0x00	; 0
    1aca:	75 e0       	ldi	r23, 0x05	; 5
    1acc:	80 e0       	ldi	r24, 0x00	; 0
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	1f da       	rcall	.-3010   	; 0xf10 <WIZCHIP_READ_BUF>
    1ad2:	ae 01       	movw	r20, r28
    1ad4:	4a 5f       	subi	r20, 0xFA	; 250
    1ad6:	5f 4f       	sbci	r21, 0xFF	; 255
    1ad8:	24 e0       	ldi	r18, 0x04	; 4
    1ada:	30 e0       	ldi	r19, 0x00	; 0
    1adc:	60 e0       	ldi	r22, 0x00	; 0
    1ade:	7f e0       	ldi	r23, 0x0F	; 15
    1ae0:	80 e0       	ldi	r24, 0x00	; 0
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	15 da       	rcall	.-3030   	; 0xf10 <WIZCHIP_READ_BUF>
    1ae6:	e9 e0       	ldi	r30, 0x09	; 9
    1ae8:	f4 e0       	ldi	r31, 0x04	; 4
    1aea:	80 81       	ld	r24, Z
    1aec:	8a 8b       	std	Y+18, r24	; 0x12
    1aee:	81 81       	ldd	r24, Z+1	; 0x01
    1af0:	8b 8b       	std	Y+19, r24	; 0x13
    1af2:	82 81       	ldd	r24, Z+2	; 0x02
    1af4:	8c 8b       	std	Y+20, r24	; 0x14
    1af6:	83 81       	ldd	r24, Z+3	; 0x03
    1af8:	8d 8b       	std	Y+21, r24	; 0x15
    1afa:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <_DHCP_>
    1afe:	8e 8b       	std	Y+22, r24	; 0x16
    1b00:	df 91       	pop	r29
    1b02:	cf 91       	pop	r28
    1b04:	08 95       	ret

00001b06 <NewMessageData>:
    1b06:	fc 01       	movw	r30, r24
    1b08:	73 83       	std	Z+3, r23	; 0x03
    1b0a:	62 83       	std	Z+2, r22	; 0x02
    1b0c:	51 83       	std	Z+1, r21	; 0x01
    1b0e:	40 83       	st	Z, r20
    1b10:	08 95       	ret

00001b12 <getNextPacketId>:
    1b12:	fc 01       	movw	r30, r24
    1b14:	80 81       	ld	r24, Z
    1b16:	91 81       	ldd	r25, Z+1	; 0x01
    1b18:	a2 81       	ldd	r26, Z+2	; 0x02
    1b1a:	b3 81       	ldd	r27, Z+3	; 0x03
    1b1c:	8f 3f       	cpi	r24, 0xFF	; 255
    1b1e:	2f ef       	ldi	r18, 0xFF	; 255
    1b20:	92 07       	cpc	r25, r18
    1b22:	a1 05       	cpc	r26, r1
    1b24:	b1 05       	cpc	r27, r1
    1b26:	39 f0       	breq	.+14     	; 0x1b36 <getNextPacketId+0x24>
    1b28:	bc 01       	movw	r22, r24
    1b2a:	cd 01       	movw	r24, r26
    1b2c:	6f 5f       	subi	r22, 0xFF	; 255
    1b2e:	7f 4f       	sbci	r23, 0xFF	; 255
    1b30:	8f 4f       	sbci	r24, 0xFF	; 255
    1b32:	9f 4f       	sbci	r25, 0xFF	; 255
    1b34:	04 c0       	rjmp	.+8      	; 0x1b3e <getNextPacketId+0x2c>
    1b36:	61 e0       	ldi	r22, 0x01	; 1
    1b38:	70 e0       	ldi	r23, 0x00	; 0
    1b3a:	80 e0       	ldi	r24, 0x00	; 0
    1b3c:	90 e0       	ldi	r25, 0x00	; 0
    1b3e:	60 83       	st	Z, r22
    1b40:	71 83       	std	Z+1, r23	; 0x01
    1b42:	82 83       	std	Z+2, r24	; 0x02
    1b44:	93 83       	std	Z+3, r25	; 0x03
    1b46:	08 95       	ret

00001b48 <sendPacket>:
    1b48:	2f 92       	push	r2
    1b4a:	3f 92       	push	r3
    1b4c:	4f 92       	push	r4
    1b4e:	5f 92       	push	r5
    1b50:	6f 92       	push	r6
    1b52:	7f 92       	push	r7
    1b54:	8f 92       	push	r8
    1b56:	9f 92       	push	r9
    1b58:	af 92       	push	r10
    1b5a:	bf 92       	push	r11
    1b5c:	cf 92       	push	r12
    1b5e:	df 92       	push	r13
    1b60:	ef 92       	push	r14
    1b62:	ff 92       	push	r15
    1b64:	0f 93       	push	r16
    1b66:	1f 93       	push	r17
    1b68:	cf 93       	push	r28
    1b6a:	df 93       	push	r29
    1b6c:	ec 01       	movw	r28, r24
    1b6e:	2a 01       	movw	r4, r20
    1b70:	3b 01       	movw	r6, r22
    1b72:	19 01       	movw	r2, r18
    1b74:	81 2c       	mov	r8, r1
    1b76:	91 2c       	mov	r9, r1
    1b78:	54 01       	movw	r10, r8
    1b7a:	1a c0       	rjmp	.+52     	; 0x1bb0 <sendPacket+0x68>
    1b7c:	ef a5       	ldd	r30, Y+47	; 0x2f
    1b7e:	f8 a9       	ldd	r31, Y+48	; 0x30
    1b80:	c6 80       	ldd	r12, Z+6	; 0x06
    1b82:	d7 80       	ldd	r13, Z+7	; 0x07
    1b84:	c1 01       	movw	r24, r2
    1b86:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <left_ms>
    1b8a:	7b 01       	movw	r14, r22
    1b8c:	8c 01       	movw	r16, r24
    1b8e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1b90:	9d 85       	ldd	r25, Y+13	; 0x0d
    1b92:	bc 01       	movw	r22, r24
    1b94:	68 0d       	add	r22, r8
    1b96:	79 1d       	adc	r23, r9
    1b98:	a3 01       	movw	r20, r6
    1b9a:	92 01       	movw	r18, r4
    1b9c:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b9e:	98 a9       	ldd	r25, Y+48	; 0x30
    1ba0:	f6 01       	movw	r30, r12
    1ba2:	19 95       	eicall
    1ba4:	99 23       	and	r25, r25
    1ba6:	74 f0       	brlt	.+28     	; 0x1bc4 <sendPacket+0x7c>
    1ba8:	86 0e       	add	r8, r22
    1baa:	97 1e       	adc	r9, r23
    1bac:	a8 1e       	adc	r10, r24
    1bae:	b9 1e       	adc	r11, r25
    1bb0:	84 14       	cp	r8, r4
    1bb2:	95 04       	cpc	r9, r5
    1bb4:	a6 04       	cpc	r10, r6
    1bb6:	b7 04       	cpc	r11, r7
    1bb8:	2c f4       	brge	.+10     	; 0x1bc4 <sendPacket+0x7c>
    1bba:	c1 01       	movw	r24, r2
    1bbc:	0e 94 1d 1e 	call	0x3c3a	; 0x3c3a <expired>
    1bc0:	88 23       	and	r24, r24
    1bc2:	e1 f2       	breq	.-72     	; 0x1b7c <sendPacket+0x34>
    1bc4:	84 14       	cp	r8, r4
    1bc6:	95 04       	cpc	r9, r5
    1bc8:	a6 04       	cpc	r10, r6
    1bca:	b7 04       	cpc	r11, r7
    1bcc:	61 f4       	brne	.+24     	; 0x1be6 <sendPacket+0x9e>
    1bce:	48 89       	ldd	r20, Y+16	; 0x10
    1bd0:	59 89       	ldd	r21, Y+17	; 0x11
    1bd2:	6a 89       	ldd	r22, Y+18	; 0x12
    1bd4:	7b 89       	ldd	r23, Y+19	; 0x13
    1bd6:	ce 01       	movw	r24, r28
    1bd8:	c1 96       	adiw	r24, 0x31	; 49
    1bda:	0e 94 5b 1e 	call	0x3cb6	; 0x3cb6 <countdown>
    1bde:	60 e0       	ldi	r22, 0x00	; 0
    1be0:	70 e0       	ldi	r23, 0x00	; 0
    1be2:	cb 01       	movw	r24, r22
    1be4:	03 c0       	rjmp	.+6      	; 0x1bec <sendPacket+0xa4>
    1be6:	6f ef       	ldi	r22, 0xFF	; 255
    1be8:	7f ef       	ldi	r23, 0xFF	; 255
    1bea:	cb 01       	movw	r24, r22
    1bec:	df 91       	pop	r29
    1bee:	cf 91       	pop	r28
    1bf0:	1f 91       	pop	r17
    1bf2:	0f 91       	pop	r16
    1bf4:	ff 90       	pop	r15
    1bf6:	ef 90       	pop	r14
    1bf8:	df 90       	pop	r13
    1bfa:	cf 90       	pop	r12
    1bfc:	bf 90       	pop	r11
    1bfe:	af 90       	pop	r10
    1c00:	9f 90       	pop	r9
    1c02:	8f 90       	pop	r8
    1c04:	7f 90       	pop	r7
    1c06:	6f 90       	pop	r6
    1c08:	5f 90       	pop	r5
    1c0a:	4f 90       	pop	r4
    1c0c:	3f 90       	pop	r3
    1c0e:	2f 90       	pop	r2
    1c10:	08 95       	ret

00001c12 <MQTTClient>:
    1c12:	4f 92       	push	r4
    1c14:	5f 92       	push	r5
    1c16:	6f 92       	push	r6
    1c18:	7f 92       	push	r7
    1c1a:	af 92       	push	r10
    1c1c:	bf 92       	push	r11
    1c1e:	cf 92       	push	r12
    1c20:	df 92       	push	r13
    1c22:	ef 92       	push	r14
    1c24:	ff 92       	push	r15
    1c26:	0f 93       	push	r16
    1c28:	1f 93       	push	r17
    1c2a:	dc 01       	movw	r26, r24
    1c2c:	d0 96       	adiw	r26, 0x30	; 48
    1c2e:	7c 93       	st	X, r23
    1c30:	6e 93       	st	-X, r22
    1c32:	9f 97       	sbiw	r26, 0x2f	; 47
    1c34:	41 2c       	mov	r4, r1
    1c36:	51 2c       	mov	r5, r1
    1c38:	32 01       	movw	r6, r4
    1c3a:	0e c0       	rjmp	.+28     	; 0x1c58 <MQTTClient+0x46>
    1c3c:	f2 01       	movw	r30, r4
    1c3e:	ee 0f       	add	r30, r30
    1c40:	ff 1f       	adc	r31, r31
    1c42:	ee 0f       	add	r30, r30
    1c44:	ff 1f       	adc	r31, r31
    1c46:	ea 0f       	add	r30, r26
    1c48:	fb 1f       	adc	r31, r27
    1c4a:	12 8e       	std	Z+26, r1	; 0x1a
    1c4c:	11 8e       	std	Z+25, r1	; 0x19
    1c4e:	8f ef       	ldi	r24, 0xFF	; 255
    1c50:	48 1a       	sub	r4, r24
    1c52:	58 0a       	sbc	r5, r24
    1c54:	68 0a       	sbc	r6, r24
    1c56:	78 0a       	sbc	r7, r24
    1c58:	85 e0       	ldi	r24, 0x05	; 5
    1c5a:	48 16       	cp	r4, r24
    1c5c:	51 04       	cpc	r5, r1
    1c5e:	61 04       	cpc	r6, r1
    1c60:	71 04       	cpc	r7, r1
    1c62:	64 f3       	brlt	.-40     	; 0x1c3c <MQTTClient+0x2a>
    1c64:	14 96       	adiw	r26, 0x04	; 4
    1c66:	2d 93       	st	X+, r18
    1c68:	3d 93       	st	X+, r19
    1c6a:	4d 93       	st	X+, r20
    1c6c:	5c 93       	st	X, r21
    1c6e:	17 97       	sbiw	r26, 0x07	; 7
    1c70:	1d 96       	adiw	r26, 0x0d	; 13
    1c72:	1c 93       	st	X, r17
    1c74:	0e 93       	st	-X, r16
    1c76:	1c 97       	sbiw	r26, 0x0c	; 12
    1c78:	19 96       	adiw	r26, 0x09	; 9
    1c7a:	fc 92       	st	X, r15
    1c7c:	ee 92       	st	-X, r14
    1c7e:	18 97       	sbiw	r26, 0x08	; 8
    1c80:	1f 96       	adiw	r26, 0x0f	; 15
    1c82:	dc 92       	st	X, r13
    1c84:	ce 92       	st	-X, r12
    1c86:	1e 97       	sbiw	r26, 0x0e	; 14
    1c88:	1b 96       	adiw	r26, 0x0b	; 11
    1c8a:	bc 92       	st	X, r11
    1c8c:	ae 92       	st	-X, r10
    1c8e:	1a 97       	sbiw	r26, 0x0a	; 10
    1c90:	55 96       	adiw	r26, 0x15	; 21
    1c92:	1d 92       	st	X+, r1
    1c94:	1d 92       	st	X+, r1
    1c96:	1d 92       	st	X+, r1
    1c98:	1c 92       	st	X, r1
    1c9a:	58 97       	sbiw	r26, 0x18	; 24
    1c9c:	54 96       	adiw	r26, 0x14	; 20
    1c9e:	1c 92       	st	X, r1
    1ca0:	54 97       	sbiw	r26, 0x14	; 20
    1ca2:	9e 96       	adiw	r26, 0x2e	; 46
    1ca4:	1c 92       	st	X, r1
    1ca6:	1e 92       	st	-X, r1
    1ca8:	9d 97       	sbiw	r26, 0x2d	; 45
    1caa:	cd 01       	movw	r24, r26
    1cac:	c1 96       	adiw	r24, 0x31	; 49
    1cae:	0e 94 a4 1e 	call	0x3d48	; 0x3d48 <InitTimer>
    1cb2:	1f 91       	pop	r17
    1cb4:	0f 91       	pop	r16
    1cb6:	ff 90       	pop	r15
    1cb8:	ef 90       	pop	r14
    1cba:	df 90       	pop	r13
    1cbc:	cf 90       	pop	r12
    1cbe:	bf 90       	pop	r11
    1cc0:	af 90       	pop	r10
    1cc2:	7f 90       	pop	r7
    1cc4:	6f 90       	pop	r6
    1cc6:	5f 90       	pop	r5
    1cc8:	4f 90       	pop	r4
    1cca:	08 95       	ret

00001ccc <decodePacket>:
    1ccc:	2f 92       	push	r2
    1cce:	3f 92       	push	r3
    1cd0:	4f 92       	push	r4
    1cd2:	5f 92       	push	r5
    1cd4:	6f 92       	push	r6
    1cd6:	7f 92       	push	r7
    1cd8:	8f 92       	push	r8
    1cda:	9f 92       	push	r9
    1cdc:	af 92       	push	r10
    1cde:	bf 92       	push	r11
    1ce0:	cf 92       	push	r12
    1ce2:	df 92       	push	r13
    1ce4:	ef 92       	push	r14
    1ce6:	ff 92       	push	r15
    1ce8:	0f 93       	push	r16
    1cea:	1f 93       	push	r17
    1cec:	cf 93       	push	r28
    1cee:	df 93       	push	r29
    1cf0:	00 d0       	rcall	.+0      	; 0x1cf2 <decodePacket+0x26>
    1cf2:	1f 92       	push	r1
    1cf4:	1f 92       	push	r1
    1cf6:	cd b7       	in	r28, 0x3d	; 61
    1cf8:	de b7       	in	r29, 0x3e	; 62
    1cfa:	1c 01       	movw	r2, r24
    1cfc:	6b 01       	movw	r12, r22
    1cfe:	2a 83       	std	Y+2, r18	; 0x02
    1d00:	3b 83       	std	Y+3, r19	; 0x03
    1d02:	4c 83       	std	Y+4, r20	; 0x04
    1d04:	5d 83       	std	Y+5, r21	; 0x05
    1d06:	db 01       	movw	r26, r22
    1d08:	1d 92       	st	X+, r1
    1d0a:	1d 92       	st	X+, r1
    1d0c:	1d 92       	st	X+, r1
    1d0e:	1c 92       	st	X, r1
    1d10:	13 97       	sbiw	r26, 0x03	; 3
    1d12:	41 2c       	mov	r4, r1
    1d14:	51 2c       	mov	r5, r1
    1d16:	32 01       	movw	r6, r4
    1d18:	81 2c       	mov	r8, r1
    1d1a:	91 2c       	mov	r9, r1
    1d1c:	54 01       	movw	r10, r8
    1d1e:	83 94       	inc	r8
    1d20:	bf ef       	ldi	r27, 0xFF	; 255
    1d22:	4b 1a       	sub	r4, r27
    1d24:	5b 0a       	sbc	r5, r27
    1d26:	6b 0a       	sbc	r6, r27
    1d28:	7b 0a       	sbc	r7, r27
    1d2a:	e5 e0       	ldi	r30, 0x05	; 5
    1d2c:	4e 16       	cp	r4, r30
    1d2e:	51 04       	cpc	r5, r1
    1d30:	61 04       	cpc	r6, r1
    1d32:	71 04       	cpc	r7, r1
    1d34:	0c f0       	brlt	.+2      	; 0x1d38 <decodePacket+0x6c>
    1d36:	51 c0       	rjmp	.+162    	; 0x1dda <decodePacket+0x10e>
    1d38:	d1 01       	movw	r26, r2
    1d3a:	9f 96       	adiw	r26, 0x2f	; 47
    1d3c:	8d 91       	ld	r24, X+
    1d3e:	9c 91       	ld	r25, X
    1d40:	d0 97       	sbiw	r26, 0x30	; 48
    1d42:	dc 01       	movw	r26, r24
    1d44:	14 96       	adiw	r26, 0x04	; 4
    1d46:	ed 91       	ld	r30, X+
    1d48:	fc 91       	ld	r31, X
    1d4a:	15 97       	sbiw	r26, 0x05	; 5
    1d4c:	ea 80       	ldd	r14, Y+2	; 0x02
    1d4e:	fb 80       	ldd	r15, Y+3	; 0x03
    1d50:	0c 81       	ldd	r16, Y+4	; 0x04
    1d52:	1d 81       	ldd	r17, Y+5	; 0x05
    1d54:	21 e0       	ldi	r18, 0x01	; 1
    1d56:	30 e0       	ldi	r19, 0x00	; 0
    1d58:	40 e0       	ldi	r20, 0x00	; 0
    1d5a:	50 e0       	ldi	r21, 0x00	; 0
    1d5c:	be 01       	movw	r22, r28
    1d5e:	6f 5f       	subi	r22, 0xFF	; 255
    1d60:	7f 4f       	sbci	r23, 0xFF	; 255
    1d62:	19 95       	eicall
    1d64:	61 30       	cpi	r22, 0x01	; 1
    1d66:	71 05       	cpc	r23, r1
    1d68:	81 05       	cpc	r24, r1
    1d6a:	91 05       	cpc	r25, r1
    1d6c:	b1 f5       	brne	.+108    	; 0x1dda <decodePacket+0x10e>
    1d6e:	f9 80       	ldd	r15, Y+1	; 0x01
    1d70:	af 2d       	mov	r26, r15
    1d72:	af 77       	andi	r26, 0x7F	; 127
    1d74:	b0 e0       	ldi	r27, 0x00	; 0
    1d76:	a5 01       	movw	r20, r10
    1d78:	94 01       	movw	r18, r8
    1d7a:	0e 94 e9 32 	call	0x65d2	; 0x65d2 <__muluhisi3>
    1d7e:	f6 01       	movw	r30, r12
    1d80:	00 81       	ld	r16, Z
    1d82:	11 81       	ldd	r17, Z+1	; 0x01
    1d84:	22 81       	ldd	r18, Z+2	; 0x02
    1d86:	33 81       	ldd	r19, Z+3	; 0x03
    1d88:	dc 01       	movw	r26, r24
    1d8a:	cb 01       	movw	r24, r22
    1d8c:	80 0f       	add	r24, r16
    1d8e:	91 1f       	adc	r25, r17
    1d90:	a2 1f       	adc	r26, r18
    1d92:	b3 1f       	adc	r27, r19
    1d94:	80 83       	st	Z, r24
    1d96:	91 83       	std	Z+1, r25	; 0x01
    1d98:	a2 83       	std	Z+2, r26	; 0x02
    1d9a:	b3 83       	std	Z+3, r27	; 0x03
    1d9c:	88 0c       	add	r8, r8
    1d9e:	99 1c       	adc	r9, r9
    1da0:	aa 1c       	adc	r10, r10
    1da2:	bb 1c       	adc	r11, r11
    1da4:	88 0c       	add	r8, r8
    1da6:	99 1c       	adc	r9, r9
    1da8:	aa 1c       	adc	r10, r10
    1daa:	bb 1c       	adc	r11, r11
    1dac:	88 0c       	add	r8, r8
    1dae:	99 1c       	adc	r9, r9
    1db0:	aa 1c       	adc	r10, r10
    1db2:	bb 1c       	adc	r11, r11
    1db4:	88 0c       	add	r8, r8
    1db6:	99 1c       	adc	r9, r9
    1db8:	aa 1c       	adc	r10, r10
    1dba:	bb 1c       	adc	r11, r11
    1dbc:	88 0c       	add	r8, r8
    1dbe:	99 1c       	adc	r9, r9
    1dc0:	aa 1c       	adc	r10, r10
    1dc2:	bb 1c       	adc	r11, r11
    1dc4:	88 0c       	add	r8, r8
    1dc6:	99 1c       	adc	r9, r9
    1dc8:	aa 1c       	adc	r10, r10
    1dca:	bb 1c       	adc	r11, r11
    1dcc:	88 0c       	add	r8, r8
    1dce:	99 1c       	adc	r9, r9
    1dd0:	aa 1c       	adc	r10, r10
    1dd2:	bb 1c       	adc	r11, r11
    1dd4:	ff 20       	and	r15, r15
    1dd6:	0c f4       	brge	.+2      	; 0x1dda <decodePacket+0x10e>
    1dd8:	a3 cf       	rjmp	.-186    	; 0x1d20 <decodePacket+0x54>
    1dda:	c3 01       	movw	r24, r6
    1ddc:	b2 01       	movw	r22, r4
    1dde:	0f 90       	pop	r0
    1de0:	0f 90       	pop	r0
    1de2:	0f 90       	pop	r0
    1de4:	0f 90       	pop	r0
    1de6:	0f 90       	pop	r0
    1de8:	df 91       	pop	r29
    1dea:	cf 91       	pop	r28
    1dec:	1f 91       	pop	r17
    1dee:	0f 91       	pop	r16
    1df0:	ff 90       	pop	r15
    1df2:	ef 90       	pop	r14
    1df4:	df 90       	pop	r13
    1df6:	cf 90       	pop	r12
    1df8:	bf 90       	pop	r11
    1dfa:	af 90       	pop	r10
    1dfc:	9f 90       	pop	r9
    1dfe:	8f 90       	pop	r8
    1e00:	7f 90       	pop	r7
    1e02:	6f 90       	pop	r6
    1e04:	5f 90       	pop	r5
    1e06:	4f 90       	pop	r4
    1e08:	3f 90       	pop	r3
    1e0a:	2f 90       	pop	r2
    1e0c:	08 95       	ret

00001e0e <readPacket>:
    1e0e:	4f 92       	push	r4
    1e10:	5f 92       	push	r5
    1e12:	6f 92       	push	r6
    1e14:	7f 92       	push	r7
    1e16:	8f 92       	push	r8
    1e18:	9f 92       	push	r9
    1e1a:	af 92       	push	r10
    1e1c:	bf 92       	push	r11
    1e1e:	cf 92       	push	r12
    1e20:	df 92       	push	r13
    1e22:	ef 92       	push	r14
    1e24:	ff 92       	push	r15
    1e26:	0f 93       	push	r16
    1e28:	1f 93       	push	r17
    1e2a:	cf 93       	push	r28
    1e2c:	df 93       	push	r29
    1e2e:	00 d0       	rcall	.+0      	; 0x1e30 <readPacket+0x22>
    1e30:	1f 92       	push	r1
    1e32:	cd b7       	in	r28, 0x3d	; 61
    1e34:	de b7       	in	r29, 0x3e	; 62
    1e36:	6c 01       	movw	r12, r24
    1e38:	5b 01       	movw	r10, r22
    1e3a:	19 82       	std	Y+1, r1	; 0x01
    1e3c:	1a 82       	std	Y+2, r1	; 0x02
    1e3e:	1b 82       	std	Y+3, r1	; 0x03
    1e40:	1c 82       	std	Y+4, r1	; 0x04
    1e42:	dc 01       	movw	r26, r24
    1e44:	9f 96       	adiw	r26, 0x2f	; 47
    1e46:	ed 91       	ld	r30, X+
    1e48:	fc 91       	ld	r31, X
    1e4a:	d0 97       	sbiw	r26, 0x30	; 48
    1e4c:	84 80       	ldd	r8, Z+4	; 0x04
    1e4e:	95 80       	ldd	r9, Z+5	; 0x05
    1e50:	cb 01       	movw	r24, r22
    1e52:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <left_ms>
    1e56:	7b 01       	movw	r14, r22
    1e58:	8c 01       	movw	r16, r24
    1e5a:	f6 01       	movw	r30, r12
    1e5c:	66 85       	ldd	r22, Z+14	; 0x0e
    1e5e:	77 85       	ldd	r23, Z+15	; 0x0f
    1e60:	21 e0       	ldi	r18, 0x01	; 1
    1e62:	30 e0       	ldi	r19, 0x00	; 0
    1e64:	40 e0       	ldi	r20, 0x00	; 0
    1e66:	50 e0       	ldi	r21, 0x00	; 0
    1e68:	87 a5       	ldd	r24, Z+47	; 0x2f
    1e6a:	90 a9       	ldd	r25, Z+48	; 0x30
    1e6c:	f4 01       	movw	r30, r8
    1e6e:	19 95       	eicall
    1e70:	61 30       	cpi	r22, 0x01	; 1
    1e72:	71 05       	cpc	r23, r1
    1e74:	81 05       	cpc	r24, r1
    1e76:	91 05       	cpc	r25, r1
    1e78:	09 f0       	breq	.+2      	; 0x1e7c <readPacket+0x6e>
    1e7a:	55 c0       	rjmp	.+170    	; 0x1f26 <readPacket+0x118>
    1e7c:	c5 01       	movw	r24, r10
    1e7e:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <left_ms>
    1e82:	9b 01       	movw	r18, r22
    1e84:	ac 01       	movw	r20, r24
    1e86:	be 01       	movw	r22, r28
    1e88:	6f 5f       	subi	r22, 0xFF	; 255
    1e8a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e8c:	c6 01       	movw	r24, r12
    1e8e:	1e df       	rcall	.-452    	; 0x1ccc <decodePacket>
    1e90:	d6 01       	movw	r26, r12
    1e92:	1e 96       	adiw	r26, 0x0e	; 14
    1e94:	8d 91       	ld	r24, X+
    1e96:	9c 91       	ld	r25, X
    1e98:	1f 97       	sbiw	r26, 0x0f	; 15
    1e9a:	49 81       	ldd	r20, Y+1	; 0x01
    1e9c:	5a 81       	ldd	r21, Y+2	; 0x02
    1e9e:	6b 81       	ldd	r22, Y+3	; 0x03
    1ea0:	7c 81       	ldd	r23, Y+4	; 0x04
    1ea2:	01 96       	adiw	r24, 0x01	; 1
    1ea4:	0e 94 5b 18 	call	0x30b6	; 0x30b6 <MQTTPacket_encode>
    1ea8:	2b 01       	movw	r4, r22
    1eaa:	3c 01       	movw	r6, r24
    1eac:	bf ef       	ldi	r27, 0xFF	; 255
    1eae:	4b 1a       	sub	r4, r27
    1eb0:	5b 0a       	sbc	r5, r27
    1eb2:	6b 0a       	sbc	r6, r27
    1eb4:	7b 0a       	sbc	r7, r27
    1eb6:	49 81       	ldd	r20, Y+1	; 0x01
    1eb8:	5a 81       	ldd	r21, Y+2	; 0x02
    1eba:	6b 81       	ldd	r22, Y+3	; 0x03
    1ebc:	7c 81       	ldd	r23, Y+4	; 0x04
    1ebe:	14 16       	cp	r1, r20
    1ec0:	15 06       	cpc	r1, r21
    1ec2:	16 06       	cpc	r1, r22
    1ec4:	17 06       	cpc	r1, r23
    1ec6:	1c f5       	brge	.+70     	; 0x1f0e <readPacket+0x100>
    1ec8:	d6 01       	movw	r26, r12
    1eca:	9f 96       	adiw	r26, 0x2f	; 47
    1ecc:	ed 91       	ld	r30, X+
    1ece:	fc 91       	ld	r31, X
    1ed0:	d0 97       	sbiw	r26, 0x30	; 48
    1ed2:	84 80       	ldd	r8, Z+4	; 0x04
    1ed4:	95 80       	ldd	r9, Z+5	; 0x05
    1ed6:	c5 01       	movw	r24, r10
    1ed8:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <left_ms>
    1edc:	7b 01       	movw	r14, r22
    1ede:	8c 01       	movw	r16, r24
    1ee0:	f6 01       	movw	r30, r12
    1ee2:	86 85       	ldd	r24, Z+14	; 0x0e
    1ee4:	97 85       	ldd	r25, Z+15	; 0x0f
    1ee6:	29 81       	ldd	r18, Y+1	; 0x01
    1ee8:	3a 81       	ldd	r19, Y+2	; 0x02
    1eea:	4b 81       	ldd	r20, Y+3	; 0x03
    1eec:	5c 81       	ldd	r21, Y+4	; 0x04
    1eee:	bc 01       	movw	r22, r24
    1ef0:	64 0d       	add	r22, r4
    1ef2:	75 1d       	adc	r23, r5
    1ef4:	87 a5       	ldd	r24, Z+47	; 0x2f
    1ef6:	90 a9       	ldd	r25, Z+48	; 0x30
    1ef8:	f4 01       	movw	r30, r8
    1efa:	19 95       	eicall
    1efc:	09 81       	ldd	r16, Y+1	; 0x01
    1efe:	1a 81       	ldd	r17, Y+2	; 0x02
    1f00:	2b 81       	ldd	r18, Y+3	; 0x03
    1f02:	3c 81       	ldd	r19, Y+4	; 0x04
    1f04:	60 17       	cp	r22, r16
    1f06:	71 07       	cpc	r23, r17
    1f08:	82 07       	cpc	r24, r18
    1f0a:	93 07       	cpc	r25, r19
    1f0c:	81 f4       	brne	.+32     	; 0x1f2e <readPacket+0x120>
    1f0e:	d6 01       	movw	r26, r12
    1f10:	1e 96       	adiw	r26, 0x0e	; 14
    1f12:	ed 91       	ld	r30, X+
    1f14:	fc 91       	ld	r31, X
    1f16:	1f 97       	sbiw	r26, 0x0f	; 15
    1f18:	60 81       	ld	r22, Z
    1f1a:	62 95       	swap	r22
    1f1c:	6f 70       	andi	r22, 0x0F	; 15
    1f1e:	70 e0       	ldi	r23, 0x00	; 0
    1f20:	80 e0       	ldi	r24, 0x00	; 0
    1f22:	90 e0       	ldi	r25, 0x00	; 0
    1f24:	07 c0       	rjmp	.+14     	; 0x1f34 <readPacket+0x126>
    1f26:	6f ef       	ldi	r22, 0xFF	; 255
    1f28:	7f ef       	ldi	r23, 0xFF	; 255
    1f2a:	cb 01       	movw	r24, r22
    1f2c:	03 c0       	rjmp	.+6      	; 0x1f34 <readPacket+0x126>
    1f2e:	6f ef       	ldi	r22, 0xFF	; 255
    1f30:	7f ef       	ldi	r23, 0xFF	; 255
    1f32:	cb 01       	movw	r24, r22
    1f34:	0f 90       	pop	r0
    1f36:	0f 90       	pop	r0
    1f38:	0f 90       	pop	r0
    1f3a:	0f 90       	pop	r0
    1f3c:	df 91       	pop	r29
    1f3e:	cf 91       	pop	r28
    1f40:	1f 91       	pop	r17
    1f42:	0f 91       	pop	r16
    1f44:	ff 90       	pop	r15
    1f46:	ef 90       	pop	r14
    1f48:	df 90       	pop	r13
    1f4a:	cf 90       	pop	r12
    1f4c:	bf 90       	pop	r11
    1f4e:	af 90       	pop	r10
    1f50:	9f 90       	pop	r9
    1f52:	8f 90       	pop	r8
    1f54:	7f 90       	pop	r7
    1f56:	6f 90       	pop	r6
    1f58:	5f 90       	pop	r5
    1f5a:	4f 90       	pop	r4
    1f5c:	08 95       	ret

00001f5e <isTopicMatched>:
    1f5e:	cf 93       	push	r28
    1f60:	df 93       	push	r29
    1f62:	ec 01       	movw	r28, r24
    1f64:	db 01       	movw	r26, r22
    1f66:	16 96       	adiw	r26, 0x06	; 6
    1f68:	ed 91       	ld	r30, X+
    1f6a:	fc 91       	ld	r31, X
    1f6c:	17 97       	sbiw	r26, 0x07	; 7
    1f6e:	12 96       	adiw	r26, 0x02	; 2
    1f70:	4d 91       	ld	r20, X+
    1f72:	5d 91       	ld	r21, X+
    1f74:	6d 91       	ld	r22, X+
    1f76:	7c 91       	ld	r23, X
    1f78:	15 97       	sbiw	r26, 0x05	; 5
    1f7a:	4e 0f       	add	r20, r30
    1f7c:	5f 1f       	adc	r21, r31
    1f7e:	20 c0       	rjmp	.+64     	; 0x1fc0 <isTopicMatched+0x62>
    1f80:	80 81       	ld	r24, Z
    1f82:	8f 32       	cpi	r24, 0x2F	; 47
    1f84:	11 f4       	brne	.+4      	; 0x1f8a <isTopicMatched+0x2c>
    1f86:	9f 32       	cpi	r25, 0x2F	; 47
    1f88:	09 f5       	brne	.+66     	; 0x1fcc <isTopicMatched+0x6e>
    1f8a:	9b 32       	cpi	r25, 0x2B	; 43
    1f8c:	21 f0       	breq	.+8      	; 0x1f96 <isTopicMatched+0x38>
    1f8e:	93 32       	cpi	r25, 0x23	; 35
    1f90:	11 f0       	breq	.+4      	; 0x1f96 <isTopicMatched+0x38>
    1f92:	98 13       	cpse	r25, r24
    1f94:	1b c0       	rjmp	.+54     	; 0x1fcc <isTopicMatched+0x6e>
    1f96:	9b 32       	cpi	r25, 0x2B	; 43
    1f98:	69 f4       	brne	.+26     	; 0x1fb4 <isTopicMatched+0x56>
    1f9a:	df 01       	movw	r26, r30
    1f9c:	11 96       	adiw	r26, 0x01	; 1
    1f9e:	03 c0       	rjmp	.+6      	; 0x1fa6 <isTopicMatched+0x48>
    1fa0:	31 96       	adiw	r30, 0x01	; 1
    1fa2:	df 01       	movw	r26, r30
    1fa4:	11 96       	adiw	r26, 0x01	; 1
    1fa6:	a4 17       	cp	r26, r20
    1fa8:	b5 07       	cpc	r27, r21
    1faa:	40 f4       	brcc	.+16     	; 0x1fbc <isTopicMatched+0x5e>
    1fac:	9c 91       	ld	r25, X
    1fae:	9f 32       	cpi	r25, 0x2F	; 47
    1fb0:	b9 f7       	brne	.-18     	; 0x1fa0 <isTopicMatched+0x42>
    1fb2:	04 c0       	rjmp	.+8      	; 0x1fbc <isTopicMatched+0x5e>
    1fb4:	93 32       	cpi	r25, 0x23	; 35
    1fb6:	11 f4       	brne	.+4      	; 0x1fbc <isTopicMatched+0x5e>
    1fb8:	fa 01       	movw	r30, r20
    1fba:	31 97       	sbiw	r30, 0x01	; 1
    1fbc:	21 96       	adiw	r28, 0x01	; 1
    1fbe:	31 96       	adiw	r30, 0x01	; 1
    1fc0:	98 81       	ld	r25, Y
    1fc2:	99 23       	and	r25, r25
    1fc4:	19 f0       	breq	.+6      	; 0x1fcc <isTopicMatched+0x6e>
    1fc6:	e4 17       	cp	r30, r20
    1fc8:	f5 07       	cpc	r31, r21
    1fca:	d0 f2       	brcs	.-76     	; 0x1f80 <isTopicMatched+0x22>
    1fcc:	e4 17       	cp	r30, r20
    1fce:	f5 07       	cpc	r31, r21
    1fd0:	21 f4       	brne	.+8      	; 0x1fda <isTopicMatched+0x7c>
    1fd2:	99 23       	and	r25, r25
    1fd4:	21 f0       	breq	.+8      	; 0x1fde <isTopicMatched+0x80>
    1fd6:	80 e0       	ldi	r24, 0x00	; 0
    1fd8:	03 c0       	rjmp	.+6      	; 0x1fe0 <isTopicMatched+0x82>
    1fda:	80 e0       	ldi	r24, 0x00	; 0
    1fdc:	01 c0       	rjmp	.+2      	; 0x1fe0 <isTopicMatched+0x82>
    1fde:	81 e0       	ldi	r24, 0x01	; 1
    1fe0:	df 91       	pop	r29
    1fe2:	cf 91       	pop	r28
    1fe4:	08 95       	ret

00001fe6 <deliverMessage>:
    1fe6:	4f 92       	push	r4
    1fe8:	5f 92       	push	r5
    1fea:	6f 92       	push	r6
    1fec:	7f 92       	push	r7
    1fee:	8f 92       	push	r8
    1ff0:	9f 92       	push	r9
    1ff2:	af 92       	push	r10
    1ff4:	bf 92       	push	r11
    1ff6:	cf 92       	push	r12
    1ff8:	df 92       	push	r13
    1ffa:	ef 92       	push	r14
    1ffc:	ff 92       	push	r15
    1ffe:	0f 93       	push	r16
    2000:	1f 93       	push	r17
    2002:	cf 93       	push	r28
    2004:	df 93       	push	r29
    2006:	00 d0       	rcall	.+0      	; 0x2008 <__EEPROM_REGION_LENGTH__+0x8>
    2008:	1f 92       	push	r1
    200a:	cd b7       	in	r28, 0x3d	; 61
    200c:	de b7       	in	r29, 0x3e	; 62
    200e:	8c 01       	movw	r16, r24
    2010:	7b 01       	movw	r14, r22
    2012:	6a 01       	movw	r12, r20
    2014:	41 2c       	mov	r4, r1
    2016:	51 2c       	mov	r5, r1
    2018:	32 01       	movw	r6, r4
    201a:	88 24       	eor	r8, r8
    201c:	8a 94       	dec	r8
    201e:	98 2c       	mov	r9, r8
    2020:	54 01       	movw	r10, r8
    2022:	45 c0       	rjmp	.+138    	; 0x20ae <__EEPROM_REGION_LENGTH__+0xae>
    2024:	f2 01       	movw	r30, r4
    2026:	ee 0f       	add	r30, r30
    2028:	ff 1f       	adc	r31, r31
    202a:	ee 0f       	add	r30, r30
    202c:	ff 1f       	adc	r31, r31
    202e:	e0 0f       	add	r30, r16
    2030:	f1 1f       	adc	r31, r17
    2032:	61 8d       	ldd	r22, Z+25	; 0x19
    2034:	72 8d       	ldd	r23, Z+26	; 0x1a
    2036:	61 15       	cp	r22, r1
    2038:	71 05       	cpc	r23, r1
    203a:	a1 f1       	breq	.+104    	; 0x20a4 <__EEPROM_REGION_LENGTH__+0xa4>
    203c:	c7 01       	movw	r24, r14
    203e:	0e 94 a9 1a 	call	0x3552	; 0x3552 <MQTTPacket_equals>
    2042:	67 2b       	or	r22, r23
    2044:	68 2b       	or	r22, r24
    2046:	69 2b       	or	r22, r25
    2048:	69 f4       	brne	.+26     	; 0x2064 <__EEPROM_REGION_LENGTH__+0x64>
    204a:	f2 01       	movw	r30, r4
    204c:	ee 0f       	add	r30, r30
    204e:	ff 1f       	adc	r31, r31
    2050:	ee 0f       	add	r30, r30
    2052:	ff 1f       	adc	r31, r31
    2054:	e0 0f       	add	r30, r16
    2056:	f1 1f       	adc	r31, r17
    2058:	b7 01       	movw	r22, r14
    205a:	81 8d       	ldd	r24, Z+25	; 0x19
    205c:	92 8d       	ldd	r25, Z+26	; 0x1a
    205e:	7f df       	rcall	.-258    	; 0x1f5e <isTopicMatched>
    2060:	88 23       	and	r24, r24
    2062:	01 f1       	breq	.+64     	; 0x20a4 <__EEPROM_REGION_LENGTH__+0xa4>
    2064:	f2 01       	movw	r30, r4
    2066:	ee 0f       	add	r30, r30
    2068:	ff 1f       	adc	r31, r31
    206a:	ee 0f       	add	r30, r30
    206c:	ff 1f       	adc	r31, r31
    206e:	e0 0f       	add	r30, r16
    2070:	f1 1f       	adc	r31, r17
    2072:	83 8d       	ldd	r24, Z+27	; 0x1b
    2074:	94 8d       	ldd	r25, Z+28	; 0x1c
    2076:	89 2b       	or	r24, r25
    2078:	a9 f0       	breq	.+42     	; 0x20a4 <__EEPROM_REGION_LENGTH__+0xa4>
    207a:	a6 01       	movw	r20, r12
    207c:	b7 01       	movw	r22, r14
    207e:	ce 01       	movw	r24, r28
    2080:	01 96       	adiw	r24, 0x01	; 1
    2082:	41 dd       	rcall	.-1406   	; 0x1b06 <NewMessageData>
    2084:	f2 01       	movw	r30, r4
    2086:	ee 0f       	add	r30, r30
    2088:	ff 1f       	adc	r31, r31
    208a:	ee 0f       	add	r30, r30
    208c:	ff 1f       	adc	r31, r31
    208e:	e0 0f       	add	r30, r16
    2090:	f1 1f       	adc	r31, r17
    2092:	03 8c       	ldd	r0, Z+27	; 0x1b
    2094:	f4 8d       	ldd	r31, Z+28	; 0x1c
    2096:	e0 2d       	mov	r30, r0
    2098:	ce 01       	movw	r24, r28
    209a:	01 96       	adiw	r24, 0x01	; 1
    209c:	19 95       	eicall
    209e:	81 2c       	mov	r8, r1
    20a0:	91 2c       	mov	r9, r1
    20a2:	54 01       	movw	r10, r8
    20a4:	8f ef       	ldi	r24, 0xFF	; 255
    20a6:	48 1a       	sub	r4, r24
    20a8:	58 0a       	sbc	r5, r24
    20aa:	68 0a       	sbc	r6, r24
    20ac:	78 0a       	sbc	r7, r24
    20ae:	a5 e0       	ldi	r26, 0x05	; 5
    20b0:	4a 16       	cp	r4, r26
    20b2:	51 04       	cpc	r5, r1
    20b4:	61 04       	cpc	r6, r1
    20b6:	71 04       	cpc	r7, r1
    20b8:	0c f4       	brge	.+2      	; 0x20bc <__EEPROM_REGION_LENGTH__+0xbc>
    20ba:	b4 cf       	rjmp	.-152    	; 0x2024 <__EEPROM_REGION_LENGTH__+0x24>
    20bc:	bf ef       	ldi	r27, 0xFF	; 255
    20be:	8b 16       	cp	r8, r27
    20c0:	9b 06       	cpc	r9, r27
    20c2:	ab 06       	cpc	r10, r27
    20c4:	bb 06       	cpc	r11, r27
    20c6:	a9 f4       	brne	.+42     	; 0x20f2 <__EEPROM_REGION_LENGTH__+0xf2>
    20c8:	f8 01       	movw	r30, r16
    20ca:	85 a5       	ldd	r24, Z+45	; 0x2d
    20cc:	96 a5       	ldd	r25, Z+46	; 0x2e
    20ce:	89 2b       	or	r24, r25
    20d0:	81 f0       	breq	.+32     	; 0x20f2 <__EEPROM_REGION_LENGTH__+0xf2>
    20d2:	a6 01       	movw	r20, r12
    20d4:	b7 01       	movw	r22, r14
    20d6:	ce 01       	movw	r24, r28
    20d8:	01 96       	adiw	r24, 0x01	; 1
    20da:	15 dd       	rcall	.-1494   	; 0x1b06 <NewMessageData>
    20dc:	d8 01       	movw	r26, r16
    20de:	9d 96       	adiw	r26, 0x2d	; 45
    20e0:	ed 91       	ld	r30, X+
    20e2:	fc 91       	ld	r31, X
    20e4:	9e 97       	sbiw	r26, 0x2e	; 46
    20e6:	ce 01       	movw	r24, r28
    20e8:	01 96       	adiw	r24, 0x01	; 1
    20ea:	19 95       	eicall
    20ec:	81 2c       	mov	r8, r1
    20ee:	91 2c       	mov	r9, r1
    20f0:	54 01       	movw	r10, r8
    20f2:	c5 01       	movw	r24, r10
    20f4:	b4 01       	movw	r22, r8
    20f6:	0f 90       	pop	r0
    20f8:	0f 90       	pop	r0
    20fa:	0f 90       	pop	r0
    20fc:	0f 90       	pop	r0
    20fe:	df 91       	pop	r29
    2100:	cf 91       	pop	r28
    2102:	1f 91       	pop	r17
    2104:	0f 91       	pop	r16
    2106:	ff 90       	pop	r15
    2108:	ef 90       	pop	r14
    210a:	df 90       	pop	r13
    210c:	cf 90       	pop	r12
    210e:	bf 90       	pop	r11
    2110:	af 90       	pop	r10
    2112:	9f 90       	pop	r9
    2114:	8f 90       	pop	r8
    2116:	7f 90       	pop	r7
    2118:	6f 90       	pop	r6
    211a:	5f 90       	pop	r5
    211c:	4f 90       	pop	r4
    211e:	08 95       	ret

00002120 <keepalive>:
    2120:	0f 93       	push	r16
    2122:	1f 93       	push	r17
    2124:	cf 93       	push	r28
    2126:	df 93       	push	r29
    2128:	cd b7       	in	r28, 0x3d	; 61
    212a:	de b7       	in	r29, 0x3e	; 62
    212c:	28 97       	sbiw	r28, 0x08	; 8
    212e:	0f b6       	in	r0, 0x3f	; 63
    2130:	f8 94       	cli
    2132:	de bf       	out	0x3e, r29	; 62
    2134:	0f be       	out	0x3f, r0	; 63
    2136:	cd bf       	out	0x3d, r28	; 61
    2138:	fc 01       	movw	r30, r24
    213a:	40 89       	ldd	r20, Z+16	; 0x10
    213c:	51 89       	ldd	r21, Z+17	; 0x11
    213e:	62 89       	ldd	r22, Z+18	; 0x12
    2140:	73 89       	ldd	r23, Z+19	; 0x13
    2142:	45 2b       	or	r20, r21
    2144:	46 2b       	or	r20, r22
    2146:	47 2b       	or	r20, r23
    2148:	b9 f1       	breq	.+110    	; 0x21b8 <keepalive+0x98>
    214a:	8c 01       	movw	r16, r24
    214c:	c1 96       	adiw	r24, 0x31	; 49
    214e:	0e 94 1d 1e 	call	0x3c3a	; 0x3c3a <expired>
    2152:	88 23       	and	r24, r24
    2154:	a9 f1       	breq	.+106    	; 0x21c0 <keepalive+0xa0>
    2156:	f8 01       	movw	r30, r16
    2158:	84 89       	ldd	r24, Z+20	; 0x14
    215a:	81 11       	cpse	r24, r1
    215c:	35 c0       	rjmp	.+106    	; 0x21c8 <keepalive+0xa8>
    215e:	ce 01       	movw	r24, r28
    2160:	01 96       	adiw	r24, 0x01	; 1
    2162:	0e 94 a4 1e 	call	0x3d48	; 0x3d48 <InitTimer>
    2166:	48 ee       	ldi	r20, 0xE8	; 232
    2168:	53 e0       	ldi	r21, 0x03	; 3
    216a:	60 e0       	ldi	r22, 0x00	; 0
    216c:	70 e0       	ldi	r23, 0x00	; 0
    216e:	ce 01       	movw	r24, r28
    2170:	01 96       	adiw	r24, 0x01	; 1
    2172:	0e 94 3e 1e 	call	0x3c7c	; 0x3c7c <countdown_ms>
    2176:	f8 01       	movw	r30, r16
    2178:	40 85       	ldd	r20, Z+8	; 0x08
    217a:	51 85       	ldd	r21, Z+9	; 0x09
    217c:	60 e0       	ldi	r22, 0x00	; 0
    217e:	70 e0       	ldi	r23, 0x00	; 0
    2180:	84 85       	ldd	r24, Z+12	; 0x0c
    2182:	95 85       	ldd	r25, Z+13	; 0x0d
    2184:	8c d6       	rcall	.+3352   	; 0x2e9e <MQTTSerialize_pingreq>
    2186:	16 16       	cp	r1, r22
    2188:	17 06       	cpc	r1, r23
    218a:	18 06       	cpc	r1, r24
    218c:	19 06       	cpc	r1, r25
    218e:	84 f4       	brge	.+32     	; 0x21b0 <keepalive+0x90>
    2190:	9e 01       	movw	r18, r28
    2192:	2f 5f       	subi	r18, 0xFF	; 255
    2194:	3f 4f       	sbci	r19, 0xFF	; 255
    2196:	ab 01       	movw	r20, r22
    2198:	bc 01       	movw	r22, r24
    219a:	c8 01       	movw	r24, r16
    219c:	d5 dc       	rcall	.-1622   	; 0x1b48 <sendPacket>
    219e:	61 15       	cp	r22, r1
    21a0:	71 05       	cpc	r23, r1
    21a2:	81 05       	cpc	r24, r1
    21a4:	91 05       	cpc	r25, r1
    21a6:	99 f4       	brne	.+38     	; 0x21ce <keepalive+0xae>
    21a8:	21 e0       	ldi	r18, 0x01	; 1
    21aa:	f8 01       	movw	r30, r16
    21ac:	24 8b       	std	Z+20, r18	; 0x14
    21ae:	0f c0       	rjmp	.+30     	; 0x21ce <keepalive+0xae>
    21b0:	6f ef       	ldi	r22, 0xFF	; 255
    21b2:	7f ef       	ldi	r23, 0xFF	; 255
    21b4:	cb 01       	movw	r24, r22
    21b6:	0b c0       	rjmp	.+22     	; 0x21ce <keepalive+0xae>
    21b8:	60 e0       	ldi	r22, 0x00	; 0
    21ba:	70 e0       	ldi	r23, 0x00	; 0
    21bc:	cb 01       	movw	r24, r22
    21be:	07 c0       	rjmp	.+14     	; 0x21ce <keepalive+0xae>
    21c0:	6f ef       	ldi	r22, 0xFF	; 255
    21c2:	7f ef       	ldi	r23, 0xFF	; 255
    21c4:	cb 01       	movw	r24, r22
    21c6:	03 c0       	rjmp	.+6      	; 0x21ce <keepalive+0xae>
    21c8:	6f ef       	ldi	r22, 0xFF	; 255
    21ca:	7f ef       	ldi	r23, 0xFF	; 255
    21cc:	cb 01       	movw	r24, r22
    21ce:	28 96       	adiw	r28, 0x08	; 8
    21d0:	0f b6       	in	r0, 0x3f	; 63
    21d2:	f8 94       	cli
    21d4:	de bf       	out	0x3e, r29	; 62
    21d6:	0f be       	out	0x3f, r0	; 63
    21d8:	cd bf       	out	0x3d, r28	; 61
    21da:	df 91       	pop	r29
    21dc:	cf 91       	pop	r28
    21de:	1f 91       	pop	r17
    21e0:	0f 91       	pop	r16
    21e2:	08 95       	ret

000021e4 <cycle>:
    21e4:	2f 92       	push	r2
    21e6:	3f 92       	push	r3
    21e8:	4f 92       	push	r4
    21ea:	5f 92       	push	r5
    21ec:	6f 92       	push	r6
    21ee:	7f 92       	push	r7
    21f0:	8f 92       	push	r8
    21f2:	9f 92       	push	r9
    21f4:	af 92       	push	r10
    21f6:	bf 92       	push	r11
    21f8:	cf 92       	push	r12
    21fa:	df 92       	push	r13
    21fc:	ef 92       	push	r14
    21fe:	ff 92       	push	r15
    2200:	0f 93       	push	r16
    2202:	1f 93       	push	r17
    2204:	cf 93       	push	r28
    2206:	df 93       	push	r29
    2208:	cd b7       	in	r28, 0x3d	; 61
    220a:	de b7       	in	r29, 0x3e	; 62
    220c:	62 97       	sbiw	r28, 0x12	; 18
    220e:	0f b6       	in	r0, 0x3f	; 63
    2210:	f8 94       	cli
    2212:	de bf       	out	0x3e, r29	; 62
    2214:	0f be       	out	0x3f, r0	; 63
    2216:	cd bf       	out	0x3d, r28	; 61
    2218:	4c 01       	movw	r8, r24
    221a:	1b 01       	movw	r2, r22
    221c:	f8 dd       	rcall	.-1040   	; 0x1e0e <readPacket>
    221e:	2b 01       	movw	r4, r22
    2220:	3c 01       	movw	r6, r24
    2222:	65 30       	cpi	r22, 0x05	; 5
    2224:	71 05       	cpc	r23, r1
    2226:	09 f4       	brne	.+2      	; 0x222a <cycle+0x46>
    2228:	7f c0       	rjmp	.+254    	; 0x2328 <cycle+0x144>
    222a:	6d 30       	cpi	r22, 0x0D	; 13
    222c:	71 05       	cpc	r23, r1
    222e:	09 f4       	brne	.+2      	; 0x2232 <cycle+0x4e>
    2230:	c3 c0       	rjmp	.+390    	; 0x23b8 <cycle+0x1d4>
    2232:	63 30       	cpi	r22, 0x03	; 3
    2234:	71 05       	cpc	r23, r1
    2236:	09 f0       	breq	.+2      	; 0x223a <cycle+0x56>
    2238:	c5 c0       	rjmp	.+394    	; 0x23c4 <cycle+0x1e0>
    223a:	f4 01       	movw	r30, r8
    223c:	82 85       	ldd	r24, Z+10	; 0x0a
    223e:	93 85       	ldd	r25, Z+11	; 0x0b
    2240:	a6 84       	ldd	r10, Z+14	; 0x0e
    2242:	b7 84       	ldd	r11, Z+15	; 0x0f
    2244:	1f 92       	push	r1
    2246:	1f 92       	push	r1
    2248:	9f 93       	push	r25
    224a:	8f 93       	push	r24
    224c:	ce 01       	movw	r24, r28
    224e:	08 96       	adiw	r24, 0x08	; 8
    2250:	6c 01       	movw	r12, r24
    2252:	fe 01       	movw	r30, r28
    2254:	36 96       	adiw	r30, 0x06	; 6
    2256:	7f 01       	movw	r14, r30
    2258:	8e 01       	movw	r16, r28
    225a:	06 5f       	subi	r16, 0xF6	; 246
    225c:	1f 4f       	sbci	r17, 0xFF	; 255
    225e:	9e 01       	movw	r18, r28
    2260:	2c 5f       	subi	r18, 0xFC	; 252
    2262:	3f 4f       	sbci	r19, 0xFF	; 255
    2264:	ae 01       	movw	r20, r28
    2266:	4e 5f       	subi	r20, 0xFE	; 254
    2268:	5f 4f       	sbci	r21, 0xFF	; 255
    226a:	be 01       	movw	r22, r28
    226c:	6f 5f       	subi	r22, 0xFF	; 255
    226e:	7f 4f       	sbci	r23, 0xFF	; 255
    2270:	05 97       	sbiw	r24, 0x05	; 5
    2272:	18 d6       	rcall	.+3120   	; 0x2ea4 <MQTTDeserialize_publish>
    2274:	0f 90       	pop	r0
    2276:	0f 90       	pop	r0
    2278:	0f 90       	pop	r0
    227a:	0f 90       	pop	r0
    227c:	61 30       	cpi	r22, 0x01	; 1
    227e:	71 05       	cpc	r23, r1
    2280:	81 05       	cpc	r24, r1
    2282:	91 05       	cpc	r25, r1
    2284:	09 f0       	breq	.+2      	; 0x2288 <cycle+0xa4>
    2286:	48 c0       	rjmp	.+144    	; 0x2318 <cycle+0x134>
    2288:	ae 01       	movw	r20, r28
    228a:	4f 5f       	subi	r20, 0xFF	; 255
    228c:	5f 4f       	sbci	r21, 0xFF	; 255
    228e:	b8 01       	movw	r22, r16
    2290:	c4 01       	movw	r24, r8
    2292:	a9 de       	rcall	.-686    	; 0x1fe6 <deliverMessage>
    2294:	89 81       	ldd	r24, Y+1	; 0x01
    2296:	88 23       	and	r24, r24
    2298:	09 f4       	brne	.+2      	; 0x229c <cycle+0xb8>
    229a:	42 c0       	rjmp	.+132    	; 0x2320 <cycle+0x13c>
    229c:	81 30       	cpi	r24, 0x01	; 1
    229e:	81 f4       	brne	.+32     	; 0x22c0 <cycle+0xdc>
    22a0:	ec 80       	ldd	r14, Y+4	; 0x04
    22a2:	fd 80       	ldd	r15, Y+5	; 0x05
    22a4:	f4 01       	movw	r30, r8
    22a6:	40 85       	ldd	r20, Z+8	; 0x08
    22a8:	51 85       	ldd	r21, Z+9	; 0x09
    22aa:	60 e0       	ldi	r22, 0x00	; 0
    22ac:	70 e0       	ldi	r23, 0x00	; 0
    22ae:	00 e0       	ldi	r16, 0x00	; 0
    22b0:	24 e0       	ldi	r18, 0x04	; 4
    22b2:	84 85       	ldd	r24, Z+12	; 0x0c
    22b4:	95 85       	ldd	r25, Z+13	; 0x0d
    22b6:	0e 94 bd 1b 	call	0x377a	; 0x377a <MQTTSerialize_ack>
    22ba:	ab 01       	movw	r20, r22
    22bc:	bc 01       	movw	r22, r24
    22be:	15 c0       	rjmp	.+42     	; 0x22ea <cycle+0x106>
    22c0:	82 30       	cpi	r24, 0x02	; 2
    22c2:	81 f4       	brne	.+32     	; 0x22e4 <cycle+0x100>
    22c4:	ec 80       	ldd	r14, Y+4	; 0x04
    22c6:	fd 80       	ldd	r15, Y+5	; 0x05
    22c8:	f4 01       	movw	r30, r8
    22ca:	40 85       	ldd	r20, Z+8	; 0x08
    22cc:	51 85       	ldd	r21, Z+9	; 0x09
    22ce:	60 e0       	ldi	r22, 0x00	; 0
    22d0:	70 e0       	ldi	r23, 0x00	; 0
    22d2:	00 e0       	ldi	r16, 0x00	; 0
    22d4:	25 e0       	ldi	r18, 0x05	; 5
    22d6:	84 85       	ldd	r24, Z+12	; 0x0c
    22d8:	95 85       	ldd	r25, Z+13	; 0x0d
    22da:	0e 94 bd 1b 	call	0x377a	; 0x377a <MQTTSerialize_ack>
    22de:	ab 01       	movw	r20, r22
    22e0:	bc 01       	movw	r22, r24
    22e2:	03 c0       	rjmp	.+6      	; 0x22ea <cycle+0x106>
    22e4:	40 e0       	ldi	r20, 0x00	; 0
    22e6:	50 e0       	ldi	r21, 0x00	; 0
    22e8:	ba 01       	movw	r22, r20
    22ea:	14 16       	cp	r1, r20
    22ec:	15 06       	cpc	r1, r21
    22ee:	16 06       	cpc	r1, r22
    22f0:	17 06       	cpc	r1, r23
    22f2:	34 f4       	brge	.+12     	; 0x2300 <cycle+0x11c>
    22f4:	91 01       	movw	r18, r2
    22f6:	c4 01       	movw	r24, r8
    22f8:	27 dc       	rcall	.-1970   	; 0x1b48 <sendPacket>
    22fa:	6b 01       	movw	r12, r22
    22fc:	7c 01       	movw	r14, r24
    22fe:	04 c0       	rjmp	.+8      	; 0x2308 <cycle+0x124>
    2300:	cc 24       	eor	r12, r12
    2302:	ca 94       	dec	r12
    2304:	dc 2c       	mov	r13, r12
    2306:	76 01       	movw	r14, r12
    2308:	ff ef       	ldi	r31, 0xFF	; 255
    230a:	cf 16       	cp	r12, r31
    230c:	df 06       	cpc	r13, r31
    230e:	ef 06       	cpc	r14, r31
    2310:	ff 06       	cpc	r15, r31
    2312:	09 f0       	breq	.+2      	; 0x2316 <cycle+0x132>
    2314:	5a c0       	rjmp	.+180    	; 0x23ca <cycle+0x1e6>
    2316:	5b c0       	rjmp	.+182    	; 0x23ce <cycle+0x1ea>
    2318:	c1 2c       	mov	r12, r1
    231a:	d1 2c       	mov	r13, r1
    231c:	76 01       	movw	r14, r12
    231e:	57 c0       	rjmp	.+174    	; 0x23ce <cycle+0x1ea>
    2320:	c1 2c       	mov	r12, r1
    2322:	d1 2c       	mov	r13, r1
    2324:	76 01       	movw	r14, r12
    2326:	51 c0       	rjmp	.+162    	; 0x23ca <cycle+0x1e6>
    2328:	f4 01       	movw	r30, r8
    232a:	e2 84       	ldd	r14, Z+10	; 0x0a
    232c:	f3 84       	ldd	r15, Z+11	; 0x0b
    232e:	00 e0       	ldi	r16, 0x00	; 0
    2330:	10 e0       	ldi	r17, 0x00	; 0
    2332:	26 85       	ldd	r18, Z+14	; 0x0e
    2334:	37 85       	ldd	r19, Z+15	; 0x0f
    2336:	ae 01       	movw	r20, r28
    2338:	4f 5f       	subi	r20, 0xFF	; 255
    233a:	5f 4f       	sbci	r21, 0xFF	; 255
    233c:	be 01       	movw	r22, r28
    233e:	6e 5e       	subi	r22, 0xEE	; 238
    2340:	7f 4f       	sbci	r23, 0xFF	; 255
    2342:	ce 01       	movw	r24, r28
    2344:	0a 96       	adiw	r24, 0x0a	; 10
    2346:	4b d6       	rcall	.+3222   	; 0x2fde <MQTTDeserialize_ack>
    2348:	61 30       	cpi	r22, 0x01	; 1
    234a:	71 05       	cpc	r23, r1
    234c:	81 05       	cpc	r24, r1
    234e:	91 05       	cpc	r25, r1
    2350:	f1 f4       	brne	.+60     	; 0x238e <cycle+0x1aa>
    2352:	e9 80       	ldd	r14, Y+1	; 0x01
    2354:	fa 80       	ldd	r15, Y+2	; 0x02
    2356:	f4 01       	movw	r30, r8
    2358:	40 85       	ldd	r20, Z+8	; 0x08
    235a:	51 85       	ldd	r21, Z+9	; 0x09
    235c:	60 e0       	ldi	r22, 0x00	; 0
    235e:	70 e0       	ldi	r23, 0x00	; 0
    2360:	00 e0       	ldi	r16, 0x00	; 0
    2362:	26 e0       	ldi	r18, 0x06	; 6
    2364:	84 85       	ldd	r24, Z+12	; 0x0c
    2366:	95 85       	ldd	r25, Z+13	; 0x0d
    2368:	0e 94 bd 1b 	call	0x377a	; 0x377a <MQTTSerialize_ack>
    236c:	16 16       	cp	r1, r22
    236e:	17 06       	cpc	r1, r23
    2370:	18 06       	cpc	r1, r24
    2372:	19 06       	cpc	r1, r25
    2374:	8c f4       	brge	.+34     	; 0x2398 <cycle+0x1b4>
    2376:	91 01       	movw	r18, r2
    2378:	ab 01       	movw	r20, r22
    237a:	bc 01       	movw	r22, r24
    237c:	c4 01       	movw	r24, r8
    237e:	e4 db       	rcall	.-2104   	; 0x1b48 <sendPacket>
    2380:	6b 01       	movw	r12, r22
    2382:	7c 01       	movw	r14, r24
    2384:	67 2b       	or	r22, r23
    2386:	68 2b       	or	r22, r24
    2388:	69 2b       	or	r22, r25
    238a:	59 f4       	brne	.+22     	; 0x23a2 <cycle+0x1be>
    238c:	0e c0       	rjmp	.+28     	; 0x23aa <cycle+0x1c6>
    238e:	cc 24       	eor	r12, r12
    2390:	ca 94       	dec	r12
    2392:	dc 2c       	mov	r13, r12
    2394:	76 01       	movw	r14, r12
    2396:	09 c0       	rjmp	.+18     	; 0x23aa <cycle+0x1c6>
    2398:	cc 24       	eor	r12, r12
    239a:	ca 94       	dec	r12
    239c:	dc 2c       	mov	r13, r12
    239e:	76 01       	movw	r14, r12
    23a0:	04 c0       	rjmp	.+8      	; 0x23aa <cycle+0x1c6>
    23a2:	cc 24       	eor	r12, r12
    23a4:	ca 94       	dec	r12
    23a6:	dc 2c       	mov	r13, r12
    23a8:	76 01       	movw	r14, r12
    23aa:	ff ef       	ldi	r31, 0xFF	; 255
    23ac:	cf 16       	cp	r12, r31
    23ae:	df 06       	cpc	r13, r31
    23b0:	ef 06       	cpc	r14, r31
    23b2:	ff 06       	cpc	r15, r31
    23b4:	51 f4       	brne	.+20     	; 0x23ca <cycle+0x1e6>
    23b6:	0b c0       	rjmp	.+22     	; 0x23ce <cycle+0x1ea>
    23b8:	f4 01       	movw	r30, r8
    23ba:	14 8a       	std	Z+20, r1	; 0x14
    23bc:	c1 2c       	mov	r12, r1
    23be:	d1 2c       	mov	r13, r1
    23c0:	76 01       	movw	r14, r12
    23c2:	03 c0       	rjmp	.+6      	; 0x23ca <cycle+0x1e6>
    23c4:	c1 2c       	mov	r12, r1
    23c6:	d1 2c       	mov	r13, r1
    23c8:	76 01       	movw	r14, r12
    23ca:	c4 01       	movw	r24, r8
    23cc:	a9 de       	rcall	.-686    	; 0x2120 <keepalive>
    23ce:	c1 14       	cp	r12, r1
    23d0:	d1 04       	cpc	r13, r1
    23d2:	e1 04       	cpc	r14, r1
    23d4:	f1 04       	cpc	r15, r1
    23d6:	21 f4       	brne	.+8      	; 0x23e0 <cycle+0x1fc>
    23d8:	73 01       	movw	r14, r6
    23da:	62 01       	movw	r12, r4
    23dc:	ee 24       	eor	r14, r14
    23de:	ff 24       	eor	r15, r15
    23e0:	c7 01       	movw	r24, r14
    23e2:	b6 01       	movw	r22, r12
    23e4:	62 96       	adiw	r28, 0x12	; 18
    23e6:	0f b6       	in	r0, 0x3f	; 63
    23e8:	f8 94       	cli
    23ea:	de bf       	out	0x3e, r29	; 62
    23ec:	0f be       	out	0x3f, r0	; 63
    23ee:	cd bf       	out	0x3d, r28	; 61
    23f0:	df 91       	pop	r29
    23f2:	cf 91       	pop	r28
    23f4:	1f 91       	pop	r17
    23f6:	0f 91       	pop	r16
    23f8:	ff 90       	pop	r15
    23fa:	ef 90       	pop	r14
    23fc:	df 90       	pop	r13
    23fe:	cf 90       	pop	r12
    2400:	bf 90       	pop	r11
    2402:	af 90       	pop	r10
    2404:	9f 90       	pop	r9
    2406:	8f 90       	pop	r8
    2408:	7f 90       	pop	r7
    240a:	6f 90       	pop	r6
    240c:	5f 90       	pop	r5
    240e:	4f 90       	pop	r4
    2410:	3f 90       	pop	r3
    2412:	2f 90       	pop	r2
    2414:	08 95       	ret

00002416 <MQTTYield>:
    2416:	cf 92       	push	r12
    2418:	df 92       	push	r13
    241a:	ef 92       	push	r14
    241c:	ff 92       	push	r15
    241e:	0f 93       	push	r16
    2420:	1f 93       	push	r17
    2422:	cf 93       	push	r28
    2424:	df 93       	push	r29
    2426:	cd b7       	in	r28, 0x3d	; 61
    2428:	de b7       	in	r29, 0x3e	; 62
    242a:	28 97       	sbiw	r28, 0x08	; 8
    242c:	0f b6       	in	r0, 0x3f	; 63
    242e:	f8 94       	cli
    2430:	de bf       	out	0x3e, r29	; 62
    2432:	0f be       	out	0x3f, r0	; 63
    2434:	cd bf       	out	0x3d, r28	; 61
    2436:	8c 01       	movw	r16, r24
    2438:	6a 01       	movw	r12, r20
    243a:	7b 01       	movw	r14, r22
    243c:	ce 01       	movw	r24, r28
    243e:	01 96       	adiw	r24, 0x01	; 1
    2440:	0e 94 a4 1e 	call	0x3d48	; 0x3d48 <InitTimer>
    2444:	b7 01       	movw	r22, r14
    2446:	a6 01       	movw	r20, r12
    2448:	ce 01       	movw	r24, r28
    244a:	01 96       	adiw	r24, 0x01	; 1
    244c:	0e 94 3e 1e 	call	0x3c7c	; 0x3c7c <countdown_ms>
    2450:	0a c0       	rjmp	.+20     	; 0x2466 <MQTTYield+0x50>
    2452:	be 01       	movw	r22, r28
    2454:	6f 5f       	subi	r22, 0xFF	; 255
    2456:	7f 4f       	sbci	r23, 0xFF	; 255
    2458:	c8 01       	movw	r24, r16
    245a:	c4 de       	rcall	.-632    	; 0x21e4 <cycle>
    245c:	6f 3f       	cpi	r22, 0xFF	; 255
    245e:	7f 4f       	sbci	r23, 0xFF	; 255
    2460:	8f 4f       	sbci	r24, 0xFF	; 255
    2462:	9f 4f       	sbci	r25, 0xFF	; 255
    2464:	51 f0       	breq	.+20     	; 0x247a <MQTTYield+0x64>
    2466:	ce 01       	movw	r24, r28
    2468:	01 96       	adiw	r24, 0x01	; 1
    246a:	0e 94 1d 1e 	call	0x3c3a	; 0x3c3a <expired>
    246e:	88 23       	and	r24, r24
    2470:	81 f3       	breq	.-32     	; 0x2452 <MQTTYield+0x3c>
    2472:	60 e0       	ldi	r22, 0x00	; 0
    2474:	70 e0       	ldi	r23, 0x00	; 0
    2476:	cb 01       	movw	r24, r22
    2478:	03 c0       	rjmp	.+6      	; 0x2480 <MQTTYield+0x6a>
    247a:	6f ef       	ldi	r22, 0xFF	; 255
    247c:	7f ef       	ldi	r23, 0xFF	; 255
    247e:	cb 01       	movw	r24, r22
    2480:	28 96       	adiw	r28, 0x08	; 8
    2482:	0f b6       	in	r0, 0x3f	; 63
    2484:	f8 94       	cli
    2486:	de bf       	out	0x3e, r29	; 62
    2488:	0f be       	out	0x3f, r0	; 63
    248a:	cd bf       	out	0x3d, r28	; 61
    248c:	df 91       	pop	r29
    248e:	cf 91       	pop	r28
    2490:	1f 91       	pop	r17
    2492:	0f 91       	pop	r16
    2494:	ff 90       	pop	r15
    2496:	ef 90       	pop	r14
    2498:	df 90       	pop	r13
    249a:	cf 90       	pop	r12
    249c:	08 95       	ret

0000249e <waitfor>:
    249e:	8f 92       	push	r8
    24a0:	9f 92       	push	r9
    24a2:	af 92       	push	r10
    24a4:	bf 92       	push	r11
    24a6:	cf 92       	push	r12
    24a8:	df 92       	push	r13
    24aa:	ef 92       	push	r14
    24ac:	ff 92       	push	r15
    24ae:	0f 93       	push	r16
    24b0:	1f 93       	push	r17
    24b2:	cf 93       	push	r28
    24b4:	df 93       	push	r29
    24b6:	8c 01       	movw	r16, r24
    24b8:	4a 01       	movw	r8, r20
    24ba:	5b 01       	movw	r10, r22
    24bc:	e9 01       	movw	r28, r18
    24be:	cc 24       	eor	r12, r12
    24c0:	ca 94       	dec	r12
    24c2:	dc 2c       	mov	r13, r12
    24c4:	76 01       	movw	r14, r12
    24c6:	ce 01       	movw	r24, r28
    24c8:	0e 94 1d 1e 	call	0x3c3a	; 0x3c3a <expired>
    24cc:	81 11       	cpse	r24, r1
    24ce:	0a c0       	rjmp	.+20     	; 0x24e4 <waitfor+0x46>
    24d0:	be 01       	movw	r22, r28
    24d2:	c8 01       	movw	r24, r16
    24d4:	87 de       	rcall	.-754    	; 0x21e4 <cycle>
    24d6:	6b 01       	movw	r12, r22
    24d8:	7c 01       	movw	r14, r24
    24da:	68 15       	cp	r22, r8
    24dc:	79 05       	cpc	r23, r9
    24de:	8a 05       	cpc	r24, r10
    24e0:	9b 05       	cpc	r25, r11
    24e2:	89 f7       	brne	.-30     	; 0x24c6 <waitfor+0x28>
    24e4:	c7 01       	movw	r24, r14
    24e6:	b6 01       	movw	r22, r12
    24e8:	df 91       	pop	r29
    24ea:	cf 91       	pop	r28
    24ec:	1f 91       	pop	r17
    24ee:	0f 91       	pop	r16
    24f0:	ff 90       	pop	r15
    24f2:	ef 90       	pop	r14
    24f4:	df 90       	pop	r13
    24f6:	cf 90       	pop	r12
    24f8:	bf 90       	pop	r11
    24fa:	af 90       	pop	r10
    24fc:	9f 90       	pop	r9
    24fe:	8f 90       	pop	r8
    2500:	08 95       	ret

00002502 <MQTTConnect>:
    2502:	ef 92       	push	r14
    2504:	ff 92       	push	r15
    2506:	0f 93       	push	r16
    2508:	1f 93       	push	r17
    250a:	cf 93       	push	r28
    250c:	df 93       	push	r29
    250e:	cd b7       	in	r28, 0x3d	; 61
    2510:	de b7       	in	r29, 0x3e	; 62
    2512:	c5 54       	subi	r28, 0x45	; 69
    2514:	d1 09       	sbc	r29, r1
    2516:	0f b6       	in	r0, 0x3f	; 63
    2518:	f8 94       	cli
    251a:	de bf       	out	0x3e, r29	; 62
    251c:	0f be       	out	0x3f, r0	; 63
    251e:	cd bf       	out	0x3d, r28	; 61
    2520:	7c 01       	movw	r14, r24
    2522:	8b 01       	movw	r16, r22
    2524:	8b e3       	ldi	r24, 0x3B	; 59
    2526:	ec e4       	ldi	r30, 0x4C	; 76
    2528:	f2 e0       	ldi	r31, 0x02	; 2
    252a:	de 01       	movw	r26, r28
    252c:	19 96       	adiw	r26, 0x09	; 9
    252e:	01 90       	ld	r0, Z+
    2530:	0d 92       	st	X+, r0
    2532:	8a 95       	dec	r24
    2534:	e1 f7       	brne	.-8      	; 0x252e <MQTTConnect+0x2c>
    2536:	ce 01       	movw	r24, r28
    2538:	01 96       	adiw	r24, 0x01	; 1
    253a:	0e 94 a4 1e 	call	0x3d48	; 0x3d48 <InitTimer>
    253e:	f7 01       	movw	r30, r14
    2540:	44 81       	ldd	r20, Z+4	; 0x04
    2542:	55 81       	ldd	r21, Z+5	; 0x05
    2544:	66 81       	ldd	r22, Z+6	; 0x06
    2546:	77 81       	ldd	r23, Z+7	; 0x07
    2548:	ce 01       	movw	r24, r28
    254a:	01 96       	adiw	r24, 0x01	; 1
    254c:	0e 94 3e 1e 	call	0x3c7c	; 0x3c7c <countdown_ms>
    2550:	f7 01       	movw	r30, r14
    2552:	85 89       	ldd	r24, Z+21	; 0x15
    2554:	96 89       	ldd	r25, Z+22	; 0x16
    2556:	a7 89       	ldd	r26, Z+23	; 0x17
    2558:	b0 8d       	ldd	r27, Z+24	; 0x18
    255a:	89 2b       	or	r24, r25
    255c:	8a 2b       	or	r24, r26
    255e:	8b 2b       	or	r24, r27
    2560:	09 f0       	breq	.+2      	; 0x2564 <MQTTConnect+0x62>
    2562:	63 c0       	rjmp	.+198    	; 0x262a <MQTTConnect+0x128>
    2564:	01 15       	cp	r16, r1
    2566:	11 05       	cpc	r17, r1
    2568:	19 f4       	brne	.+6      	; 0x2570 <MQTTConnect+0x6e>
    256a:	8e 01       	movw	r16, r28
    256c:	07 5f       	subi	r16, 0xF7	; 247
    256e:	1f 4f       	sbci	r17, 0xFF	; 255
    2570:	f8 01       	movw	r30, r16
    2572:	47 85       	ldd	r20, Z+15	; 0x0f
    2574:	50 89       	ldd	r21, Z+16	; 0x10
    2576:	60 e0       	ldi	r22, 0x00	; 0
    2578:	70 e0       	ldi	r23, 0x00	; 0
    257a:	f7 01       	movw	r30, r14
    257c:	40 8b       	std	Z+16, r20	; 0x10
    257e:	51 8b       	std	Z+17, r21	; 0x11
    2580:	62 8b       	std	Z+18, r22	; 0x12
    2582:	73 8b       	std	Z+19, r23	; 0x13
    2584:	c7 01       	movw	r24, r14
    2586:	c1 96       	adiw	r24, 0x31	; 49
    2588:	0e 94 5b 1e 	call	0x3cb6	; 0x3cb6 <countdown>
    258c:	f7 01       	movw	r30, r14
    258e:	40 85       	ldd	r20, Z+8	; 0x08
    2590:	51 85       	ldd	r21, Z+9	; 0x09
    2592:	60 e0       	ldi	r22, 0x00	; 0
    2594:	70 e0       	ldi	r23, 0x00	; 0
    2596:	98 01       	movw	r18, r16
    2598:	84 85       	ldd	r24, Z+12	; 0x0c
    259a:	95 85       	ldd	r25, Z+13	; 0x0d
    259c:	19 d3       	rcall	.+1586   	; 0x2bd0 <MQTTSerialize_connect>
    259e:	ab 01       	movw	r20, r22
    25a0:	bc 01       	movw	r22, r24
    25a2:	14 16       	cp	r1, r20
    25a4:	15 06       	cpc	r1, r21
    25a6:	16 06       	cpc	r1, r22
    25a8:	17 06       	cpc	r1, r23
    25aa:	0c f0       	brlt	.+2      	; 0x25ae <MQTTConnect+0xac>
    25ac:	42 c0       	rjmp	.+132    	; 0x2632 <MQTTConnect+0x130>
    25ae:	9e 01       	movw	r18, r28
    25b0:	2f 5f       	subi	r18, 0xFF	; 255
    25b2:	3f 4f       	sbci	r19, 0xFF	; 255
    25b4:	c7 01       	movw	r24, r14
    25b6:	c8 da       	rcall	.-2672   	; 0x1b48 <sendPacket>
    25b8:	61 15       	cp	r22, r1
    25ba:	71 05       	cpc	r23, r1
    25bc:	81 05       	cpc	r24, r1
    25be:	91 05       	cpc	r25, r1
    25c0:	09 f0       	breq	.+2      	; 0x25c4 <MQTTConnect+0xc2>
    25c2:	3e c0       	rjmp	.+124    	; 0x2640 <MQTTConnect+0x13e>
    25c4:	9e 01       	movw	r18, r28
    25c6:	2f 5f       	subi	r18, 0xFF	; 255
    25c8:	3f 4f       	sbci	r19, 0xFF	; 255
    25ca:	42 e0       	ldi	r20, 0x02	; 2
    25cc:	50 e0       	ldi	r21, 0x00	; 0
    25ce:	60 e0       	ldi	r22, 0x00	; 0
    25d0:	70 e0       	ldi	r23, 0x00	; 0
    25d2:	c7 01       	movw	r24, r14
    25d4:	64 df       	rcall	.-312    	; 0x249e <waitfor>
    25d6:	62 30       	cpi	r22, 0x02	; 2
    25d8:	71 05       	cpc	r23, r1
    25da:	81 05       	cpc	r24, r1
    25dc:	91 05       	cpc	r25, r1
    25de:	69 f5       	brne	.+90     	; 0x263a <MQTTConnect+0x138>
    25e0:	8f ef       	ldi	r24, 0xFF	; 255
    25e2:	26 96       	adiw	r28, 0x06	; 6
    25e4:	8f af       	std	Y+63, r24	; 0x3f
    25e6:	26 97       	sbiw	r28, 0x06	; 6
    25e8:	25 96       	adiw	r28, 0x05	; 5
    25ea:	1f ae       	std	Y+63, r1	; 0x3f
    25ec:	25 97       	sbiw	r28, 0x05	; 5
    25ee:	f7 01       	movw	r30, r14
    25f0:	02 85       	ldd	r16, Z+10	; 0x0a
    25f2:	13 85       	ldd	r17, Z+11	; 0x0b
    25f4:	20 e0       	ldi	r18, 0x00	; 0
    25f6:	30 e0       	ldi	r19, 0x00	; 0
    25f8:	46 85       	ldd	r20, Z+14	; 0x0e
    25fa:	57 85       	ldd	r21, Z+15	; 0x0f
    25fc:	be 01       	movw	r22, r28
    25fe:	6b 5b       	subi	r22, 0xBB	; 187
    2600:	7f 4f       	sbci	r23, 0xFF	; 255
    2602:	ce 01       	movw	r24, r28
    2604:	8c 5b       	subi	r24, 0xBC	; 188
    2606:	9f 4f       	sbci	r25, 0xFF	; 255
    2608:	d1 d3       	rcall	.+1954   	; 0x2dac <MQTTDeserialize_connack>
    260a:	61 30       	cpi	r22, 0x01	; 1
    260c:	71 05       	cpc	r23, r1
    260e:	81 05       	cpc	r24, r1
    2610:	91 05       	cpc	r25, r1
    2612:	39 f4       	brne	.+14     	; 0x2622 <MQTTConnect+0x120>
    2614:	26 96       	adiw	r28, 0x06	; 6
    2616:	6f ad       	ldd	r22, Y+63	; 0x3f
    2618:	26 97       	sbiw	r28, 0x06	; 6
    261a:	70 e0       	ldi	r23, 0x00	; 0
    261c:	80 e0       	ldi	r24, 0x00	; 0
    261e:	90 e0       	ldi	r25, 0x00	; 0
    2620:	0f c0       	rjmp	.+30     	; 0x2640 <MQTTConnect+0x13e>
    2622:	6f ef       	ldi	r22, 0xFF	; 255
    2624:	7f ef       	ldi	r23, 0xFF	; 255
    2626:	cb 01       	movw	r24, r22
    2628:	0b c0       	rjmp	.+22     	; 0x2640 <MQTTConnect+0x13e>
    262a:	6f ef       	ldi	r22, 0xFF	; 255
    262c:	7f ef       	ldi	r23, 0xFF	; 255
    262e:	cb 01       	movw	r24, r22
    2630:	07 c0       	rjmp	.+14     	; 0x2640 <MQTTConnect+0x13e>
    2632:	6f ef       	ldi	r22, 0xFF	; 255
    2634:	7f ef       	ldi	r23, 0xFF	; 255
    2636:	cb 01       	movw	r24, r22
    2638:	03 c0       	rjmp	.+6      	; 0x2640 <MQTTConnect+0x13e>
    263a:	6f ef       	ldi	r22, 0xFF	; 255
    263c:	7f ef       	ldi	r23, 0xFF	; 255
    263e:	cb 01       	movw	r24, r22
    2640:	61 15       	cp	r22, r1
    2642:	71 05       	cpc	r23, r1
    2644:	81 05       	cpc	r24, r1
    2646:	91 05       	cpc	r25, r1
    2648:	49 f4       	brne	.+18     	; 0x265c <MQTTConnect+0x15a>
    264a:	01 e0       	ldi	r16, 0x01	; 1
    264c:	10 e0       	ldi	r17, 0x00	; 0
    264e:	20 e0       	ldi	r18, 0x00	; 0
    2650:	30 e0       	ldi	r19, 0x00	; 0
    2652:	f7 01       	movw	r30, r14
    2654:	05 8b       	std	Z+21, r16	; 0x15
    2656:	16 8b       	std	Z+22, r17	; 0x16
    2658:	27 8b       	std	Z+23, r18	; 0x17
    265a:	30 8f       	std	Z+24, r19	; 0x18
    265c:	cb 5b       	subi	r28, 0xBB	; 187
    265e:	df 4f       	sbci	r29, 0xFF	; 255
    2660:	0f b6       	in	r0, 0x3f	; 63
    2662:	f8 94       	cli
    2664:	de bf       	out	0x3e, r29	; 62
    2666:	0f be       	out	0x3f, r0	; 63
    2668:	cd bf       	out	0x3d, r28	; 61
    266a:	df 91       	pop	r29
    266c:	cf 91       	pop	r28
    266e:	1f 91       	pop	r17
    2670:	0f 91       	pop	r16
    2672:	ff 90       	pop	r15
    2674:	ef 90       	pop	r14
    2676:	08 95       	ret

00002678 <MQTTSubscribe>:
    2678:	2f 92       	push	r2
    267a:	3f 92       	push	r3
    267c:	4f 92       	push	r4
    267e:	5f 92       	push	r5
    2680:	6f 92       	push	r6
    2682:	7f 92       	push	r7
    2684:	8f 92       	push	r8
    2686:	9f 92       	push	r9
    2688:	af 92       	push	r10
    268a:	bf 92       	push	r11
    268c:	cf 92       	push	r12
    268e:	df 92       	push	r13
    2690:	ef 92       	push	r14
    2692:	ff 92       	push	r15
    2694:	0f 93       	push	r16
    2696:	1f 93       	push	r17
    2698:	cf 93       	push	r28
    269a:	df 93       	push	r29
    269c:	cd b7       	in	r28, 0x3d	; 61
    269e:	de b7       	in	r29, 0x3e	; 62
    26a0:	6f 97       	sbiw	r28, 0x1f	; 31
    26a2:	0f b6       	in	r0, 0x3f	; 63
    26a4:	f8 94       	cli
    26a6:	de bf       	out	0x3e, r29	; 62
    26a8:	0f be       	out	0x3f, r0	; 63
    26aa:	cd bf       	out	0x3d, r28	; 61
    26ac:	3c 01       	movw	r6, r24
    26ae:	7d 8f       	std	Y+29, r23	; 0x1d
    26b0:	6c 8f       	std	Y+28, r22	; 0x1c
    26b2:	4b 8f       	std	Y+27, r20	; 0x1b
    26b4:	3f 8f       	std	Y+31, r19	; 0x1f
    26b6:	2e 8f       	std	Y+30, r18	; 0x1e
    26b8:	1b 86       	std	Y+11, r1	; 0x0b
    26ba:	1c 86       	std	Y+12, r1	; 0x0c
    26bc:	1d 86       	std	Y+13, r1	; 0x0d
    26be:	1e 86       	std	Y+14, r1	; 0x0e
    26c0:	18 8a       	std	Y+16, r1	; 0x10
    26c2:	1f 86       	std	Y+15, r1	; 0x0f
    26c4:	7a 87       	std	Y+10, r23	; 0x0a
    26c6:	69 87       	std	Y+9, r22	; 0x09
    26c8:	ce 01       	movw	r24, r28
    26ca:	01 96       	adiw	r24, 0x01	; 1
    26cc:	0e 94 a4 1e 	call	0x3d48	; 0x3d48 <InitTimer>
    26d0:	f3 01       	movw	r30, r6
    26d2:	44 81       	ldd	r20, Z+4	; 0x04
    26d4:	55 81       	ldd	r21, Z+5	; 0x05
    26d6:	66 81       	ldd	r22, Z+6	; 0x06
    26d8:	77 81       	ldd	r23, Z+7	; 0x07
    26da:	ce 01       	movw	r24, r28
    26dc:	01 96       	adiw	r24, 0x01	; 1
    26de:	0e 94 3e 1e 	call	0x3c7c	; 0x3c7c <countdown_ms>
    26e2:	f3 01       	movw	r30, r6
    26e4:	85 89       	ldd	r24, Z+21	; 0x15
    26e6:	96 89       	ldd	r25, Z+22	; 0x16
    26e8:	a7 89       	ldd	r26, Z+23	; 0x17
    26ea:	b0 8d       	ldd	r27, Z+24	; 0x18
    26ec:	89 2b       	or	r24, r25
    26ee:	8a 2b       	or	r24, r26
    26f0:	8b 2b       	or	r24, r27
    26f2:	09 f4       	brne	.+2      	; 0x26f6 <MQTTSubscribe+0x7e>
    26f4:	9a c0       	rjmp	.+308    	; 0x282a <MQTTSubscribe+0x1b2>
    26f6:	c3 01       	movw	r24, r6
    26f8:	0c da       	rcall	.-3048   	; 0x1b12 <getNextPacketId>
    26fa:	8b 01       	movw	r16, r22
    26fc:	9c 01       	movw	r18, r24
    26fe:	f3 01       	movw	r30, r6
    2700:	40 85       	ldd	r20, Z+8	; 0x08
    2702:	51 85       	ldd	r21, Z+9	; 0x09
    2704:	60 e0       	ldi	r22, 0x00	; 0
    2706:	70 e0       	ldi	r23, 0x00	; 0
    2708:	ce 01       	movw	r24, r28
    270a:	4b 96       	adiw	r24, 0x1b	; 27
    270c:	4c 01       	movw	r8, r24
    270e:	fe 01       	movw	r30, r28
    2710:	39 96       	adiw	r30, 0x09	; 9
    2712:	5f 01       	movw	r10, r30
    2714:	c1 2c       	mov	r12, r1
    2716:	d1 2c       	mov	r13, r1
    2718:	76 01       	movw	r14, r12
    271a:	c3 94       	inc	r12
    271c:	20 e0       	ldi	r18, 0x00	; 0
    271e:	f3 01       	movw	r30, r6
    2720:	84 85       	ldd	r24, Z+12	; 0x0c
    2722:	95 85       	ldd	r25, Z+13	; 0x0d
    2724:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <MQTTSerialize_subscribe>
    2728:	ab 01       	movw	r20, r22
    272a:	bc 01       	movw	r22, r24
    272c:	14 16       	cp	r1, r20
    272e:	15 06       	cpc	r1, r21
    2730:	16 06       	cpc	r1, r22
    2732:	17 06       	cpc	r1, r23
    2734:	0c f0       	brlt	.+2      	; 0x2738 <MQTTSubscribe+0xc0>
    2736:	7e c0       	rjmp	.+252    	; 0x2834 <MQTTSubscribe+0x1bc>
    2738:	9e 01       	movw	r18, r28
    273a:	2f 5f       	subi	r18, 0xFF	; 255
    273c:	3f 4f       	sbci	r19, 0xFF	; 255
    273e:	c3 01       	movw	r24, r6
    2740:	03 da       	rcall	.-3066   	; 0x1b48 <sendPacket>
    2742:	1b 01       	movw	r2, r22
    2744:	2c 01       	movw	r4, r24
    2746:	67 2b       	or	r22, r23
    2748:	68 2b       	or	r22, r24
    274a:	69 2b       	or	r22, r25
    274c:	09 f0       	breq	.+2      	; 0x2750 <MQTTSubscribe+0xd8>
    274e:	7b c0       	rjmp	.+246    	; 0x2846 <MQTTSubscribe+0x1ce>
    2750:	9e 01       	movw	r18, r28
    2752:	2f 5f       	subi	r18, 0xFF	; 255
    2754:	3f 4f       	sbci	r19, 0xFF	; 255
    2756:	49 e0       	ldi	r20, 0x09	; 9
    2758:	50 e0       	ldi	r21, 0x00	; 0
    275a:	60 e0       	ldi	r22, 0x00	; 0
    275c:	70 e0       	ldi	r23, 0x00	; 0
    275e:	c3 01       	movw	r24, r6
    2760:	9e de       	rcall	.-708    	; 0x249e <waitfor>
    2762:	69 30       	cpi	r22, 0x09	; 9
    2764:	71 05       	cpc	r23, r1
    2766:	81 05       	cpc	r24, r1
    2768:	91 05       	cpc	r25, r1
    276a:	09 f0       	breq	.+2      	; 0x276e <MQTTSubscribe+0xf6>
    276c:	68 c0       	rjmp	.+208    	; 0x283e <MQTTSubscribe+0x1c6>
    276e:	1d 8a       	std	Y+21, r1	; 0x15
    2770:	1e 8a       	std	Y+22, r1	; 0x16
    2772:	1f 8a       	std	Y+23, r1	; 0x17
    2774:	18 8e       	std	Y+24, r1	; 0x18
    2776:	8f ef       	ldi	r24, 0xFF	; 255
    2778:	9f ef       	ldi	r25, 0xFF	; 255
    277a:	dc 01       	movw	r26, r24
    277c:	89 8b       	std	Y+17, r24	; 0x11
    277e:	9a 8b       	std	Y+18, r25	; 0x12
    2780:	ab 8b       	std	Y+19, r26	; 0x13
    2782:	bc 8b       	std	Y+20, r27	; 0x14
    2784:	f3 01       	movw	r30, r6
    2786:	a2 84       	ldd	r10, Z+10	; 0x0a
    2788:	b3 84       	ldd	r11, Z+11	; 0x0b
    278a:	c1 2c       	mov	r12, r1
    278c:	d1 2c       	mov	r13, r1
    278e:	e6 84       	ldd	r14, Z+14	; 0x0e
    2790:	f7 84       	ldd	r15, Z+15	; 0x0f
    2792:	8e 01       	movw	r16, r28
    2794:	0f 5e       	subi	r16, 0xEF	; 239
    2796:	1f 4f       	sbci	r17, 0xFF	; 255
    2798:	9e 01       	movw	r18, r28
    279a:	2b 5e       	subi	r18, 0xEB	; 235
    279c:	3f 4f       	sbci	r19, 0xFF	; 255
    279e:	41 e0       	ldi	r20, 0x01	; 1
    27a0:	50 e0       	ldi	r21, 0x00	; 0
    27a2:	60 e0       	ldi	r22, 0x00	; 0
    27a4:	70 e0       	ldi	r23, 0x00	; 0
    27a6:	ce 01       	movw	r24, r28
    27a8:	49 96       	adiw	r24, 0x19	; 25
    27aa:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <MQTTDeserialize_suback>
    27ae:	61 30       	cpi	r22, 0x01	; 1
    27b0:	71 05       	cpc	r23, r1
    27b2:	81 05       	cpc	r24, r1
    27b4:	91 05       	cpc	r25, r1
    27b6:	29 f4       	brne	.+10     	; 0x27c2 <MQTTSubscribe+0x14a>
    27b8:	49 89       	ldd	r20, Y+17	; 0x11
    27ba:	5a 89       	ldd	r21, Y+18	; 0x12
    27bc:	6b 89       	ldd	r22, Y+19	; 0x13
    27be:	7c 89       	ldd	r23, Y+20	; 0x14
    27c0:	02 c0       	rjmp	.+4      	; 0x27c6 <MQTTSubscribe+0x14e>
    27c2:	b2 01       	movw	r22, r4
    27c4:	a1 01       	movw	r20, r2
    27c6:	40 38       	cpi	r20, 0x80	; 128
    27c8:	51 05       	cpc	r21, r1
    27ca:	61 05       	cpc	r22, r1
    27cc:	71 05       	cpc	r23, r1
    27ce:	11 f5       	brne	.+68     	; 0x2814 <MQTTSubscribe+0x19c>
    27d0:	29 c0       	rjmp	.+82     	; 0x2824 <MQTTSubscribe+0x1ac>
    27d2:	fc 01       	movw	r30, r24
    27d4:	ee 0f       	add	r30, r30
    27d6:	ff 1f       	adc	r31, r31
    27d8:	ee 0f       	add	r30, r30
    27da:	ff 1f       	adc	r31, r31
    27dc:	e6 0d       	add	r30, r6
    27de:	f7 1d       	adc	r31, r7
    27e0:	21 8d       	ldd	r18, Z+25	; 0x19
    27e2:	32 8d       	ldd	r19, Z+26	; 0x1a
    27e4:	23 2b       	or	r18, r19
    27e6:	91 f4       	brne	.+36     	; 0x280c <MQTTSubscribe+0x194>
    27e8:	88 0f       	add	r24, r24
    27ea:	99 1f       	adc	r25, r25
    27ec:	88 0f       	add	r24, r24
    27ee:	99 1f       	adc	r25, r25
    27f0:	f3 01       	movw	r30, r6
    27f2:	e8 0f       	add	r30, r24
    27f4:	f9 1f       	adc	r31, r25
    27f6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    27f8:	9d 8d       	ldd	r25, Y+29	; 0x1d
    27fa:	92 8f       	std	Z+26, r25	; 0x1a
    27fc:	81 8f       	std	Z+25, r24	; 0x19
    27fe:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2800:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2802:	94 8f       	std	Z+28, r25	; 0x1c
    2804:	83 8f       	std	Z+27, r24	; 0x1b
    2806:	b2 01       	movw	r22, r4
    2808:	a1 01       	movw	r20, r2
    280a:	0c c0       	rjmp	.+24     	; 0x2824 <MQTTSubscribe+0x1ac>
    280c:	01 96       	adiw	r24, 0x01	; 1
    280e:	a1 1d       	adc	r26, r1
    2810:	b1 1d       	adc	r27, r1
    2812:	03 c0       	rjmp	.+6      	; 0x281a <MQTTSubscribe+0x1a2>
    2814:	80 e0       	ldi	r24, 0x00	; 0
    2816:	90 e0       	ldi	r25, 0x00	; 0
    2818:	dc 01       	movw	r26, r24
    281a:	85 30       	cpi	r24, 0x05	; 5
    281c:	91 05       	cpc	r25, r1
    281e:	a1 05       	cpc	r26, r1
    2820:	b1 05       	cpc	r27, r1
    2822:	bc f2       	brlt	.-82     	; 0x27d2 <MQTTSubscribe+0x15a>
    2824:	1a 01       	movw	r2, r20
    2826:	2b 01       	movw	r4, r22
    2828:	0e c0       	rjmp	.+28     	; 0x2846 <MQTTSubscribe+0x1ce>
    282a:	22 24       	eor	r2, r2
    282c:	2a 94       	dec	r2
    282e:	32 2c       	mov	r3, r2
    2830:	21 01       	movw	r4, r2
    2832:	09 c0       	rjmp	.+18     	; 0x2846 <MQTTSubscribe+0x1ce>
    2834:	22 24       	eor	r2, r2
    2836:	2a 94       	dec	r2
    2838:	32 2c       	mov	r3, r2
    283a:	21 01       	movw	r4, r2
    283c:	04 c0       	rjmp	.+8      	; 0x2846 <MQTTSubscribe+0x1ce>
    283e:	22 24       	eor	r2, r2
    2840:	2a 94       	dec	r2
    2842:	32 2c       	mov	r3, r2
    2844:	21 01       	movw	r4, r2
    2846:	c2 01       	movw	r24, r4
    2848:	b1 01       	movw	r22, r2
    284a:	6f 96       	adiw	r28, 0x1f	; 31
    284c:	0f b6       	in	r0, 0x3f	; 63
    284e:	f8 94       	cli
    2850:	de bf       	out	0x3e, r29	; 62
    2852:	0f be       	out	0x3f, r0	; 63
    2854:	cd bf       	out	0x3d, r28	; 61
    2856:	df 91       	pop	r29
    2858:	cf 91       	pop	r28
    285a:	1f 91       	pop	r17
    285c:	0f 91       	pop	r16
    285e:	ff 90       	pop	r15
    2860:	ef 90       	pop	r14
    2862:	df 90       	pop	r13
    2864:	cf 90       	pop	r12
    2866:	bf 90       	pop	r11
    2868:	af 90       	pop	r10
    286a:	9f 90       	pop	r9
    286c:	8f 90       	pop	r8
    286e:	7f 90       	pop	r7
    2870:	6f 90       	pop	r6
    2872:	5f 90       	pop	r5
    2874:	4f 90       	pop	r4
    2876:	3f 90       	pop	r3
    2878:	2f 90       	pop	r2
    287a:	08 95       	ret

0000287c <MQTTPublish>:
    287c:	4f 92       	push	r4
    287e:	5f 92       	push	r5
    2880:	6f 92       	push	r6
    2882:	7f 92       	push	r7
    2884:	8f 92       	push	r8
    2886:	9f 92       	push	r9
    2888:	af 92       	push	r10
    288a:	bf 92       	push	r11
    288c:	cf 92       	push	r12
    288e:	df 92       	push	r13
    2890:	ef 92       	push	r14
    2892:	ff 92       	push	r15
    2894:	0f 93       	push	r16
    2896:	1f 93       	push	r17
    2898:	cf 93       	push	r28
    289a:	df 93       	push	r29
    289c:	cd b7       	in	r28, 0x3d	; 61
    289e:	de b7       	in	r29, 0x3e	; 62
    28a0:	64 97       	sbiw	r28, 0x14	; 20
    28a2:	0f b6       	in	r0, 0x3f	; 63
    28a4:	f8 94       	cli
    28a6:	de bf       	out	0x3e, r29	; 62
    28a8:	0f be       	out	0x3f, r0	; 63
    28aa:	cd bf       	out	0x3d, r28	; 61
    28ac:	4c 01       	movw	r8, r24
    28ae:	5a 01       	movw	r10, r20
    28b0:	1b 86       	std	Y+11, r1	; 0x0b
    28b2:	1c 86       	std	Y+12, r1	; 0x0c
    28b4:	1d 86       	std	Y+13, r1	; 0x0d
    28b6:	1e 86       	std	Y+14, r1	; 0x0e
    28b8:	18 8a       	std	Y+16, r1	; 0x10
    28ba:	1f 86       	std	Y+15, r1	; 0x0f
    28bc:	7a 87       	std	Y+10, r23	; 0x0a
    28be:	69 87       	std	Y+9, r22	; 0x09
    28c0:	ce 01       	movw	r24, r28
    28c2:	01 96       	adiw	r24, 0x01	; 1
    28c4:	0e 94 a4 1e 	call	0x3d48	; 0x3d48 <InitTimer>
    28c8:	f4 01       	movw	r30, r8
    28ca:	44 81       	ldd	r20, Z+4	; 0x04
    28cc:	55 81       	ldd	r21, Z+5	; 0x05
    28ce:	66 81       	ldd	r22, Z+6	; 0x06
    28d0:	77 81       	ldd	r23, Z+7	; 0x07
    28d2:	ce 01       	movw	r24, r28
    28d4:	01 96       	adiw	r24, 0x01	; 1
    28d6:	0e 94 3e 1e 	call	0x3c7c	; 0x3c7c <countdown_ms>
    28da:	f4 01       	movw	r30, r8
    28dc:	85 89       	ldd	r24, Z+21	; 0x15
    28de:	96 89       	ldd	r25, Z+22	; 0x16
    28e0:	a7 89       	ldd	r26, Z+23	; 0x17
    28e2:	b0 8d       	ldd	r27, Z+24	; 0x18
    28e4:	89 2b       	or	r24, r25
    28e6:	8a 2b       	or	r24, r26
    28e8:	8b 2b       	or	r24, r27
    28ea:	09 f4       	brne	.+2      	; 0x28ee <MQTTPublish+0x72>
    28ec:	a6 c0       	rjmp	.+332    	; 0x2a3a <MQTTPublish+0x1be>
    28ee:	f5 01       	movw	r30, r10
    28f0:	80 81       	ld	r24, Z
    28f2:	81 50       	subi	r24, 0x01	; 1
    28f4:	82 30       	cpi	r24, 0x02	; 2
    28f6:	28 f4       	brcc	.+10     	; 0x2902 <MQTTPublish+0x86>
    28f8:	c4 01       	movw	r24, r8
    28fa:	0b d9       	rcall	.-3562   	; 0x1b12 <getNextPacketId>
    28fc:	f5 01       	movw	r30, r10
    28fe:	74 83       	std	Z+4, r23	; 0x04
    2900:	63 83       	std	Z+3, r22	; 0x03
    2902:	f5 01       	movw	r30, r10
    2904:	47 80       	ldd	r4, Z+7	; 0x07
    2906:	50 84       	ldd	r5, Z+8	; 0x08
    2908:	25 81       	ldd	r18, Z+5	; 0x05
    290a:	36 81       	ldd	r19, Z+6	; 0x06
    290c:	c3 80       	ldd	r12, Z+3	; 0x03
    290e:	d4 80       	ldd	r13, Z+4	; 0x04
    2910:	e1 80       	ldd	r14, Z+1	; 0x01
    2912:	00 81       	ld	r16, Z
    2914:	f4 01       	movw	r30, r8
    2916:	40 85       	ldd	r20, Z+8	; 0x08
    2918:	51 85       	ldd	r21, Z+9	; 0x09
    291a:	60 e0       	ldi	r22, 0x00	; 0
    291c:	70 e0       	ldi	r23, 0x00	; 0
    291e:	84 85       	ldd	r24, Z+12	; 0x0c
    2920:	95 85       	ldd	r25, Z+13	; 0x0d
    2922:	1f 92       	push	r1
    2924:	1f 92       	push	r1
    2926:	5f 92       	push	r5
    2928:	4f 92       	push	r4
    292a:	3f 93       	push	r19
    292c:	2f 93       	push	r18
    292e:	2d b7       	in	r18, 0x3d	; 61
    2930:	3e b7       	in	r19, 0x3e	; 62
    2932:	28 50       	subi	r18, 0x08	; 8
    2934:	31 09       	sbc	r19, r1
    2936:	0f b6       	in	r0, 0x3f	; 63
    2938:	f8 94       	cli
    293a:	3e bf       	out	0x3e, r19	; 62
    293c:	0f be       	out	0x3f, r0	; 63
    293e:	2d bf       	out	0x3d, r18	; 61
    2940:	ad b7       	in	r26, 0x3d	; 61
    2942:	be b7       	in	r27, 0x3e	; 62
    2944:	11 96       	adiw	r26, 0x01	; 1
    2946:	28 e0       	ldi	r18, 0x08	; 8
    2948:	fe 01       	movw	r30, r28
    294a:	39 96       	adiw	r30, 0x09	; 9
    294c:	01 90       	ld	r0, Z+
    294e:	0d 92       	st	X+, r0
    2950:	2a 95       	dec	r18
    2952:	e1 f7       	brne	.-8      	; 0x294c <MQTTPublish+0xd0>
    2954:	20 e0       	ldi	r18, 0x00	; 0
    2956:	7f d6       	rcall	.+3326   	; 0x3656 <MQTTSerialize_publish>
    2958:	ab 01       	movw	r20, r22
    295a:	bc 01       	movw	r22, r24
    295c:	0f b6       	in	r0, 0x3f	; 63
    295e:	f8 94       	cli
    2960:	de bf       	out	0x3e, r29	; 62
    2962:	0f be       	out	0x3f, r0	; 63
    2964:	cd bf       	out	0x3d, r28	; 61
    2966:	14 16       	cp	r1, r20
    2968:	15 06       	cpc	r1, r21
    296a:	16 06       	cpc	r1, r22
    296c:	17 06       	cpc	r1, r23
    296e:	0c f0       	brlt	.+2      	; 0x2972 <MQTTPublish+0xf6>
    2970:	69 c0       	rjmp	.+210    	; 0x2a44 <MQTTPublish+0x1c8>
    2972:	9e 01       	movw	r18, r28
    2974:	2f 5f       	subi	r18, 0xFF	; 255
    2976:	3f 4f       	sbci	r19, 0xFF	; 255
    2978:	c4 01       	movw	r24, r8
    297a:	e6 d8       	rcall	.-3636   	; 0x1b48 <sendPacket>
    297c:	2b 01       	movw	r4, r22
    297e:	3c 01       	movw	r6, r24
    2980:	67 2b       	or	r22, r23
    2982:	68 2b       	or	r22, r24
    2984:	69 2b       	or	r22, r25
    2986:	09 f0       	breq	.+2      	; 0x298a <MQTTPublish+0x10e>
    2988:	6b c0       	rjmp	.+214    	; 0x2a60 <MQTTPublish+0x1e4>
    298a:	f5 01       	movw	r30, r10
    298c:	80 81       	ld	r24, Z
    298e:	81 30       	cpi	r24, 0x01	; 1
    2990:	51 f5       	brne	.+84     	; 0x29e6 <MQTTPublish+0x16a>
    2992:	9e 01       	movw	r18, r28
    2994:	2f 5f       	subi	r18, 0xFF	; 255
    2996:	3f 4f       	sbci	r19, 0xFF	; 255
    2998:	44 e0       	ldi	r20, 0x04	; 4
    299a:	50 e0       	ldi	r21, 0x00	; 0
    299c:	60 e0       	ldi	r22, 0x00	; 0
    299e:	70 e0       	ldi	r23, 0x00	; 0
    29a0:	c4 01       	movw	r24, r8
    29a2:	7d dd       	rcall	.-1286   	; 0x249e <waitfor>
    29a4:	64 30       	cpi	r22, 0x04	; 4
    29a6:	71 05       	cpc	r23, r1
    29a8:	81 05       	cpc	r24, r1
    29aa:	91 05       	cpc	r25, r1
    29ac:	09 f0       	breq	.+2      	; 0x29b0 <MQTTPublish+0x134>
    29ae:	4f c0       	rjmp	.+158    	; 0x2a4e <MQTTPublish+0x1d2>
    29b0:	f4 01       	movw	r30, r8
    29b2:	e2 84       	ldd	r14, Z+10	; 0x0a
    29b4:	f3 84       	ldd	r15, Z+11	; 0x0b
    29b6:	00 e0       	ldi	r16, 0x00	; 0
    29b8:	10 e0       	ldi	r17, 0x00	; 0
    29ba:	26 85       	ldd	r18, Z+14	; 0x0e
    29bc:	37 85       	ldd	r19, Z+15	; 0x0f
    29be:	ae 01       	movw	r20, r28
    29c0:	4f 5e       	subi	r20, 0xEF	; 239
    29c2:	5f 4f       	sbci	r21, 0xFF	; 255
    29c4:	be 01       	movw	r22, r28
    29c6:	6c 5e       	subi	r22, 0xEC	; 236
    29c8:	7f 4f       	sbci	r23, 0xFF	; 255
    29ca:	ce 01       	movw	r24, r28
    29cc:	43 96       	adiw	r24, 0x13	; 19
    29ce:	07 d3       	rcall	.+1550   	; 0x2fde <MQTTDeserialize_ack>
    29d0:	61 30       	cpi	r22, 0x01	; 1
    29d2:	71 05       	cpc	r23, r1
    29d4:	81 05       	cpc	r24, r1
    29d6:	91 05       	cpc	r25, r1
    29d8:	09 f4       	brne	.+2      	; 0x29dc <MQTTPublish+0x160>
    29da:	42 c0       	rjmp	.+132    	; 0x2a60 <MQTTPublish+0x1e4>
    29dc:	44 24       	eor	r4, r4
    29de:	4a 94       	dec	r4
    29e0:	54 2c       	mov	r5, r4
    29e2:	32 01       	movw	r6, r4
    29e4:	3d c0       	rjmp	.+122    	; 0x2a60 <MQTTPublish+0x1e4>
    29e6:	82 30       	cpi	r24, 0x02	; 2
    29e8:	d9 f5       	brne	.+118    	; 0x2a60 <MQTTPublish+0x1e4>
    29ea:	9e 01       	movw	r18, r28
    29ec:	2f 5f       	subi	r18, 0xFF	; 255
    29ee:	3f 4f       	sbci	r19, 0xFF	; 255
    29f0:	47 e0       	ldi	r20, 0x07	; 7
    29f2:	50 e0       	ldi	r21, 0x00	; 0
    29f4:	60 e0       	ldi	r22, 0x00	; 0
    29f6:	70 e0       	ldi	r23, 0x00	; 0
    29f8:	c4 01       	movw	r24, r8
    29fa:	51 dd       	rcall	.-1374   	; 0x249e <waitfor>
    29fc:	67 30       	cpi	r22, 0x07	; 7
    29fe:	71 05       	cpc	r23, r1
    2a00:	81 05       	cpc	r24, r1
    2a02:	91 05       	cpc	r25, r1
    2a04:	49 f5       	brne	.+82     	; 0x2a58 <MQTTPublish+0x1dc>
    2a06:	f4 01       	movw	r30, r8
    2a08:	e2 84       	ldd	r14, Z+10	; 0x0a
    2a0a:	f3 84       	ldd	r15, Z+11	; 0x0b
    2a0c:	00 e0       	ldi	r16, 0x00	; 0
    2a0e:	10 e0       	ldi	r17, 0x00	; 0
    2a10:	26 85       	ldd	r18, Z+14	; 0x0e
    2a12:	37 85       	ldd	r19, Z+15	; 0x0f
    2a14:	ae 01       	movw	r20, r28
    2a16:	4f 5e       	subi	r20, 0xEF	; 239
    2a18:	5f 4f       	sbci	r21, 0xFF	; 255
    2a1a:	be 01       	movw	r22, r28
    2a1c:	6c 5e       	subi	r22, 0xEC	; 236
    2a1e:	7f 4f       	sbci	r23, 0xFF	; 255
    2a20:	ce 01       	movw	r24, r28
    2a22:	43 96       	adiw	r24, 0x13	; 19
    2a24:	dc d2       	rcall	.+1464   	; 0x2fde <MQTTDeserialize_ack>
    2a26:	61 30       	cpi	r22, 0x01	; 1
    2a28:	71 05       	cpc	r23, r1
    2a2a:	81 05       	cpc	r24, r1
    2a2c:	91 05       	cpc	r25, r1
    2a2e:	c1 f0       	breq	.+48     	; 0x2a60 <MQTTPublish+0x1e4>
    2a30:	44 24       	eor	r4, r4
    2a32:	4a 94       	dec	r4
    2a34:	54 2c       	mov	r5, r4
    2a36:	32 01       	movw	r6, r4
    2a38:	13 c0       	rjmp	.+38     	; 0x2a60 <MQTTPublish+0x1e4>
    2a3a:	44 24       	eor	r4, r4
    2a3c:	4a 94       	dec	r4
    2a3e:	54 2c       	mov	r5, r4
    2a40:	32 01       	movw	r6, r4
    2a42:	0e c0       	rjmp	.+28     	; 0x2a60 <MQTTPublish+0x1e4>
    2a44:	44 24       	eor	r4, r4
    2a46:	4a 94       	dec	r4
    2a48:	54 2c       	mov	r5, r4
    2a4a:	32 01       	movw	r6, r4
    2a4c:	09 c0       	rjmp	.+18     	; 0x2a60 <MQTTPublish+0x1e4>
    2a4e:	44 24       	eor	r4, r4
    2a50:	4a 94       	dec	r4
    2a52:	54 2c       	mov	r5, r4
    2a54:	32 01       	movw	r6, r4
    2a56:	04 c0       	rjmp	.+8      	; 0x2a60 <MQTTPublish+0x1e4>
    2a58:	44 24       	eor	r4, r4
    2a5a:	4a 94       	dec	r4
    2a5c:	54 2c       	mov	r5, r4
    2a5e:	32 01       	movw	r6, r4
    2a60:	c3 01       	movw	r24, r6
    2a62:	b2 01       	movw	r22, r4
    2a64:	64 96       	adiw	r28, 0x14	; 20
    2a66:	0f b6       	in	r0, 0x3f	; 63
    2a68:	f8 94       	cli
    2a6a:	de bf       	out	0x3e, r29	; 62
    2a6c:	0f be       	out	0x3f, r0	; 63
    2a6e:	cd bf       	out	0x3d, r28	; 61
    2a70:	df 91       	pop	r29
    2a72:	cf 91       	pop	r28
    2a74:	1f 91       	pop	r17
    2a76:	0f 91       	pop	r16
    2a78:	ff 90       	pop	r15
    2a7a:	ef 90       	pop	r14
    2a7c:	df 90       	pop	r13
    2a7e:	cf 90       	pop	r12
    2a80:	bf 90       	pop	r11
    2a82:	af 90       	pop	r10
    2a84:	9f 90       	pop	r9
    2a86:	8f 90       	pop	r8
    2a88:	7f 90       	pop	r7
    2a8a:	6f 90       	pop	r6
    2a8c:	5f 90       	pop	r5
    2a8e:	4f 90       	pop	r4
    2a90:	08 95       	ret

00002a92 <MQTTSerialize_connectLength>:
    2a92:	8f 92       	push	r8
    2a94:	9f 92       	push	r9
    2a96:	af 92       	push	r10
    2a98:	bf 92       	push	r11
    2a9a:	cf 92       	push	r12
    2a9c:	df 92       	push	r13
    2a9e:	ef 92       	push	r14
    2aa0:	ff 92       	push	r15
    2aa2:	cf 93       	push	r28
    2aa4:	df 93       	push	r29
    2aa6:	ec 01       	movw	r28, r24
    2aa8:	8e 81       	ldd	r24, Y+6	; 0x06
    2aaa:	83 30       	cpi	r24, 0x03	; 3
    2aac:	31 f0       	breq	.+12     	; 0x2aba <MQTTSerialize_connectLength+0x28>
    2aae:	84 30       	cpi	r24, 0x04	; 4
    2ab0:	61 f0       	breq	.+24     	; 0x2aca <MQTTSerialize_connectLength+0x38>
    2ab2:	c1 2c       	mov	r12, r1
    2ab4:	d1 2c       	mov	r13, r1
    2ab6:	76 01       	movw	r14, r12
    2ab8:	0f c0       	rjmp	.+30     	; 0x2ad8 <MQTTSerialize_connectLength+0x46>
    2aba:	0f 2e       	mov	r0, r31
    2abc:	fc e0       	ldi	r31, 0x0C	; 12
    2abe:	cf 2e       	mov	r12, r31
    2ac0:	d1 2c       	mov	r13, r1
    2ac2:	e1 2c       	mov	r14, r1
    2ac4:	f1 2c       	mov	r15, r1
    2ac6:	f0 2d       	mov	r31, r0
    2ac8:	07 c0       	rjmp	.+14     	; 0x2ad8 <MQTTSerialize_connectLength+0x46>
    2aca:	0f 2e       	mov	r0, r31
    2acc:	fa e0       	ldi	r31, 0x0A	; 10
    2ace:	cf 2e       	mov	r12, r31
    2ad0:	d1 2c       	mov	r13, r1
    2ad2:	e1 2c       	mov	r14, r1
    2ad4:	f1 2c       	mov	r15, r1
    2ad6:	f0 2d       	mov	r31, r0
    2ad8:	2f 81       	ldd	r18, Y+7	; 0x07
    2ada:	38 85       	ldd	r19, Y+8	; 0x08
    2adc:	49 85       	ldd	r20, Y+9	; 0x09
    2ade:	5a 85       	ldd	r21, Y+10	; 0x0a
    2ae0:	6b 85       	ldd	r22, Y+11	; 0x0b
    2ae2:	7c 85       	ldd	r23, Y+12	; 0x0c
    2ae4:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ae6:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ae8:	06 d5       	rcall	.+2572   	; 0x34f6 <MQTTstrlen>
    2aea:	dc 01       	movw	r26, r24
    2aec:	cb 01       	movw	r24, r22
    2aee:	02 96       	adiw	r24, 0x02	; 2
    2af0:	a1 1d       	adc	r26, r1
    2af2:	b1 1d       	adc	r27, r1
    2af4:	c8 0e       	add	r12, r24
    2af6:	d9 1e       	adc	r13, r25
    2af8:	ea 1e       	adc	r14, r26
    2afa:	fb 1e       	adc	r15, r27
    2afc:	8a 89       	ldd	r24, Y+18	; 0x12
    2afe:	88 23       	and	r24, r24
    2b00:	31 f1       	breq	.+76     	; 0x2b4e <MQTTSerialize_connectLength+0xbc>
    2b02:	29 8d       	ldd	r18, Y+25	; 0x19
    2b04:	3a 8d       	ldd	r19, Y+26	; 0x1a
    2b06:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2b08:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2b0a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    2b0c:	7e 8d       	ldd	r23, Y+30	; 0x1e
    2b0e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2b10:	98 a1       	ldd	r25, Y+32	; 0x20
    2b12:	f1 d4       	rcall	.+2530   	; 0x34f6 <MQTTstrlen>
    2b14:	4b 01       	movw	r8, r22
    2b16:	5c 01       	movw	r10, r24
    2b18:	22 e0       	ldi	r18, 0x02	; 2
    2b1a:	82 0e       	add	r8, r18
    2b1c:	91 1c       	adc	r9, r1
    2b1e:	a1 1c       	adc	r10, r1
    2b20:	b1 1c       	adc	r11, r1
    2b22:	29 a1       	ldd	r18, Y+33	; 0x21
    2b24:	3a a1       	ldd	r19, Y+34	; 0x22
    2b26:	4b a1       	ldd	r20, Y+35	; 0x23
    2b28:	5c a1       	ldd	r21, Y+36	; 0x24
    2b2a:	6d a1       	ldd	r22, Y+37	; 0x25
    2b2c:	7e a1       	ldd	r23, Y+38	; 0x26
    2b2e:	8f a1       	ldd	r24, Y+39	; 0x27
    2b30:	98 a5       	ldd	r25, Y+40	; 0x28
    2b32:	e1 d4       	rcall	.+2498   	; 0x34f6 <MQTTstrlen>
    2b34:	dc 01       	movw	r26, r24
    2b36:	cb 01       	movw	r24, r22
    2b38:	88 0d       	add	r24, r8
    2b3a:	99 1d       	adc	r25, r9
    2b3c:	aa 1d       	adc	r26, r10
    2b3e:	bb 1d       	adc	r27, r11
    2b40:	02 96       	adiw	r24, 0x02	; 2
    2b42:	a1 1d       	adc	r26, r1
    2b44:	b1 1d       	adc	r27, r1
    2b46:	c8 0e       	add	r12, r24
    2b48:	d9 1e       	adc	r13, r25
    2b4a:	ea 1e       	adc	r14, r26
    2b4c:	fb 1e       	adc	r15, r27
    2b4e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2b50:	9c a5       	ldd	r25, Y+44	; 0x2c
    2b52:	89 2b       	or	r24, r25
    2b54:	21 f4       	brne	.+8      	; 0x2b5e <MQTTSerialize_connectLength+0xcc>
    2b56:	89 a9       	ldd	r24, Y+49	; 0x31
    2b58:	9a a9       	ldd	r25, Y+50	; 0x32
    2b5a:	89 2b       	or	r24, r25
    2b5c:	91 f0       	breq	.+36     	; 0x2b82 <MQTTSerialize_connectLength+0xf0>
    2b5e:	2b a5       	ldd	r18, Y+43	; 0x2b
    2b60:	3c a5       	ldd	r19, Y+44	; 0x2c
    2b62:	4d a5       	ldd	r20, Y+45	; 0x2d
    2b64:	5e a5       	ldd	r21, Y+46	; 0x2e
    2b66:	6f a5       	ldd	r22, Y+47	; 0x2f
    2b68:	78 a9       	ldd	r23, Y+48	; 0x30
    2b6a:	89 a9       	ldd	r24, Y+49	; 0x31
    2b6c:	9a a9       	ldd	r25, Y+50	; 0x32
    2b6e:	c3 d4       	rcall	.+2438   	; 0x34f6 <MQTTstrlen>
    2b70:	dc 01       	movw	r26, r24
    2b72:	cb 01       	movw	r24, r22
    2b74:	02 96       	adiw	r24, 0x02	; 2
    2b76:	a1 1d       	adc	r26, r1
    2b78:	b1 1d       	adc	r27, r1
    2b7a:	c8 0e       	add	r12, r24
    2b7c:	d9 1e       	adc	r13, r25
    2b7e:	ea 1e       	adc	r14, r26
    2b80:	fb 1e       	adc	r15, r27
    2b82:	8b a9       	ldd	r24, Y+51	; 0x33
    2b84:	9c a9       	ldd	r25, Y+52	; 0x34
    2b86:	89 2b       	or	r24, r25
    2b88:	21 f4       	brne	.+8      	; 0x2b92 <MQTTSerialize_connectLength+0x100>
    2b8a:	89 ad       	ldd	r24, Y+57	; 0x39
    2b8c:	9a ad       	ldd	r25, Y+58	; 0x3a
    2b8e:	89 2b       	or	r24, r25
    2b90:	91 f0       	breq	.+36     	; 0x2bb6 <MQTTSerialize_connectLength+0x124>
    2b92:	2b a9       	ldd	r18, Y+51	; 0x33
    2b94:	3c a9       	ldd	r19, Y+52	; 0x34
    2b96:	4d a9       	ldd	r20, Y+53	; 0x35
    2b98:	5e a9       	ldd	r21, Y+54	; 0x36
    2b9a:	6f a9       	ldd	r22, Y+55	; 0x37
    2b9c:	78 ad       	ldd	r23, Y+56	; 0x38
    2b9e:	89 ad       	ldd	r24, Y+57	; 0x39
    2ba0:	9a ad       	ldd	r25, Y+58	; 0x3a
    2ba2:	a9 d4       	rcall	.+2386   	; 0x34f6 <MQTTstrlen>
    2ba4:	dc 01       	movw	r26, r24
    2ba6:	cb 01       	movw	r24, r22
    2ba8:	02 96       	adiw	r24, 0x02	; 2
    2baa:	a1 1d       	adc	r26, r1
    2bac:	b1 1d       	adc	r27, r1
    2bae:	c8 0e       	add	r12, r24
    2bb0:	d9 1e       	adc	r13, r25
    2bb2:	ea 1e       	adc	r14, r26
    2bb4:	fb 1e       	adc	r15, r27
    2bb6:	c7 01       	movw	r24, r14
    2bb8:	b6 01       	movw	r22, r12
    2bba:	df 91       	pop	r29
    2bbc:	cf 91       	pop	r28
    2bbe:	ff 90       	pop	r15
    2bc0:	ef 90       	pop	r14
    2bc2:	df 90       	pop	r13
    2bc4:	cf 90       	pop	r12
    2bc6:	bf 90       	pop	r11
    2bc8:	af 90       	pop	r10
    2bca:	9f 90       	pop	r9
    2bcc:	8f 90       	pop	r8
    2bce:	08 95       	ret

00002bd0 <MQTTSerialize_connect>:
    2bd0:	4f 92       	push	r4
    2bd2:	5f 92       	push	r5
    2bd4:	6f 92       	push	r6
    2bd6:	7f 92       	push	r7
    2bd8:	af 92       	push	r10
    2bda:	bf 92       	push	r11
    2bdc:	df 92       	push	r13
    2bde:	ef 92       	push	r14
    2be0:	ff 92       	push	r15
    2be2:	0f 93       	push	r16
    2be4:	1f 93       	push	r17
    2be6:	cf 93       	push	r28
    2be8:	df 93       	push	r29
    2bea:	00 d0       	rcall	.+0      	; 0x2bec <MQTTSerialize_connect+0x1c>
    2bec:	00 d0       	rcall	.+0      	; 0x2bee <MQTTSerialize_connect+0x1e>
    2bee:	cd b7       	in	r28, 0x3d	; 61
    2bf0:	de b7       	in	r29, 0x3e	; 62
    2bf2:	5c 01       	movw	r10, r24
    2bf4:	2a 01       	movw	r4, r20
    2bf6:	3b 01       	movw	r6, r22
    2bf8:	79 01       	movw	r14, r18
    2bfa:	9a 83       	std	Y+2, r25	; 0x02
    2bfc:	89 83       	std	Y+1, r24	; 0x01
    2bfe:	c9 01       	movw	r24, r18
    2c00:	48 df       	rcall	.-368    	; 0x2a92 <MQTTSerialize_connectLength>
    2c02:	6b 83       	std	Y+3, r22	; 0x03
    2c04:	7c 83       	std	Y+4, r23	; 0x04
    2c06:	8d 83       	std	Y+5, r24	; 0x05
    2c08:	9e 83       	std	Y+6, r25	; 0x06
    2c0a:	33 d3       	rcall	.+1638   	; 0x3272 <MQTTPacket_len>
    2c0c:	46 16       	cp	r4, r22
    2c0e:	57 06       	cpc	r5, r23
    2c10:	68 06       	cpc	r6, r24
    2c12:	79 06       	cpc	r7, r25
    2c14:	0c f4       	brge	.+2      	; 0x2c18 <MQTTSerialize_connect+0x48>
    2c16:	b2 c0       	rjmp	.+356    	; 0x2d7c <MQTTSerialize_connect+0x1ac>
    2c18:	60 e1       	ldi	r22, 0x10	; 16
    2c1a:	ce 01       	movw	r24, r28
    2c1c:	01 96       	adiw	r24, 0x01	; 1
    2c1e:	7a d3       	rcall	.+1780   	; 0x3314 <writeChar>
    2c20:	4b 81       	ldd	r20, Y+3	; 0x03
    2c22:	5c 81       	ldd	r21, Y+4	; 0x04
    2c24:	6d 81       	ldd	r22, Y+5	; 0x05
    2c26:	7e 81       	ldd	r23, Y+6	; 0x06
    2c28:	89 81       	ldd	r24, Y+1	; 0x01
    2c2a:	9a 81       	ldd	r25, Y+2	; 0x02
    2c2c:	44 d2       	rcall	.+1160   	; 0x30b6 <MQTTPacket_encode>
    2c2e:	29 81       	ldd	r18, Y+1	; 0x01
    2c30:	3a 81       	ldd	r19, Y+2	; 0x02
    2c32:	62 0f       	add	r22, r18
    2c34:	73 1f       	adc	r23, r19
    2c36:	7a 83       	std	Y+2, r23	; 0x02
    2c38:	69 83       	std	Y+1, r22	; 0x01
    2c3a:	f7 01       	movw	r30, r14
    2c3c:	86 81       	ldd	r24, Z+6	; 0x06
    2c3e:	84 30       	cpi	r24, 0x04	; 4
    2c40:	51 f4       	brne	.+20     	; 0x2c56 <MQTTSerialize_connect+0x86>
    2c42:	6c e0       	ldi	r22, 0x0C	; 12
    2c44:	73 e0       	ldi	r23, 0x03	; 3
    2c46:	ce 01       	movw	r24, r28
    2c48:	01 96       	adiw	r24, 0x01	; 1
    2c4a:	9c d3       	rcall	.+1848   	; 0x3384 <writeCString>
    2c4c:	64 e0       	ldi	r22, 0x04	; 4
    2c4e:	ce 01       	movw	r24, r28
    2c50:	01 96       	adiw	r24, 0x01	; 1
    2c52:	60 d3       	rcall	.+1728   	; 0x3314 <writeChar>
    2c54:	09 c0       	rjmp	.+18     	; 0x2c68 <MQTTSerialize_connect+0x98>
    2c56:	61 e1       	ldi	r22, 0x11	; 17
    2c58:	73 e0       	ldi	r23, 0x03	; 3
    2c5a:	ce 01       	movw	r24, r28
    2c5c:	01 96       	adiw	r24, 0x01	; 1
    2c5e:	92 d3       	rcall	.+1828   	; 0x3384 <writeCString>
    2c60:	63 e0       	ldi	r22, 0x03	; 3
    2c62:	ce 01       	movw	r24, r28
    2c64:	01 96       	adiw	r24, 0x01	; 1
    2c66:	56 d3       	rcall	.+1708   	; 0x3314 <writeChar>
    2c68:	d1 2c       	mov	r13, r1
    2c6a:	f7 01       	movw	r30, r14
    2c6c:	81 89       	ldd	r24, Z+17	; 0x11
    2c6e:	80 fb       	bst	r24, 0
    2c70:	d1 f8       	bld	r13, 1
    2c72:	92 89       	ldd	r25, Z+18	; 0x12
    2c74:	81 e0       	ldi	r24, 0x01	; 1
    2c76:	91 11       	cpse	r25, r1
    2c78:	01 c0       	rjmp	.+2      	; 0x2c7c <MQTTSerialize_connect+0xac>
    2c7a:	80 e0       	ldi	r24, 0x00	; 0
    2c7c:	80 fb       	bst	r24, 0
    2c7e:	d2 f8       	bld	r13, 2
    2c80:	d2 fe       	sbrs	r13, 2
    2c82:	0d c0       	rjmp	.+26     	; 0x2c9e <MQTTSerialize_connect+0xce>
    2c84:	f7 01       	movw	r30, r14
    2c86:	82 a5       	ldd	r24, Z+42	; 0x2a
    2c88:	83 70       	andi	r24, 0x03	; 3
    2c8a:	88 0f       	add	r24, r24
    2c8c:	88 0f       	add	r24, r24
    2c8e:	88 0f       	add	r24, r24
    2c90:	9d 2d       	mov	r25, r13
    2c92:	97 7e       	andi	r25, 0xE7	; 231
    2c94:	d9 2e       	mov	r13, r25
    2c96:	d8 2a       	or	r13, r24
    2c98:	81 a5       	ldd	r24, Z+41	; 0x29
    2c9a:	80 fb       	bst	r24, 0
    2c9c:	d5 f8       	bld	r13, 5
    2c9e:	f7 01       	movw	r30, r14
    2ca0:	83 a5       	ldd	r24, Z+43	; 0x2b
    2ca2:	94 a5       	ldd	r25, Z+44	; 0x2c
    2ca4:	89 2b       	or	r24, r25
    2ca6:	21 f4       	brne	.+8      	; 0x2cb0 <MQTTSerialize_connect+0xe0>
    2ca8:	81 a9       	ldd	r24, Z+49	; 0x31
    2caa:	92 a9       	ldd	r25, Z+50	; 0x32
    2cac:	89 2b       	or	r24, r25
    2cae:	11 f0       	breq	.+4      	; 0x2cb4 <MQTTSerialize_connect+0xe4>
    2cb0:	68 94       	set
    2cb2:	d7 f8       	bld	r13, 7
    2cb4:	f7 01       	movw	r30, r14
    2cb6:	83 a9       	ldd	r24, Z+51	; 0x33
    2cb8:	94 a9       	ldd	r25, Z+52	; 0x34
    2cba:	89 2b       	or	r24, r25
    2cbc:	21 f4       	brne	.+8      	; 0x2cc6 <MQTTSerialize_connect+0xf6>
    2cbe:	81 ad       	ldd	r24, Z+57	; 0x39
    2cc0:	92 ad       	ldd	r25, Z+58	; 0x3a
    2cc2:	89 2b       	or	r24, r25
    2cc4:	11 f0       	breq	.+4      	; 0x2cca <MQTTSerialize_connect+0xfa>
    2cc6:	68 94       	set
    2cc8:	d6 f8       	bld	r13, 6
    2cca:	6d 2d       	mov	r22, r13
    2ccc:	ce 01       	movw	r24, r28
    2cce:	01 96       	adiw	r24, 0x01	; 1
    2cd0:	21 d3       	rcall	.+1602   	; 0x3314 <writeChar>
    2cd2:	f7 01       	movw	r30, r14
    2cd4:	47 85       	ldd	r20, Z+15	; 0x0f
    2cd6:	50 89       	ldd	r21, Z+16	; 0x10
    2cd8:	60 e0       	ldi	r22, 0x00	; 0
    2cda:	70 e0       	ldi	r23, 0x00	; 0
    2cdc:	ce 01       	movw	r24, r28
    2cde:	01 96       	adiw	r24, 0x01	; 1
    2ce0:	23 d3       	rcall	.+1606   	; 0x3328 <writeInt>
    2ce2:	f7 01       	movw	r30, r14
    2ce4:	07 81       	ldd	r16, Z+7	; 0x07
    2ce6:	10 85       	ldd	r17, Z+8	; 0x08
    2ce8:	21 85       	ldd	r18, Z+9	; 0x09
    2cea:	32 85       	ldd	r19, Z+10	; 0x0a
    2cec:	43 85       	ldd	r20, Z+11	; 0x0b
    2cee:	54 85       	ldd	r21, Z+12	; 0x0c
    2cf0:	65 85       	ldd	r22, Z+13	; 0x0d
    2cf2:	76 85       	ldd	r23, Z+14	; 0x0e
    2cf4:	ce 01       	movw	r24, r28
    2cf6:	01 96       	adiw	r24, 0x01	; 1
    2cf8:	6d d3       	rcall	.+1754   	; 0x33d4 <writeMQTTString>
    2cfa:	f7 01       	movw	r30, r14
    2cfc:	82 89       	ldd	r24, Z+18	; 0x12
    2cfe:	88 23       	and	r24, r24
    2d00:	b9 f0       	breq	.+46     	; 0x2d30 <MQTTSerialize_connect+0x160>
    2d02:	01 8d       	ldd	r16, Z+25	; 0x19
    2d04:	12 8d       	ldd	r17, Z+26	; 0x1a
    2d06:	23 8d       	ldd	r18, Z+27	; 0x1b
    2d08:	34 8d       	ldd	r19, Z+28	; 0x1c
    2d0a:	45 8d       	ldd	r20, Z+29	; 0x1d
    2d0c:	56 8d       	ldd	r21, Z+30	; 0x1e
    2d0e:	67 8d       	ldd	r22, Z+31	; 0x1f
    2d10:	70 a1       	ldd	r23, Z+32	; 0x20
    2d12:	ce 01       	movw	r24, r28
    2d14:	01 96       	adiw	r24, 0x01	; 1
    2d16:	5e d3       	rcall	.+1724   	; 0x33d4 <writeMQTTString>
    2d18:	f7 01       	movw	r30, r14
    2d1a:	01 a1       	ldd	r16, Z+33	; 0x21
    2d1c:	12 a1       	ldd	r17, Z+34	; 0x22
    2d1e:	23 a1       	ldd	r18, Z+35	; 0x23
    2d20:	34 a1       	ldd	r19, Z+36	; 0x24
    2d22:	45 a1       	ldd	r20, Z+37	; 0x25
    2d24:	56 a1       	ldd	r21, Z+38	; 0x26
    2d26:	67 a1       	ldd	r22, Z+39	; 0x27
    2d28:	70 a5       	ldd	r23, Z+40	; 0x28
    2d2a:	ce 01       	movw	r24, r28
    2d2c:	01 96       	adiw	r24, 0x01	; 1
    2d2e:	52 d3       	rcall	.+1700   	; 0x33d4 <writeMQTTString>
    2d30:	7d 2c       	mov	r7, r13
    2d32:	dd 20       	and	r13, r13
    2d34:	64 f4       	brge	.+24     	; 0x2d4e <MQTTSerialize_connect+0x17e>
    2d36:	f7 01       	movw	r30, r14
    2d38:	03 a5       	ldd	r16, Z+43	; 0x2b
    2d3a:	14 a5       	ldd	r17, Z+44	; 0x2c
    2d3c:	25 a5       	ldd	r18, Z+45	; 0x2d
    2d3e:	36 a5       	ldd	r19, Z+46	; 0x2e
    2d40:	47 a5       	ldd	r20, Z+47	; 0x2f
    2d42:	50 a9       	ldd	r21, Z+48	; 0x30
    2d44:	61 a9       	ldd	r22, Z+49	; 0x31
    2d46:	72 a9       	ldd	r23, Z+50	; 0x32
    2d48:	ce 01       	movw	r24, r28
    2d4a:	01 96       	adiw	r24, 0x01	; 1
    2d4c:	43 d3       	rcall	.+1670   	; 0x33d4 <writeMQTTString>
    2d4e:	76 fe       	sbrs	r7, 6
    2d50:	0c c0       	rjmp	.+24     	; 0x2d6a <MQTTSerialize_connect+0x19a>
    2d52:	f7 01       	movw	r30, r14
    2d54:	03 a9       	ldd	r16, Z+51	; 0x33
    2d56:	14 a9       	ldd	r17, Z+52	; 0x34
    2d58:	25 a9       	ldd	r18, Z+53	; 0x35
    2d5a:	36 a9       	ldd	r19, Z+54	; 0x36
    2d5c:	47 a9       	ldd	r20, Z+55	; 0x37
    2d5e:	50 ad       	ldd	r21, Z+56	; 0x38
    2d60:	61 ad       	ldd	r22, Z+57	; 0x39
    2d62:	72 ad       	ldd	r23, Z+58	; 0x3a
    2d64:	ce 01       	movw	r24, r28
    2d66:	01 96       	adiw	r24, 0x01	; 1
    2d68:	35 d3       	rcall	.+1642   	; 0x33d4 <writeMQTTString>
    2d6a:	69 81       	ldd	r22, Y+1	; 0x01
    2d6c:	7a 81       	ldd	r23, Y+2	; 0x02
    2d6e:	6a 19       	sub	r22, r10
    2d70:	7b 09       	sbc	r23, r11
    2d72:	07 2e       	mov	r0, r23
    2d74:	00 0c       	add	r0, r0
    2d76:	88 0b       	sbc	r24, r24
    2d78:	99 0b       	sbc	r25, r25
    2d7a:	04 c0       	rjmp	.+8      	; 0x2d84 <MQTTSerialize_connect+0x1b4>
    2d7c:	6e ef       	ldi	r22, 0xFE	; 254
    2d7e:	7f ef       	ldi	r23, 0xFF	; 255
    2d80:	8f ef       	ldi	r24, 0xFF	; 255
    2d82:	9f ef       	ldi	r25, 0xFF	; 255
    2d84:	26 96       	adiw	r28, 0x06	; 6
    2d86:	0f b6       	in	r0, 0x3f	; 63
    2d88:	f8 94       	cli
    2d8a:	de bf       	out	0x3e, r29	; 62
    2d8c:	0f be       	out	0x3f, r0	; 63
    2d8e:	cd bf       	out	0x3d, r28	; 61
    2d90:	df 91       	pop	r29
    2d92:	cf 91       	pop	r28
    2d94:	1f 91       	pop	r17
    2d96:	0f 91       	pop	r16
    2d98:	ff 90       	pop	r15
    2d9a:	ef 90       	pop	r14
    2d9c:	df 90       	pop	r13
    2d9e:	bf 90       	pop	r11
    2da0:	af 90       	pop	r10
    2da2:	7f 90       	pop	r7
    2da4:	6f 90       	pop	r6
    2da6:	5f 90       	pop	r5
    2da8:	4f 90       	pop	r4
    2daa:	08 95       	ret

00002dac <MQTTDeserialize_connack>:
    2dac:	ef 92       	push	r14
    2dae:	ff 92       	push	r15
    2db0:	0f 93       	push	r16
    2db2:	1f 93       	push	r17
    2db4:	cf 93       	push	r28
    2db6:	df 93       	push	r29
    2db8:	00 d0       	rcall	.+0      	; 0x2dba <MQTTDeserialize_connack+0xe>
    2dba:	00 d0       	rcall	.+0      	; 0x2dbc <MQTTDeserialize_connack+0x10>
    2dbc:	cd b7       	in	r28, 0x3d	; 61
    2dbe:	de b7       	in	r29, 0x3e	; 62
    2dc0:	7c 01       	movw	r14, r24
    2dc2:	8b 01       	movw	r16, r22
    2dc4:	5a 83       	std	Y+2, r21	; 0x02
    2dc6:	49 83       	std	Y+1, r20	; 0x01
    2dc8:	ce 01       	movw	r24, r28
    2dca:	01 96       	adiw	r24, 0x01	; 1
    2dcc:	9b d2       	rcall	.+1334   	; 0x3304 <readChar>
    2dce:	80 7f       	andi	r24, 0xF0	; 240
    2dd0:	80 32       	cpi	r24, 0x20	; 32
    2dd2:	19 f5       	brne	.+70     	; 0x2e1a <MQTTDeserialize_connack+0x6e>
    2dd4:	be 01       	movw	r22, r28
    2dd6:	6d 5f       	subi	r22, 0xFD	; 253
    2dd8:	7f 4f       	sbci	r23, 0xFF	; 255
    2dda:	89 81       	ldd	r24, Y+1	; 0x01
    2ddc:	9a 81       	ldd	r25, Y+2	; 0x02
    2dde:	77 d2       	rcall	.+1262   	; 0x32ce <MQTTPacket_decodeBuf>
    2de0:	29 81       	ldd	r18, Y+1	; 0x01
    2de2:	3a 81       	ldd	r19, Y+2	; 0x02
    2de4:	26 0f       	add	r18, r22
    2de6:	37 1f       	adc	r19, r23
    2de8:	3a 83       	std	Y+2, r19	; 0x02
    2dea:	29 83       	std	Y+1, r18	; 0x01
    2dec:	2b 81       	ldd	r18, Y+3	; 0x03
    2dee:	3c 81       	ldd	r19, Y+4	; 0x04
    2df0:	22 30       	cpi	r18, 0x02	; 2
    2df2:	31 05       	cpc	r19, r1
    2df4:	ac f0       	brlt	.+42     	; 0x2e20 <MQTTDeserialize_connack+0x74>
    2df6:	ce 01       	movw	r24, r28
    2df8:	01 96       	adiw	r24, 0x01	; 1
    2dfa:	84 d2       	rcall	.+1288   	; 0x3304 <readChar>
    2dfc:	87 fb       	bst	r24, 7
    2dfe:	88 27       	eor	r24, r24
    2e00:	80 f9       	bld	r24, 0
    2e02:	f7 01       	movw	r30, r14
    2e04:	80 83       	st	Z, r24
    2e06:	ce 01       	movw	r24, r28
    2e08:	01 96       	adiw	r24, 0x01	; 1
    2e0a:	7c d2       	rcall	.+1272   	; 0x3304 <readChar>
    2e0c:	f8 01       	movw	r30, r16
    2e0e:	80 83       	st	Z, r24
    2e10:	61 e0       	ldi	r22, 0x01	; 1
    2e12:	70 e0       	ldi	r23, 0x00	; 0
    2e14:	80 e0       	ldi	r24, 0x00	; 0
    2e16:	90 e0       	ldi	r25, 0x00	; 0
    2e18:	03 c0       	rjmp	.+6      	; 0x2e20 <MQTTDeserialize_connack+0x74>
    2e1a:	60 e0       	ldi	r22, 0x00	; 0
    2e1c:	70 e0       	ldi	r23, 0x00	; 0
    2e1e:	cb 01       	movw	r24, r22
    2e20:	26 96       	adiw	r28, 0x06	; 6
    2e22:	0f b6       	in	r0, 0x3f	; 63
    2e24:	f8 94       	cli
    2e26:	de bf       	out	0x3e, r29	; 62
    2e28:	0f be       	out	0x3f, r0	; 63
    2e2a:	cd bf       	out	0x3d, r28	; 61
    2e2c:	df 91       	pop	r29
    2e2e:	cf 91       	pop	r28
    2e30:	1f 91       	pop	r17
    2e32:	0f 91       	pop	r16
    2e34:	ff 90       	pop	r15
    2e36:	ef 90       	pop	r14
    2e38:	08 95       	ret

00002e3a <MQTTSerialize_zero>:
    2e3a:	0f 93       	push	r16
    2e3c:	1f 93       	push	r17
    2e3e:	cf 93       	push	r28
    2e40:	df 93       	push	r29
    2e42:	1f 92       	push	r1
    2e44:	1f 92       	push	r1
    2e46:	cd b7       	in	r28, 0x3d	; 61
    2e48:	de b7       	in	r29, 0x3e	; 62
    2e4a:	9a 83       	std	Y+2, r25	; 0x02
    2e4c:	89 83       	std	Y+1, r24	; 0x01
    2e4e:	42 30       	cpi	r20, 0x02	; 2
    2e50:	51 05       	cpc	r21, r1
    2e52:	61 05       	cpc	r22, r1
    2e54:	71 05       	cpc	r23, r1
    2e56:	c4 f0       	brlt	.+48     	; 0x2e88 <MQTTSerialize_zero+0x4e>
    2e58:	8c 01       	movw	r16, r24
    2e5a:	62 2f       	mov	r22, r18
    2e5c:	62 95       	swap	r22
    2e5e:	60 7f       	andi	r22, 0xF0	; 240
    2e60:	ce 01       	movw	r24, r28
    2e62:	01 96       	adiw	r24, 0x01	; 1
    2e64:	57 d2       	rcall	.+1198   	; 0x3314 <writeChar>
    2e66:	40 e0       	ldi	r20, 0x00	; 0
    2e68:	50 e0       	ldi	r21, 0x00	; 0
    2e6a:	ba 01       	movw	r22, r20
    2e6c:	89 81       	ldd	r24, Y+1	; 0x01
    2e6e:	9a 81       	ldd	r25, Y+2	; 0x02
    2e70:	22 d1       	rcall	.+580    	; 0x30b6 <MQTTPacket_encode>
    2e72:	29 81       	ldd	r18, Y+1	; 0x01
    2e74:	3a 81       	ldd	r19, Y+2	; 0x02
    2e76:	62 0f       	add	r22, r18
    2e78:	73 1f       	adc	r23, r19
    2e7a:	60 1b       	sub	r22, r16
    2e7c:	71 0b       	sbc	r23, r17
    2e7e:	07 2e       	mov	r0, r23
    2e80:	00 0c       	add	r0, r0
    2e82:	88 0b       	sbc	r24, r24
    2e84:	99 0b       	sbc	r25, r25
    2e86:	04 c0       	rjmp	.+8      	; 0x2e90 <MQTTSerialize_zero+0x56>
    2e88:	6e ef       	ldi	r22, 0xFE	; 254
    2e8a:	7f ef       	ldi	r23, 0xFF	; 255
    2e8c:	8f ef       	ldi	r24, 0xFF	; 255
    2e8e:	9f ef       	ldi	r25, 0xFF	; 255
    2e90:	0f 90       	pop	r0
    2e92:	0f 90       	pop	r0
    2e94:	df 91       	pop	r29
    2e96:	cf 91       	pop	r28
    2e98:	1f 91       	pop	r17
    2e9a:	0f 91       	pop	r16
    2e9c:	08 95       	ret

00002e9e <MQTTSerialize_pingreq>:
    2e9e:	2c e0       	ldi	r18, 0x0C	; 12
    2ea0:	cc cf       	rjmp	.-104    	; 0x2e3a <MQTTSerialize_zero>
    2ea2:	08 95       	ret

00002ea4 <MQTTDeserialize_publish>:
    2ea4:	2f 92       	push	r2
    2ea6:	3f 92       	push	r3
    2ea8:	4f 92       	push	r4
    2eaa:	5f 92       	push	r5
    2eac:	6f 92       	push	r6
    2eae:	7f 92       	push	r7
    2eb0:	8f 92       	push	r8
    2eb2:	9f 92       	push	r9
    2eb4:	af 92       	push	r10
    2eb6:	bf 92       	push	r11
    2eb8:	cf 92       	push	r12
    2eba:	df 92       	push	r13
    2ebc:	ef 92       	push	r14
    2ebe:	ff 92       	push	r15
    2ec0:	0f 93       	push	r16
    2ec2:	1f 93       	push	r17
    2ec4:	cf 93       	push	r28
    2ec6:	df 93       	push	r29
    2ec8:	cd b7       	in	r28, 0x3d	; 61
    2eca:	de b7       	in	r29, 0x3e	; 62
    2ecc:	28 97       	sbiw	r28, 0x08	; 8
    2ece:	0f b6       	in	r0, 0x3f	; 63
    2ed0:	f8 94       	cli
    2ed2:	de bf       	out	0x3e, r29	; 62
    2ed4:	0f be       	out	0x3f, r0	; 63
    2ed6:	cd bf       	out	0x3d, r28	; 61
    2ed8:	3c 01       	movw	r6, r24
    2eda:	1b 01       	movw	r2, r22
    2edc:	2a 01       	movw	r4, r20
    2ede:	38 87       	std	Y+8, r19	; 0x08
    2ee0:	2f 83       	std	Y+7, r18	; 0x07
    2ee2:	ba 82       	std	Y+2, r11	; 0x02
    2ee4:	a9 82       	std	Y+1, r10	; 0x01
    2ee6:	1b 82       	std	Y+3, r1	; 0x03
    2ee8:	1c 82       	std	Y+4, r1	; 0x04
    2eea:	1d 82       	std	Y+5, r1	; 0x05
    2eec:	1e 82       	std	Y+6, r1	; 0x06
    2eee:	ce 01       	movw	r24, r28
    2ef0:	01 96       	adiw	r24, 0x01	; 1
    2ef2:	08 d2       	rcall	.+1040   	; 0x3304 <readChar>
    2ef4:	98 2f       	mov	r25, r24
    2ef6:	90 7f       	andi	r25, 0xF0	; 240
    2ef8:	90 33       	cpi	r25, 0x30	; 48
    2efa:	09 f0       	breq	.+2      	; 0x2efe <MQTTDeserialize_publish+0x5a>
    2efc:	52 c0       	rjmp	.+164    	; 0x2fa2 <MQTTDeserialize_publish+0xfe>
    2efe:	83 fb       	bst	r24, 3
    2f00:	99 27       	eor	r25, r25
    2f02:	90 f9       	bld	r25, 0
    2f04:	f3 01       	movw	r30, r6
    2f06:	90 83       	st	Z, r25
    2f08:	98 2f       	mov	r25, r24
    2f0a:	96 95       	lsr	r25
    2f0c:	93 70       	andi	r25, 0x03	; 3
    2f0e:	f1 01       	movw	r30, r2
    2f10:	90 83       	st	Z, r25
    2f12:	81 70       	andi	r24, 0x01	; 1
    2f14:	f2 01       	movw	r30, r4
    2f16:	80 83       	st	Z, r24
    2f18:	be 01       	movw	r22, r28
    2f1a:	6d 5f       	subi	r22, 0xFD	; 253
    2f1c:	7f 4f       	sbci	r23, 0xFF	; 255
    2f1e:	89 81       	ldd	r24, Y+1	; 0x01
    2f20:	9a 81       	ldd	r25, Y+2	; 0x02
    2f22:	d5 d1       	rcall	.+938    	; 0x32ce <MQTTPacket_decodeBuf>
    2f24:	4b 01       	movw	r8, r22
    2f26:	5c 01       	movw	r10, r24
    2f28:	69 80       	ldd	r6, Y+1	; 0x01
    2f2a:	7a 80       	ldd	r7, Y+2	; 0x02
    2f2c:	66 0e       	add	r6, r22
    2f2e:	77 1e       	adc	r7, r23
    2f30:	7a 82       	std	Y+2, r7	; 0x02
    2f32:	69 82       	std	Y+1, r6	; 0x01
    2f34:	8b 81       	ldd	r24, Y+3	; 0x03
    2f36:	9c 81       	ldd	r25, Y+4	; 0x04
    2f38:	68 0e       	add	r6, r24
    2f3a:	79 1e       	adc	r7, r25
    2f3c:	a3 01       	movw	r20, r6
    2f3e:	be 01       	movw	r22, r28
    2f40:	6f 5f       	subi	r22, 0xFF	; 255
    2f42:	7f 4f       	sbci	r23, 0xFF	; 255
    2f44:	c8 01       	movw	r24, r16
    2f46:	99 d2       	rcall	.+1330   	; 0x347a <readMQTTLenString>
    2f48:	67 2b       	or	r22, r23
    2f4a:	68 2b       	or	r22, r24
    2f4c:	69 2b       	or	r22, r25
    2f4e:	61 f1       	breq	.+88     	; 0x2fa8 <MQTTDeserialize_publish+0x104>
    2f50:	89 81       	ldd	r24, Y+1	; 0x01
    2f52:	9a 81       	ldd	r25, Y+2	; 0x02
    2f54:	93 01       	movw	r18, r6
    2f56:	28 1b       	sub	r18, r24
    2f58:	39 0b       	sbc	r19, r25
    2f5a:	c9 01       	movw	r24, r18
    2f5c:	99 23       	and	r25, r25
    2f5e:	24 f1       	brlt	.+72     	; 0x2fa8 <MQTTDeserialize_publish+0x104>
    2f60:	f1 01       	movw	r30, r2
    2f62:	80 81       	ld	r24, Z
    2f64:	88 23       	and	r24, r24
    2f66:	39 f0       	breq	.+14     	; 0x2f76 <MQTTDeserialize_publish+0xd2>
    2f68:	ce 01       	movw	r24, r28
    2f6a:	01 96       	adiw	r24, 0x01	; 1
    2f6c:	b8 d1       	rcall	.+880    	; 0x32de <readInt>
    2f6e:	ef 81       	ldd	r30, Y+7	; 0x07
    2f70:	f8 85       	ldd	r31, Y+8	; 0x08
    2f72:	71 83       	std	Z+1, r23	; 0x01
    2f74:	60 83       	st	Z, r22
    2f76:	29 81       	ldd	r18, Y+1	; 0x01
    2f78:	3a 81       	ldd	r19, Y+2	; 0x02
    2f7a:	c3 01       	movw	r24, r6
    2f7c:	82 1b       	sub	r24, r18
    2f7e:	93 0b       	sbc	r25, r19
    2f80:	09 2e       	mov	r0, r25
    2f82:	00 0c       	add	r0, r0
    2f84:	aa 0b       	sbc	r26, r26
    2f86:	bb 0b       	sbc	r27, r27
    2f88:	f6 01       	movw	r30, r12
    2f8a:	80 83       	st	Z, r24
    2f8c:	91 83       	std	Z+1, r25	; 0x01
    2f8e:	a2 83       	std	Z+2, r26	; 0x02
    2f90:	b3 83       	std	Z+3, r27	; 0x03
    2f92:	f7 01       	movw	r30, r14
    2f94:	31 83       	std	Z+1, r19	; 0x01
    2f96:	20 83       	st	Z, r18
    2f98:	81 2c       	mov	r8, r1
    2f9a:	91 2c       	mov	r9, r1
    2f9c:	54 01       	movw	r10, r8
    2f9e:	83 94       	inc	r8
    2fa0:	03 c0       	rjmp	.+6      	; 0x2fa8 <MQTTDeserialize_publish+0x104>
    2fa2:	81 2c       	mov	r8, r1
    2fa4:	91 2c       	mov	r9, r1
    2fa6:	54 01       	movw	r10, r8
    2fa8:	c5 01       	movw	r24, r10
    2faa:	b4 01       	movw	r22, r8
    2fac:	28 96       	adiw	r28, 0x08	; 8
    2fae:	0f b6       	in	r0, 0x3f	; 63
    2fb0:	f8 94       	cli
    2fb2:	de bf       	out	0x3e, r29	; 62
    2fb4:	0f be       	out	0x3f, r0	; 63
    2fb6:	cd bf       	out	0x3d, r28	; 61
    2fb8:	df 91       	pop	r29
    2fba:	cf 91       	pop	r28
    2fbc:	1f 91       	pop	r17
    2fbe:	0f 91       	pop	r16
    2fc0:	ff 90       	pop	r15
    2fc2:	ef 90       	pop	r14
    2fc4:	df 90       	pop	r13
    2fc6:	cf 90       	pop	r12
    2fc8:	bf 90       	pop	r11
    2fca:	af 90       	pop	r10
    2fcc:	9f 90       	pop	r9
    2fce:	8f 90       	pop	r8
    2fd0:	7f 90       	pop	r7
    2fd2:	6f 90       	pop	r6
    2fd4:	5f 90       	pop	r5
    2fd6:	4f 90       	pop	r4
    2fd8:	3f 90       	pop	r3
    2fda:	2f 90       	pop	r2
    2fdc:	08 95       	ret

00002fde <MQTTDeserialize_ack>:
    2fde:	cf 92       	push	r12
    2fe0:	df 92       	push	r13
    2fe2:	ef 92       	push	r14
    2fe4:	ff 92       	push	r15
    2fe6:	0f 93       	push	r16
    2fe8:	1f 93       	push	r17
    2fea:	cf 93       	push	r28
    2fec:	df 93       	push	r29
    2fee:	00 d0       	rcall	.+0      	; 0x2ff0 <MQTTDeserialize_ack+0x12>
    2ff0:	00 d0       	rcall	.+0      	; 0x2ff2 <MQTTDeserialize_ack+0x14>
    2ff2:	cd b7       	in	r28, 0x3d	; 61
    2ff4:	de b7       	in	r29, 0x3e	; 62
    2ff6:	7c 01       	movw	r14, r24
    2ff8:	6b 01       	movw	r12, r22
    2ffa:	8a 01       	movw	r16, r20
    2ffc:	3a 83       	std	Y+2, r19	; 0x02
    2ffe:	29 83       	std	Y+1, r18	; 0x01
    3000:	ce 01       	movw	r24, r28
    3002:	01 96       	adiw	r24, 0x01	; 1
    3004:	7f d1       	rcall	.+766    	; 0x3304 <readChar>
    3006:	83 fb       	bst	r24, 3
    3008:	99 27       	eor	r25, r25
    300a:	90 f9       	bld	r25, 0
    300c:	f6 01       	movw	r30, r12
    300e:	90 83       	st	Z, r25
    3010:	82 95       	swap	r24
    3012:	8f 70       	andi	r24, 0x0F	; 15
    3014:	f7 01       	movw	r30, r14
    3016:	80 83       	st	Z, r24
    3018:	be 01       	movw	r22, r28
    301a:	6d 5f       	subi	r22, 0xFD	; 253
    301c:	7f 4f       	sbci	r23, 0xFF	; 255
    301e:	89 81       	ldd	r24, Y+1	; 0x01
    3020:	9a 81       	ldd	r25, Y+2	; 0x02
    3022:	55 d1       	rcall	.+682    	; 0x32ce <MQTTPacket_decodeBuf>
    3024:	29 81       	ldd	r18, Y+1	; 0x01
    3026:	3a 81       	ldd	r19, Y+2	; 0x02
    3028:	26 0f       	add	r18, r22
    302a:	37 1f       	adc	r19, r23
    302c:	3a 83       	std	Y+2, r19	; 0x02
    302e:	29 83       	std	Y+1, r18	; 0x01
    3030:	2b 81       	ldd	r18, Y+3	; 0x03
    3032:	3c 81       	ldd	r19, Y+4	; 0x04
    3034:	22 30       	cpi	r18, 0x02	; 2
    3036:	31 05       	cpc	r19, r1
    3038:	54 f0       	brlt	.+20     	; 0x304e <MQTTDeserialize_ack+0x70>
    303a:	ce 01       	movw	r24, r28
    303c:	01 96       	adiw	r24, 0x01	; 1
    303e:	4f d1       	rcall	.+670    	; 0x32de <readInt>
    3040:	f8 01       	movw	r30, r16
    3042:	71 83       	std	Z+1, r23	; 0x01
    3044:	60 83       	st	Z, r22
    3046:	61 e0       	ldi	r22, 0x01	; 1
    3048:	70 e0       	ldi	r23, 0x00	; 0
    304a:	80 e0       	ldi	r24, 0x00	; 0
    304c:	90 e0       	ldi	r25, 0x00	; 0
    304e:	26 96       	adiw	r28, 0x06	; 6
    3050:	0f b6       	in	r0, 0x3f	; 63
    3052:	f8 94       	cli
    3054:	de bf       	out	0x3e, r29	; 62
    3056:	0f be       	out	0x3f, r0	; 63
    3058:	cd bf       	out	0x3d, r28	; 61
    305a:	df 91       	pop	r29
    305c:	cf 91       	pop	r28
    305e:	1f 91       	pop	r17
    3060:	0f 91       	pop	r16
    3062:	ff 90       	pop	r15
    3064:	ef 90       	pop	r14
    3066:	df 90       	pop	r13
    3068:	cf 90       	pop	r12
    306a:	08 95       	ret

0000306c <bufchar>:
    306c:	0f 93       	push	r16
    306e:	1f 93       	push	r17
    3070:	cf 93       	push	r28
    3072:	df 93       	push	r29
    3074:	ec 01       	movw	r28, r24
    3076:	00 e0       	ldi	r16, 0x00	; 0
    3078:	10 e0       	ldi	r17, 0x00	; 0
    307a:	98 01       	movw	r18, r16
    307c:	10 c0       	rjmp	.+32     	; 0x309e <bufchar+0x32>
    307e:	e0 91 0d 04 	lds	r30, 0x040D	; 0x80040d <bufptr>
    3082:	f0 91 0e 04 	lds	r31, 0x040E	; 0x80040e <bufptr+0x1>
    3086:	df 01       	movw	r26, r30
    3088:	11 96       	adiw	r26, 0x01	; 1
    308a:	b0 93 0e 04 	sts	0x040E, r27	; 0x80040e <bufptr+0x1>
    308e:	a0 93 0d 04 	sts	0x040D, r26	; 0x80040d <bufptr>
    3092:	90 81       	ld	r25, Z
    3094:	98 83       	st	Y, r25
    3096:	0f 5f       	subi	r16, 0xFF	; 255
    3098:	1f 4f       	sbci	r17, 0xFF	; 255
    309a:	2f 4f       	sbci	r18, 0xFF	; 255
    309c:	3f 4f       	sbci	r19, 0xFF	; 255
    309e:	04 17       	cp	r16, r20
    30a0:	15 07       	cpc	r17, r21
    30a2:	26 07       	cpc	r18, r22
    30a4:	37 07       	cpc	r19, r23
    30a6:	5c f3       	brlt	.-42     	; 0x307e <bufchar+0x12>
    30a8:	cb 01       	movw	r24, r22
    30aa:	ba 01       	movw	r22, r20
    30ac:	df 91       	pop	r29
    30ae:	cf 91       	pop	r28
    30b0:	1f 91       	pop	r17
    30b2:	0f 91       	pop	r16
    30b4:	08 95       	ret

000030b6 <MQTTPacket_encode>:
    30b6:	8f 92       	push	r8
    30b8:	9f 92       	push	r9
    30ba:	af 92       	push	r10
    30bc:	bf 92       	push	r11
    30be:	cf 92       	push	r12
    30c0:	df 92       	push	r13
    30c2:	ef 92       	push	r14
    30c4:	ff 92       	push	r15
    30c6:	0f 93       	push	r16
    30c8:	1f 93       	push	r17
    30ca:	c1 2c       	mov	r12, r1
    30cc:	d1 2c       	mov	r13, r1
    30ce:	76 01       	movw	r14, r12
    30d0:	02 c0       	rjmp	.+4      	; 0x30d6 <MQTTPacket_encode+0x20>
    30d2:	75 01       	movw	r14, r10
    30d4:	64 01       	movw	r12, r8
    30d6:	8a 01       	movw	r16, r20
    30d8:	9b 01       	movw	r18, r22
    30da:	0f 77       	andi	r16, 0x7F	; 127
    30dc:	11 27       	eor	r17, r17
    30de:	22 27       	eor	r18, r18
    30e0:	30 78       	andi	r19, 0x80	; 128
    30e2:	33 23       	and	r19, r19
    30e4:	64 f4       	brge	.+24     	; 0x30fe <MQTTPacket_encode+0x48>
    30e6:	01 50       	subi	r16, 0x01	; 1
    30e8:	11 09       	sbc	r17, r1
    30ea:	21 09       	sbc	r18, r1
    30ec:	31 09       	sbc	r19, r1
    30ee:	00 68       	ori	r16, 0x80	; 128
    30f0:	1f 6f       	ori	r17, 0xFF	; 255
    30f2:	2f 6f       	ori	r18, 0xFF	; 255
    30f4:	3f 6f       	ori	r19, 0xFF	; 255
    30f6:	0f 5f       	subi	r16, 0xFF	; 255
    30f8:	1f 4f       	sbci	r17, 0xFF	; 255
    30fa:	2f 4f       	sbci	r18, 0xFF	; 255
    30fc:	3f 4f       	sbci	r19, 0xFF	; 255
    30fe:	4a 01       	movw	r8, r20
    3100:	5b 01       	movw	r10, r22
    3102:	77 23       	and	r23, r23
    3104:	2c f4       	brge	.+10     	; 0x3110 <MQTTPacket_encode+0x5a>
    3106:	2f e7       	ldi	r18, 0x7F	; 127
    3108:	82 0e       	add	r8, r18
    310a:	91 1c       	adc	r9, r1
    310c:	a1 1c       	adc	r10, r1
    310e:	b1 1c       	adc	r11, r1
    3110:	b5 01       	movw	r22, r10
    3112:	a4 01       	movw	r20, r8
    3114:	68 94       	set
    3116:	16 f8       	bld	r1, 6
    3118:	75 95       	asr	r23
    311a:	67 95       	ror	r22
    311c:	57 95       	ror	r21
    311e:	47 95       	ror	r20
    3120:	16 94       	lsr	r1
    3122:	d1 f7       	brne	.-12     	; 0x3118 <MQTTPacket_encode+0x62>
    3124:	14 16       	cp	r1, r20
    3126:	15 06       	cpc	r1, r21
    3128:	16 06       	cpc	r1, r22
    312a:	17 06       	cpc	r1, r23
    312c:	0c f4       	brge	.+2      	; 0x3130 <MQTTPacket_encode+0x7a>
    312e:	00 68       	ori	r16, 0x80	; 128
    3130:	46 01       	movw	r8, r12
    3132:	57 01       	movw	r10, r14
    3134:	2f ef       	ldi	r18, 0xFF	; 255
    3136:	82 1a       	sub	r8, r18
    3138:	92 0a       	sbc	r9, r18
    313a:	a2 0a       	sbc	r10, r18
    313c:	b2 0a       	sbc	r11, r18
    313e:	fc 01       	movw	r30, r24
    3140:	ec 0d       	add	r30, r12
    3142:	fd 1d       	adc	r31, r13
    3144:	00 83       	st	Z, r16
    3146:	14 16       	cp	r1, r20
    3148:	15 06       	cpc	r1, r21
    314a:	16 06       	cpc	r1, r22
    314c:	17 06       	cpc	r1, r23
    314e:	0c f2       	brlt	.-126    	; 0x30d2 <MQTTPacket_encode+0x1c>
    3150:	c5 01       	movw	r24, r10
    3152:	b4 01       	movw	r22, r8
    3154:	1f 91       	pop	r17
    3156:	0f 91       	pop	r16
    3158:	ff 90       	pop	r15
    315a:	ef 90       	pop	r14
    315c:	df 90       	pop	r13
    315e:	cf 90       	pop	r12
    3160:	bf 90       	pop	r11
    3162:	af 90       	pop	r10
    3164:	9f 90       	pop	r9
    3166:	8f 90       	pop	r8
    3168:	08 95       	ret

0000316a <MQTTPacket_decode>:
    316a:	4f 92       	push	r4
    316c:	5f 92       	push	r5
    316e:	6f 92       	push	r6
    3170:	7f 92       	push	r7
    3172:	9f 92       	push	r9
    3174:	af 92       	push	r10
    3176:	bf 92       	push	r11
    3178:	cf 92       	push	r12
    317a:	df 92       	push	r13
    317c:	ef 92       	push	r14
    317e:	ff 92       	push	r15
    3180:	0f 93       	push	r16
    3182:	1f 93       	push	r17
    3184:	cf 93       	push	r28
    3186:	df 93       	push	r29
    3188:	1f 92       	push	r1
    318a:	cd b7       	in	r28, 0x3d	; 61
    318c:	de b7       	in	r29, 0x3e	; 62
    318e:	5c 01       	movw	r10, r24
    3190:	8b 01       	movw	r16, r22
    3192:	db 01       	movw	r26, r22
    3194:	1d 92       	st	X+, r1
    3196:	1d 92       	st	X+, r1
    3198:	1d 92       	st	X+, r1
    319a:	1c 92       	st	X, r1
    319c:	13 97       	sbiw	r26, 0x03	; 3
    319e:	41 2c       	mov	r4, r1
    31a0:	51 2c       	mov	r5, r1
    31a2:	32 01       	movw	r6, r4
    31a4:	c1 2c       	mov	r12, r1
    31a6:	d1 2c       	mov	r13, r1
    31a8:	76 01       	movw	r14, r12
    31aa:	c3 94       	inc	r12
    31ac:	bf ef       	ldi	r27, 0xFF	; 255
    31ae:	4b 1a       	sub	r4, r27
    31b0:	5b 0a       	sbc	r5, r27
    31b2:	6b 0a       	sbc	r6, r27
    31b4:	7b 0a       	sbc	r7, r27
    31b6:	e5 e0       	ldi	r30, 0x05	; 5
    31b8:	4e 16       	cp	r4, r30
    31ba:	51 04       	cpc	r5, r1
    31bc:	61 04       	cpc	r6, r1
    31be:	71 04       	cpc	r7, r1
    31c0:	0c f0       	brlt	.+2      	; 0x31c4 <MQTTPacket_decode+0x5a>
    31c2:	44 c0       	rjmp	.+136    	; 0x324c <MQTTPacket_decode+0xe2>
    31c4:	41 e0       	ldi	r20, 0x01	; 1
    31c6:	50 e0       	ldi	r21, 0x00	; 0
    31c8:	60 e0       	ldi	r22, 0x00	; 0
    31ca:	70 e0       	ldi	r23, 0x00	; 0
    31cc:	ce 01       	movw	r24, r28
    31ce:	01 96       	adiw	r24, 0x01	; 1
    31d0:	f5 01       	movw	r30, r10
    31d2:	19 95       	eicall
    31d4:	61 30       	cpi	r22, 0x01	; 1
    31d6:	71 05       	cpc	r23, r1
    31d8:	81 05       	cpc	r24, r1
    31da:	91 05       	cpc	r25, r1
    31dc:	b9 f5       	brne	.+110    	; 0x324c <MQTTPacket_decode+0xe2>
    31de:	99 80       	ldd	r9, Y+1	; 0x01
    31e0:	a9 2d       	mov	r26, r9
    31e2:	af 77       	andi	r26, 0x7F	; 127
    31e4:	b0 e0       	ldi	r27, 0x00	; 0
    31e6:	a7 01       	movw	r20, r14
    31e8:	96 01       	movw	r18, r12
    31ea:	0e 94 e9 32 	call	0x65d2	; 0x65d2 <__muluhisi3>
    31ee:	d8 01       	movw	r26, r16
    31f0:	2d 91       	ld	r18, X+
    31f2:	3d 91       	ld	r19, X+
    31f4:	4d 91       	ld	r20, X+
    31f6:	5c 91       	ld	r21, X
    31f8:	dc 01       	movw	r26, r24
    31fa:	cb 01       	movw	r24, r22
    31fc:	82 0f       	add	r24, r18
    31fe:	93 1f       	adc	r25, r19
    3200:	a4 1f       	adc	r26, r20
    3202:	b5 1f       	adc	r27, r21
    3204:	f8 01       	movw	r30, r16
    3206:	80 83       	st	Z, r24
    3208:	91 83       	std	Z+1, r25	; 0x01
    320a:	a2 83       	std	Z+2, r26	; 0x02
    320c:	b3 83       	std	Z+3, r27	; 0x03
    320e:	cc 0c       	add	r12, r12
    3210:	dd 1c       	adc	r13, r13
    3212:	ee 1c       	adc	r14, r14
    3214:	ff 1c       	adc	r15, r15
    3216:	cc 0c       	add	r12, r12
    3218:	dd 1c       	adc	r13, r13
    321a:	ee 1c       	adc	r14, r14
    321c:	ff 1c       	adc	r15, r15
    321e:	cc 0c       	add	r12, r12
    3220:	dd 1c       	adc	r13, r13
    3222:	ee 1c       	adc	r14, r14
    3224:	ff 1c       	adc	r15, r15
    3226:	cc 0c       	add	r12, r12
    3228:	dd 1c       	adc	r13, r13
    322a:	ee 1c       	adc	r14, r14
    322c:	ff 1c       	adc	r15, r15
    322e:	cc 0c       	add	r12, r12
    3230:	dd 1c       	adc	r13, r13
    3232:	ee 1c       	adc	r14, r14
    3234:	ff 1c       	adc	r15, r15
    3236:	cc 0c       	add	r12, r12
    3238:	dd 1c       	adc	r13, r13
    323a:	ee 1c       	adc	r14, r14
    323c:	ff 1c       	adc	r15, r15
    323e:	cc 0c       	add	r12, r12
    3240:	dd 1c       	adc	r13, r13
    3242:	ee 1c       	adc	r14, r14
    3244:	ff 1c       	adc	r15, r15
    3246:	99 20       	and	r9, r9
    3248:	0c f4       	brge	.+2      	; 0x324c <MQTTPacket_decode+0xe2>
    324a:	b0 cf       	rjmp	.-160    	; 0x31ac <MQTTPacket_decode+0x42>
    324c:	c3 01       	movw	r24, r6
    324e:	b2 01       	movw	r22, r4
    3250:	0f 90       	pop	r0
    3252:	df 91       	pop	r29
    3254:	cf 91       	pop	r28
    3256:	1f 91       	pop	r17
    3258:	0f 91       	pop	r16
    325a:	ff 90       	pop	r15
    325c:	ef 90       	pop	r14
    325e:	df 90       	pop	r13
    3260:	cf 90       	pop	r12
    3262:	bf 90       	pop	r11
    3264:	af 90       	pop	r10
    3266:	9f 90       	pop	r9
    3268:	7f 90       	pop	r7
    326a:	6f 90       	pop	r6
    326c:	5f 90       	pop	r5
    326e:	4f 90       	pop	r4
    3270:	08 95       	ret

00003272 <MQTTPacket_len>:
    3272:	0f 93       	push	r16
    3274:	1f 93       	push	r17
    3276:	8b 01       	movw	r16, r22
    3278:	9c 01       	movw	r18, r24
    327a:	0f 5f       	subi	r16, 0xFF	; 255
    327c:	1f 4f       	sbci	r17, 0xFF	; 255
    327e:	2f 4f       	sbci	r18, 0xFF	; 255
    3280:	3f 4f       	sbci	r19, 0xFF	; 255
    3282:	00 38       	cpi	r16, 0x80	; 128
    3284:	11 05       	cpc	r17, r1
    3286:	21 05       	cpc	r18, r1
    3288:	31 05       	cpc	r19, r1
    328a:	2c f4       	brge	.+10     	; 0x3296 <MQTTPacket_len+0x24>
    328c:	6e 5f       	subi	r22, 0xFE	; 254
    328e:	7f 4f       	sbci	r23, 0xFF	; 255
    3290:	8f 4f       	sbci	r24, 0xFF	; 255
    3292:	9f 4f       	sbci	r25, 0xFF	; 255
    3294:	19 c0       	rjmp	.+50     	; 0x32c8 <MQTTPacket_len+0x56>
    3296:	01 15       	cp	r16, r1
    3298:	40 e4       	ldi	r20, 0x40	; 64
    329a:	14 07       	cpc	r17, r20
    329c:	21 05       	cpc	r18, r1
    329e:	31 05       	cpc	r19, r1
    32a0:	2c f4       	brge	.+10     	; 0x32ac <MQTTPacket_len+0x3a>
    32a2:	6d 5f       	subi	r22, 0xFD	; 253
    32a4:	7f 4f       	sbci	r23, 0xFF	; 255
    32a6:	8f 4f       	sbci	r24, 0xFF	; 255
    32a8:	9f 4f       	sbci	r25, 0xFF	; 255
    32aa:	0e c0       	rjmp	.+28     	; 0x32c8 <MQTTPacket_len+0x56>
    32ac:	0f 3f       	cpi	r16, 0xFF	; 255
    32ae:	1f 4f       	sbci	r17, 0xFF	; 255
    32b0:	2f 41       	sbci	r18, 0x1F	; 31
    32b2:	31 05       	cpc	r19, r1
    32b4:	2c f4       	brge	.+10     	; 0x32c0 <MQTTPacket_len+0x4e>
    32b6:	6c 5f       	subi	r22, 0xFC	; 252
    32b8:	7f 4f       	sbci	r23, 0xFF	; 255
    32ba:	8f 4f       	sbci	r24, 0xFF	; 255
    32bc:	9f 4f       	sbci	r25, 0xFF	; 255
    32be:	04 c0       	rjmp	.+8      	; 0x32c8 <MQTTPacket_len+0x56>
    32c0:	6b 5f       	subi	r22, 0xFB	; 251
    32c2:	7f 4f       	sbci	r23, 0xFF	; 255
    32c4:	8f 4f       	sbci	r24, 0xFF	; 255
    32c6:	9f 4f       	sbci	r25, 0xFF	; 255
    32c8:	1f 91       	pop	r17
    32ca:	0f 91       	pop	r16
    32cc:	08 95       	ret

000032ce <MQTTPacket_decodeBuf>:
    32ce:	90 93 0e 04 	sts	0x040E, r25	; 0x80040e <bufptr+0x1>
    32d2:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <bufptr>
    32d6:	86 e3       	ldi	r24, 0x36	; 54
    32d8:	98 e1       	ldi	r25, 0x18	; 24
    32da:	47 cf       	rjmp	.-370    	; 0x316a <MQTTPacket_decode>
    32dc:	08 95       	ret

000032de <readInt>:
    32de:	dc 01       	movw	r26, r24
    32e0:	ed 91       	ld	r30, X+
    32e2:	fc 91       	ld	r31, X
    32e4:	11 97       	sbiw	r26, 0x01	; 1
    32e6:	60 81       	ld	r22, Z
    32e8:	70 e0       	ldi	r23, 0x00	; 0
    32ea:	76 2f       	mov	r23, r22
    32ec:	66 27       	eor	r22, r22
    32ee:	81 81       	ldd	r24, Z+1	; 0x01
    32f0:	68 0f       	add	r22, r24
    32f2:	71 1d       	adc	r23, r1
    32f4:	07 2e       	mov	r0, r23
    32f6:	00 0c       	add	r0, r0
    32f8:	88 0b       	sbc	r24, r24
    32fa:	99 0b       	sbc	r25, r25
    32fc:	32 96       	adiw	r30, 0x02	; 2
    32fe:	ed 93       	st	X+, r30
    3300:	fc 93       	st	X, r31
    3302:	08 95       	ret

00003304 <readChar>:
    3304:	dc 01       	movw	r26, r24
    3306:	ed 91       	ld	r30, X+
    3308:	fc 91       	ld	r31, X
    330a:	11 97       	sbiw	r26, 0x01	; 1
    330c:	81 91       	ld	r24, Z+
    330e:	ed 93       	st	X+, r30
    3310:	fc 93       	st	X, r31
    3312:	08 95       	ret

00003314 <writeChar>:
    3314:	fc 01       	movw	r30, r24
    3316:	a0 81       	ld	r26, Z
    3318:	b1 81       	ldd	r27, Z+1	; 0x01
    331a:	6c 93       	st	X, r22
    331c:	80 81       	ld	r24, Z
    331e:	91 81       	ldd	r25, Z+1	; 0x01
    3320:	01 96       	adiw	r24, 0x01	; 1
    3322:	91 83       	std	Z+1, r25	; 0x01
    3324:	80 83       	st	Z, r24
    3326:	08 95       	ret

00003328 <writeInt>:
    3328:	cf 93       	push	r28
    332a:	df 93       	push	r29
    332c:	fc 01       	movw	r30, r24
    332e:	c0 81       	ld	r28, Z
    3330:	d1 81       	ldd	r29, Z+1	; 0x01
    3332:	db 01       	movw	r26, r22
    3334:	ca 01       	movw	r24, r20
    3336:	77 23       	and	r23, r23
    3338:	24 f4       	brge	.+8      	; 0x3342 <writeInt+0x1a>
    333a:	81 50       	subi	r24, 0x01	; 1
    333c:	9f 4f       	sbci	r25, 0xFF	; 255
    333e:	af 4f       	sbci	r26, 0xFF	; 255
    3340:	bf 4f       	sbci	r27, 0xFF	; 255
    3342:	98 83       	st	Y, r25
    3344:	a0 81       	ld	r26, Z
    3346:	b1 81       	ldd	r27, Z+1	; 0x01
    3348:	cd 01       	movw	r24, r26
    334a:	01 96       	adiw	r24, 0x01	; 1
    334c:	91 83       	std	Z+1, r25	; 0x01
    334e:	80 83       	st	Z, r24
    3350:	55 27       	eor	r21, r21
    3352:	66 27       	eor	r22, r22
    3354:	70 78       	andi	r23, 0x80	; 128
    3356:	77 23       	and	r23, r23
    3358:	5c f4       	brge	.+22     	; 0x3370 <writeInt+0x48>
    335a:	41 50       	subi	r20, 0x01	; 1
    335c:	51 09       	sbc	r21, r1
    335e:	61 09       	sbc	r22, r1
    3360:	71 09       	sbc	r23, r1
    3362:	5f 6f       	ori	r21, 0xFF	; 255
    3364:	6f 6f       	ori	r22, 0xFF	; 255
    3366:	7f 6f       	ori	r23, 0xFF	; 255
    3368:	4f 5f       	subi	r20, 0xFF	; 255
    336a:	5f 4f       	sbci	r21, 0xFF	; 255
    336c:	6f 4f       	sbci	r22, 0xFF	; 255
    336e:	7f 4f       	sbci	r23, 0xFF	; 255
    3370:	11 96       	adiw	r26, 0x01	; 1
    3372:	4c 93       	st	X, r20
    3374:	80 81       	ld	r24, Z
    3376:	91 81       	ldd	r25, Z+1	; 0x01
    3378:	01 96       	adiw	r24, 0x01	; 1
    337a:	91 83       	std	Z+1, r25	; 0x01
    337c:	80 83       	st	Z, r24
    337e:	df 91       	pop	r29
    3380:	cf 91       	pop	r28
    3382:	08 95       	ret

00003384 <writeCString>:
    3384:	ef 92       	push	r14
    3386:	ff 92       	push	r15
    3388:	0f 93       	push	r16
    338a:	1f 93       	push	r17
    338c:	cf 93       	push	r28
    338e:	df 93       	push	r29
    3390:	8c 01       	movw	r16, r24
    3392:	7b 01       	movw	r14, r22
    3394:	eb 01       	movw	r28, r22
    3396:	09 90       	ld	r0, Y+
    3398:	00 20       	and	r0, r0
    339a:	e9 f7       	brne	.-6      	; 0x3396 <writeCString+0x12>
    339c:	21 97       	sbiw	r28, 0x01	; 1
    339e:	c6 1b       	sub	r28, r22
    33a0:	d7 0b       	sbc	r29, r23
    33a2:	ae 01       	movw	r20, r28
    33a4:	60 e0       	ldi	r22, 0x00	; 0
    33a6:	70 e0       	ldi	r23, 0x00	; 0
    33a8:	bf df       	rcall	.-130    	; 0x3328 <writeInt>
    33aa:	ae 01       	movw	r20, r28
    33ac:	b7 01       	movw	r22, r14
    33ae:	f8 01       	movw	r30, r16
    33b0:	80 81       	ld	r24, Z
    33b2:	91 81       	ldd	r25, Z+1	; 0x01
    33b4:	0e 94 3a 34 	call	0x6874	; 0x6874 <memcpy>
    33b8:	f8 01       	movw	r30, r16
    33ba:	80 81       	ld	r24, Z
    33bc:	91 81       	ldd	r25, Z+1	; 0x01
    33be:	c8 0f       	add	r28, r24
    33c0:	d9 1f       	adc	r29, r25
    33c2:	d1 83       	std	Z+1, r29	; 0x01
    33c4:	c0 83       	st	Z, r28
    33c6:	df 91       	pop	r29
    33c8:	cf 91       	pop	r28
    33ca:	1f 91       	pop	r17
    33cc:	0f 91       	pop	r16
    33ce:	ff 90       	pop	r15
    33d0:	ef 90       	pop	r14
    33d2:	08 95       	ret

000033d4 <writeMQTTString>:
    33d4:	af 92       	push	r10
    33d6:	bf 92       	push	r11
    33d8:	cf 92       	push	r12
    33da:	df 92       	push	r13
    33dc:	ef 92       	push	r14
    33de:	ff 92       	push	r15
    33e0:	0f 93       	push	r16
    33e2:	1f 93       	push	r17
    33e4:	cf 93       	push	r28
    33e6:	df 93       	push	r29
    33e8:	cd b7       	in	r28, 0x3d	; 61
    33ea:	de b7       	in	r29, 0x3e	; 62
    33ec:	28 97       	sbiw	r28, 0x08	; 8
    33ee:	0f b6       	in	r0, 0x3f	; 63
    33f0:	f8 94       	cli
    33f2:	de bf       	out	0x3e, r29	; 62
    33f4:	0f be       	out	0x3f, r0	; 63
    33f6:	cd bf       	out	0x3d, r28	; 61
    33f8:	5c 01       	movw	r10, r24
    33fa:	09 83       	std	Y+1, r16	; 0x01
    33fc:	1a 83       	std	Y+2, r17	; 0x02
    33fe:	2b 83       	std	Y+3, r18	; 0x03
    3400:	3c 83       	std	Y+4, r19	; 0x04
    3402:	4d 83       	std	Y+5, r20	; 0x05
    3404:	5e 83       	std	Y+6, r21	; 0x06
    3406:	6f 83       	std	Y+7, r22	; 0x07
    3408:	78 87       	std	Y+8, r23	; 0x08
    340a:	cb 80       	ldd	r12, Y+3	; 0x03
    340c:	dc 80       	ldd	r13, Y+4	; 0x04
    340e:	ed 80       	ldd	r14, Y+5	; 0x05
    3410:	fe 80       	ldd	r15, Y+6	; 0x06
    3412:	1c 14       	cp	r1, r12
    3414:	1d 04       	cpc	r1, r13
    3416:	1e 04       	cpc	r1, r14
    3418:	1f 04       	cpc	r1, r15
    341a:	9c f4       	brge	.+38     	; 0x3442 <writeMQTTString+0x6e>
    341c:	b7 01       	movw	r22, r14
    341e:	a6 01       	movw	r20, r12
    3420:	83 df       	rcall	.-250    	; 0x3328 <writeInt>
    3422:	6f 81       	ldd	r22, Y+7	; 0x07
    3424:	78 85       	ldd	r23, Y+8	; 0x08
    3426:	a6 01       	movw	r20, r12
    3428:	f5 01       	movw	r30, r10
    342a:	80 81       	ld	r24, Z
    342c:	91 81       	ldd	r25, Z+1	; 0x01
    342e:	0e 94 3a 34 	call	0x6874	; 0x6874 <memcpy>
    3432:	f5 01       	movw	r30, r10
    3434:	80 81       	ld	r24, Z
    3436:	91 81       	ldd	r25, Z+1	; 0x01
    3438:	c8 0e       	add	r12, r24
    343a:	d9 1e       	adc	r13, r25
    343c:	d1 82       	std	Z+1, r13	; 0x01
    343e:	c0 82       	st	Z, r12
    3440:	0b c0       	rjmp	.+22     	; 0x3458 <writeMQTTString+0x84>
    3442:	69 81       	ldd	r22, Y+1	; 0x01
    3444:	7a 81       	ldd	r23, Y+2	; 0x02
    3446:	61 15       	cp	r22, r1
    3448:	71 05       	cpc	r23, r1
    344a:	11 f0       	breq	.+4      	; 0x3450 <writeMQTTString+0x7c>
    344c:	9b df       	rcall	.-202    	; 0x3384 <writeCString>
    344e:	04 c0       	rjmp	.+8      	; 0x3458 <writeMQTTString+0x84>
    3450:	40 e0       	ldi	r20, 0x00	; 0
    3452:	50 e0       	ldi	r21, 0x00	; 0
    3454:	ba 01       	movw	r22, r20
    3456:	68 df       	rcall	.-304    	; 0x3328 <writeInt>
    3458:	28 96       	adiw	r28, 0x08	; 8
    345a:	0f b6       	in	r0, 0x3f	; 63
    345c:	f8 94       	cli
    345e:	de bf       	out	0x3e, r29	; 62
    3460:	0f be       	out	0x3f, r0	; 63
    3462:	cd bf       	out	0x3d, r28	; 61
    3464:	df 91       	pop	r29
    3466:	cf 91       	pop	r28
    3468:	1f 91       	pop	r17
    346a:	0f 91       	pop	r16
    346c:	ff 90       	pop	r15
    346e:	ef 90       	pop	r14
    3470:	df 90       	pop	r13
    3472:	cf 90       	pop	r12
    3474:	bf 90       	pop	r11
    3476:	af 90       	pop	r10
    3478:	08 95       	ret

0000347a <readMQTTLenString>:
    347a:	ef 92       	push	r14
    347c:	ff 92       	push	r15
    347e:	0f 93       	push	r16
    3480:	1f 93       	push	r17
    3482:	cf 93       	push	r28
    3484:	df 93       	push	r29
    3486:	8c 01       	movw	r16, r24
    3488:	eb 01       	movw	r28, r22
    348a:	7a 01       	movw	r14, r20
    348c:	88 81       	ld	r24, Y
    348e:	99 81       	ldd	r25, Y+1	; 0x01
    3490:	9a 01       	movw	r18, r20
    3492:	28 1b       	sub	r18, r24
    3494:	39 0b       	sbc	r19, r25
    3496:	22 30       	cpi	r18, 0x02	; 2
    3498:	31 05       	cpc	r19, r1
    349a:	e4 f0       	brlt	.+56     	; 0x34d4 <readMQTTLenString+0x5a>
    349c:	cb 01       	movw	r24, r22
    349e:	1f df       	rcall	.-450    	; 0x32de <readInt>
    34a0:	f8 01       	movw	r30, r16
    34a2:	62 83       	std	Z+2, r22	; 0x02
    34a4:	73 83       	std	Z+3, r23	; 0x03
    34a6:	84 83       	std	Z+4, r24	; 0x04
    34a8:	95 83       	std	Z+5, r25	; 0x05
    34aa:	28 81       	ld	r18, Y
    34ac:	39 81       	ldd	r19, Y+1	; 0x01
    34ae:	a9 01       	movw	r20, r18
    34b0:	46 0f       	add	r20, r22
    34b2:	57 1f       	adc	r21, r23
    34b4:	e4 16       	cp	r14, r20
    34b6:	f5 06       	cpc	r15, r21
    34b8:	88 f0       	brcs	.+34     	; 0x34dc <readMQTTLenString+0x62>
    34ba:	37 83       	std	Z+7, r19	; 0x07
    34bc:	26 83       	std	Z+6, r18	; 0x06
    34be:	28 81       	ld	r18, Y
    34c0:	39 81       	ldd	r19, Y+1	; 0x01
    34c2:	62 0f       	add	r22, r18
    34c4:	73 1f       	adc	r23, r19
    34c6:	79 83       	std	Y+1, r23	; 0x01
    34c8:	68 83       	st	Y, r22
    34ca:	61 e0       	ldi	r22, 0x01	; 1
    34cc:	70 e0       	ldi	r23, 0x00	; 0
    34ce:	80 e0       	ldi	r24, 0x00	; 0
    34d0:	90 e0       	ldi	r25, 0x00	; 0
    34d2:	07 c0       	rjmp	.+14     	; 0x34e2 <readMQTTLenString+0x68>
    34d4:	60 e0       	ldi	r22, 0x00	; 0
    34d6:	70 e0       	ldi	r23, 0x00	; 0
    34d8:	cb 01       	movw	r24, r22
    34da:	03 c0       	rjmp	.+6      	; 0x34e2 <readMQTTLenString+0x68>
    34dc:	60 e0       	ldi	r22, 0x00	; 0
    34de:	70 e0       	ldi	r23, 0x00	; 0
    34e0:	cb 01       	movw	r24, r22
    34e2:	f8 01       	movw	r30, r16
    34e4:	11 82       	std	Z+1, r1	; 0x01
    34e6:	10 82       	st	Z, r1
    34e8:	df 91       	pop	r29
    34ea:	cf 91       	pop	r28
    34ec:	1f 91       	pop	r17
    34ee:	0f 91       	pop	r16
    34f0:	ff 90       	pop	r15
    34f2:	ef 90       	pop	r14
    34f4:	08 95       	ret

000034f6 <MQTTstrlen>:
    34f6:	cf 93       	push	r28
    34f8:	df 93       	push	r29
    34fa:	cd b7       	in	r28, 0x3d	; 61
    34fc:	de b7       	in	r29, 0x3e	; 62
    34fe:	28 97       	sbiw	r28, 0x08	; 8
    3500:	0f b6       	in	r0, 0x3f	; 63
    3502:	f8 94       	cli
    3504:	de bf       	out	0x3e, r29	; 62
    3506:	0f be       	out	0x3f, r0	; 63
    3508:	cd bf       	out	0x3d, r28	; 61
    350a:	29 83       	std	Y+1, r18	; 0x01
    350c:	3a 83       	std	Y+2, r19	; 0x02
    350e:	4b 83       	std	Y+3, r20	; 0x03
    3510:	5c 83       	std	Y+4, r21	; 0x04
    3512:	6d 83       	std	Y+5, r22	; 0x05
    3514:	7e 83       	std	Y+6, r23	; 0x06
    3516:	8f 83       	std	Y+7, r24	; 0x07
    3518:	98 87       	std	Y+8, r25	; 0x08
    351a:	e9 81       	ldd	r30, Y+1	; 0x01
    351c:	fa 81       	ldd	r31, Y+2	; 0x02
    351e:	30 97       	sbiw	r30, 0x00	; 0
    3520:	49 f0       	breq	.+18     	; 0x3534 <MQTTstrlen+0x3e>
    3522:	df 01       	movw	r26, r30
    3524:	0d 90       	ld	r0, X+
    3526:	00 20       	and	r0, r0
    3528:	e9 f7       	brne	.-6      	; 0x3524 <MQTTstrlen+0x2e>
    352a:	11 97       	sbiw	r26, 0x01	; 1
    352c:	bd 01       	movw	r22, r26
    352e:	6e 1b       	sub	r22, r30
    3530:	7f 0b       	sbc	r23, r31
    3532:	02 c0       	rjmp	.+4      	; 0x3538 <MQTTstrlen+0x42>
    3534:	6b 81       	ldd	r22, Y+3	; 0x03
    3536:	7c 81       	ldd	r23, Y+4	; 0x04
    3538:	07 2e       	mov	r0, r23
    353a:	00 0c       	add	r0, r0
    353c:	88 0b       	sbc	r24, r24
    353e:	99 0b       	sbc	r25, r25
    3540:	28 96       	adiw	r28, 0x08	; 8
    3542:	0f b6       	in	r0, 0x3f	; 63
    3544:	f8 94       	cli
    3546:	de bf       	out	0x3e, r29	; 62
    3548:	0f be       	out	0x3f, r0	; 63
    354a:	cd bf       	out	0x3d, r28	; 61
    354c:	df 91       	pop	r29
    354e:	cf 91       	pop	r28
    3550:	08 95       	ret

00003552 <MQTTPacket_equals>:
    3552:	0f 93       	push	r16
    3554:	1f 93       	push	r17
    3556:	cf 93       	push	r28
    3558:	df 93       	push	r29
    355a:	eb 01       	movw	r28, r22
    355c:	fc 01       	movw	r30, r24
    355e:	a0 81       	ld	r26, Z
    3560:	b1 81       	ldd	r27, Z+1	; 0x01
    3562:	10 97       	sbiw	r26, 0x00	; 0
    3564:	59 f0       	breq	.+22     	; 0x357c <MQTTPacket_equals+0x2a>
    3566:	fd 01       	movw	r30, r26
    3568:	01 90       	ld	r0, Z+
    356a:	00 20       	and	r0, r0
    356c:	e9 f7       	brne	.-6      	; 0x3568 <MQTTPacket_equals+0x16>
    356e:	31 97       	sbiw	r30, 0x01	; 1
    3570:	af 01       	movw	r20, r30
    3572:	4a 1b       	sub	r20, r26
    3574:	5b 0b       	sbc	r21, r27
    3576:	60 e0       	ldi	r22, 0x00	; 0
    3578:	70 e0       	ldi	r23, 0x00	; 0
    357a:	07 c0       	rjmp	.+14     	; 0x358a <MQTTPacket_equals+0x38>
    357c:	fc 01       	movw	r30, r24
    357e:	a6 81       	ldd	r26, Z+6	; 0x06
    3580:	b7 81       	ldd	r27, Z+7	; 0x07
    3582:	42 81       	ldd	r20, Z+2	; 0x02
    3584:	53 81       	ldd	r21, Z+3	; 0x03
    3586:	64 81       	ldd	r22, Z+4	; 0x04
    3588:	75 81       	ldd	r23, Z+5	; 0x05
    358a:	fe 01       	movw	r30, r28
    358c:	01 90       	ld	r0, Z+
    358e:	00 20       	and	r0, r0
    3590:	e9 f7       	brne	.-6      	; 0x358c <MQTTPacket_equals+0x3a>
    3592:	31 97       	sbiw	r30, 0x01	; 1
    3594:	8f 01       	movw	r16, r30
    3596:	0c 1b       	sub	r16, r28
    3598:	1d 0b       	sbc	r17, r29
    359a:	20 e0       	ldi	r18, 0x00	; 0
    359c:	30 e0       	ldi	r19, 0x00	; 0
    359e:	40 17       	cp	r20, r16
    35a0:	51 07       	cpc	r21, r17
    35a2:	62 07       	cpc	r22, r18
    35a4:	73 07       	cpc	r23, r19
    35a6:	49 f4       	brne	.+18     	; 0x35ba <MQTTPacket_equals+0x68>
    35a8:	be 01       	movw	r22, r28
    35aa:	cd 01       	movw	r24, r26
    35ac:	0e 94 43 34 	call	0x6886	; 0x6886 <strncmp>
    35b0:	89 2b       	or	r24, r25
    35b2:	31 f0       	breq	.+12     	; 0x35c0 <MQTTPacket_equals+0x6e>
    35b4:	60 e0       	ldi	r22, 0x00	; 0
    35b6:	70 e0       	ldi	r23, 0x00	; 0
    35b8:	05 c0       	rjmp	.+10     	; 0x35c4 <MQTTPacket_equals+0x72>
    35ba:	60 e0       	ldi	r22, 0x00	; 0
    35bc:	70 e0       	ldi	r23, 0x00	; 0
    35be:	02 c0       	rjmp	.+4      	; 0x35c4 <MQTTPacket_equals+0x72>
    35c0:	61 e0       	ldi	r22, 0x01	; 1
    35c2:	70 e0       	ldi	r23, 0x00	; 0
    35c4:	07 2e       	mov	r0, r23
    35c6:	00 0c       	add	r0, r0
    35c8:	88 0b       	sbc	r24, r24
    35ca:	99 0b       	sbc	r25, r25
    35cc:	df 91       	pop	r29
    35ce:	cf 91       	pop	r28
    35d0:	1f 91       	pop	r17
    35d2:	0f 91       	pop	r16
    35d4:	08 95       	ret

000035d6 <MQTTSerialize_publishLength>:
    35d6:	bf 92       	push	r11
    35d8:	cf 92       	push	r12
    35da:	df 92       	push	r13
    35dc:	ef 92       	push	r14
    35de:	ff 92       	push	r15
    35e0:	0f 93       	push	r16
    35e2:	1f 93       	push	r17
    35e4:	cf 93       	push	r28
    35e6:	df 93       	push	r29
    35e8:	cd b7       	in	r28, 0x3d	; 61
    35ea:	de b7       	in	r29, 0x3e	; 62
    35ec:	28 97       	sbiw	r28, 0x08	; 8
    35ee:	0f b6       	in	r0, 0x3f	; 63
    35f0:	f8 94       	cli
    35f2:	de bf       	out	0x3e, r29	; 62
    35f4:	0f be       	out	0x3f, r0	; 63
    35f6:	cd bf       	out	0x3d, r28	; 61
    35f8:	b8 2e       	mov	r11, r24
    35fa:	b2 2f       	mov	r27, r18
    35fc:	a3 2f       	mov	r26, r19
    35fe:	f4 2f       	mov	r31, r20
    3600:	e5 2f       	mov	r30, r21
    3602:	86 2f       	mov	r24, r22
    3604:	97 2f       	mov	r25, r23
    3606:	20 2f       	mov	r18, r16
    3608:	31 2f       	mov	r19, r17
    360a:	4b 2f       	mov	r20, r27
    360c:	5a 2f       	mov	r21, r26
    360e:	6f 2f       	mov	r22, r31
    3610:	7e 2f       	mov	r23, r30
    3612:	71 df       	rcall	.-286    	; 0x34f6 <MQTTstrlen>
    3614:	dc 01       	movw	r26, r24
    3616:	cb 01       	movw	r24, r22
    3618:	02 96       	adiw	r24, 0x02	; 2
    361a:	a1 1d       	adc	r26, r1
    361c:	b1 1d       	adc	r27, r1
    361e:	bc 01       	movw	r22, r24
    3620:	cd 01       	movw	r24, r26
    3622:	6c 0d       	add	r22, r12
    3624:	7d 1d       	adc	r23, r13
    3626:	8e 1d       	adc	r24, r14
    3628:	9f 1d       	adc	r25, r15
    362a:	bb 20       	and	r11, r11
    362c:	21 f0       	breq	.+8      	; 0x3636 <MQTTSerialize_publishLength+0x60>
    362e:	6e 5f       	subi	r22, 0xFE	; 254
    3630:	7f 4f       	sbci	r23, 0xFF	; 255
    3632:	8f 4f       	sbci	r24, 0xFF	; 255
    3634:	9f 4f       	sbci	r25, 0xFF	; 255
    3636:	28 96       	adiw	r28, 0x08	; 8
    3638:	0f b6       	in	r0, 0x3f	; 63
    363a:	f8 94       	cli
    363c:	de bf       	out	0x3e, r29	; 62
    363e:	0f be       	out	0x3f, r0	; 63
    3640:	cd bf       	out	0x3d, r28	; 61
    3642:	df 91       	pop	r29
    3644:	cf 91       	pop	r28
    3646:	1f 91       	pop	r17
    3648:	0f 91       	pop	r16
    364a:	ff 90       	pop	r15
    364c:	ef 90       	pop	r14
    364e:	df 90       	pop	r13
    3650:	cf 90       	pop	r12
    3652:	bf 90       	pop	r11
    3654:	08 95       	ret

00003656 <MQTTSerialize_publish>:
    3656:	3f 92       	push	r3
    3658:	4f 92       	push	r4
    365a:	5f 92       	push	r5
    365c:	6f 92       	push	r6
    365e:	7f 92       	push	r7
    3660:	8f 92       	push	r8
    3662:	9f 92       	push	r9
    3664:	af 92       	push	r10
    3666:	bf 92       	push	r11
    3668:	cf 92       	push	r12
    366a:	df 92       	push	r13
    366c:	ef 92       	push	r14
    366e:	ff 92       	push	r15
    3670:	0f 93       	push	r16
    3672:	1f 93       	push	r17
    3674:	cf 93       	push	r28
    3676:	df 93       	push	r29
    3678:	00 d0       	rcall	.+0      	; 0x367a <MQTTSerialize_publish+0x24>
    367a:	1f 92       	push	r1
    367c:	cd b7       	in	r28, 0x3d	; 61
    367e:	de b7       	in	r29, 0x3e	; 62
    3680:	4c 01       	movw	r8, r24
    3682:	2a 01       	movw	r4, r20
    3684:	3b 01       	movw	r6, r22
    3686:	32 2e       	mov	r3, r18
    3688:	b0 2e       	mov	r11, r16
    368a:	ae 2c       	mov	r10, r14
    368c:	dc 82       	std	Y+4, r13	; 0x04
    368e:	cb 82       	std	Y+3, r12	; 0x03
    3690:	9a 83       	std	Y+2, r25	; 0x02
    3692:	89 83       	std	Y+1, r24	; 0x01
    3694:	cb a0       	ldd	r12, Y+35	; 0x23
    3696:	dc a0       	ldd	r13, Y+36	; 0x24
    3698:	ed a0       	ldd	r14, Y+37	; 0x25
    369a:	fe a0       	ldd	r15, Y+38	; 0x26
    369c:	09 8d       	ldd	r16, Y+25	; 0x19
    369e:	1a 8d       	ldd	r17, Y+26	; 0x1a
    36a0:	2b 8d       	ldd	r18, Y+27	; 0x1b
    36a2:	3c 8d       	ldd	r19, Y+28	; 0x1c
    36a4:	4d 8d       	ldd	r20, Y+29	; 0x1d
    36a6:	5e 8d       	ldd	r21, Y+30	; 0x1e
    36a8:	6f 8d       	ldd	r22, Y+31	; 0x1f
    36aa:	78 a1       	ldd	r23, Y+32	; 0x20
    36ac:	8b 2d       	mov	r24, r11
    36ae:	93 df       	rcall	.-218    	; 0x35d6 <MQTTSerialize_publishLength>
    36b0:	6b 01       	movw	r12, r22
    36b2:	7c 01       	movw	r14, r24
    36b4:	de dd       	rcall	.-1092   	; 0x3272 <MQTTPacket_len>
    36b6:	46 16       	cp	r4, r22
    36b8:	57 06       	cpc	r5, r23
    36ba:	68 06       	cpc	r6, r24
    36bc:	79 06       	cpc	r7, r25
    36be:	0c f4       	brge	.+2      	; 0x36c2 <MQTTSerialize_publish+0x6c>
    36c0:	42 c0       	rjmp	.+132    	; 0x3746 <MQTTSerialize_publish+0xf0>
    36c2:	60 e3       	ldi	r22, 0x30	; 48
    36c4:	30 fa       	bst	r3, 0
    36c6:	63 f9       	bld	r22, 3
    36c8:	8b 2d       	mov	r24, r11
    36ca:	83 70       	andi	r24, 0x03	; 3
    36cc:	88 0f       	add	r24, r24
    36ce:	69 7f       	andi	r22, 0xF9	; 249
    36d0:	68 2b       	or	r22, r24
    36d2:	a0 fa       	bst	r10, 0
    36d4:	60 f9       	bld	r22, 0
    36d6:	ce 01       	movw	r24, r28
    36d8:	01 96       	adiw	r24, 0x01	; 1
    36da:	1c de       	rcall	.-968    	; 0x3314 <writeChar>
    36dc:	b7 01       	movw	r22, r14
    36de:	a6 01       	movw	r20, r12
    36e0:	89 81       	ldd	r24, Y+1	; 0x01
    36e2:	9a 81       	ldd	r25, Y+2	; 0x02
    36e4:	e8 dc       	rcall	.-1584   	; 0x30b6 <MQTTPacket_encode>
    36e6:	29 81       	ldd	r18, Y+1	; 0x01
    36e8:	3a 81       	ldd	r19, Y+2	; 0x02
    36ea:	62 0f       	add	r22, r18
    36ec:	73 1f       	adc	r23, r19
    36ee:	7a 83       	std	Y+2, r23	; 0x02
    36f0:	69 83       	std	Y+1, r22	; 0x01
    36f2:	09 8d       	ldd	r16, Y+25	; 0x19
    36f4:	1a 8d       	ldd	r17, Y+26	; 0x1a
    36f6:	2b 8d       	ldd	r18, Y+27	; 0x1b
    36f8:	3c 8d       	ldd	r19, Y+28	; 0x1c
    36fa:	4d 8d       	ldd	r20, Y+29	; 0x1d
    36fc:	5e 8d       	ldd	r21, Y+30	; 0x1e
    36fe:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3700:	78 a1       	ldd	r23, Y+32	; 0x20
    3702:	ce 01       	movw	r24, r28
    3704:	01 96       	adiw	r24, 0x01	; 1
    3706:	66 de       	rcall	.-820    	; 0x33d4 <writeMQTTString>
    3708:	bb 20       	and	r11, r11
    370a:	41 f0       	breq	.+16     	; 0x371c <MQTTSerialize_publish+0xc6>
    370c:	8b 81       	ldd	r24, Y+3	; 0x03
    370e:	9c 81       	ldd	r25, Y+4	; 0x04
    3710:	ac 01       	movw	r20, r24
    3712:	60 e0       	ldi	r22, 0x00	; 0
    3714:	70 e0       	ldi	r23, 0x00	; 0
    3716:	ce 01       	movw	r24, r28
    3718:	01 96       	adiw	r24, 0x01	; 1
    371a:	06 de       	rcall	.-1012   	; 0x3328 <writeInt>
    371c:	4b a1       	ldd	r20, Y+35	; 0x23
    371e:	5c a1       	ldd	r21, Y+36	; 0x24
    3720:	69 a1       	ldd	r22, Y+33	; 0x21
    3722:	7a a1       	ldd	r23, Y+34	; 0x22
    3724:	89 81       	ldd	r24, Y+1	; 0x01
    3726:	9a 81       	ldd	r25, Y+2	; 0x02
    3728:	0e 94 3a 34 	call	0x6874	; 0x6874 <memcpy>
    372c:	69 81       	ldd	r22, Y+1	; 0x01
    372e:	7a 81       	ldd	r23, Y+2	; 0x02
    3730:	8b a1       	ldd	r24, Y+35	; 0x23
    3732:	9c a1       	ldd	r25, Y+36	; 0x24
    3734:	68 0f       	add	r22, r24
    3736:	79 1f       	adc	r23, r25
    3738:	68 19       	sub	r22, r8
    373a:	79 09       	sbc	r23, r9
    373c:	07 2e       	mov	r0, r23
    373e:	00 0c       	add	r0, r0
    3740:	88 0b       	sbc	r24, r24
    3742:	99 0b       	sbc	r25, r25
    3744:	04 c0       	rjmp	.+8      	; 0x374e <MQTTSerialize_publish+0xf8>
    3746:	6e ef       	ldi	r22, 0xFE	; 254
    3748:	7f ef       	ldi	r23, 0xFF	; 255
    374a:	8f ef       	ldi	r24, 0xFF	; 255
    374c:	9f ef       	ldi	r25, 0xFF	; 255
    374e:	0f 90       	pop	r0
    3750:	0f 90       	pop	r0
    3752:	0f 90       	pop	r0
    3754:	0f 90       	pop	r0
    3756:	df 91       	pop	r29
    3758:	cf 91       	pop	r28
    375a:	1f 91       	pop	r17
    375c:	0f 91       	pop	r16
    375e:	ff 90       	pop	r15
    3760:	ef 90       	pop	r14
    3762:	df 90       	pop	r13
    3764:	cf 90       	pop	r12
    3766:	bf 90       	pop	r11
    3768:	af 90       	pop	r10
    376a:	9f 90       	pop	r9
    376c:	8f 90       	pop	r8
    376e:	7f 90       	pop	r7
    3770:	6f 90       	pop	r6
    3772:	5f 90       	pop	r5
    3774:	4f 90       	pop	r4
    3776:	3f 90       	pop	r3
    3778:	08 95       	ret

0000377a <MQTTSerialize_ack>:
    377a:	ef 92       	push	r14
    377c:	ff 92       	push	r15
    377e:	0f 93       	push	r16
    3780:	1f 93       	push	r17
    3782:	cf 93       	push	r28
    3784:	df 93       	push	r29
    3786:	1f 92       	push	r1
    3788:	1f 92       	push	r1
    378a:	cd b7       	in	r28, 0x3d	; 61
    378c:	de b7       	in	r29, 0x3e	; 62
    378e:	fc 01       	movw	r30, r24
    3790:	fa 83       	std	Y+2, r31	; 0x02
    3792:	e9 83       	std	Y+1, r30	; 0x01
    3794:	44 30       	cpi	r20, 0x04	; 4
    3796:	51 05       	cpc	r21, r1
    3798:	61 05       	cpc	r22, r1
    379a:	71 05       	cpc	r23, r1
    379c:	7c f1       	brlt	.+94     	; 0x37fc <MQTTSerialize_ack+0x82>
    379e:	82 2f       	mov	r24, r18
    37a0:	82 95       	swap	r24
    37a2:	80 7f       	andi	r24, 0xF0	; 240
    37a4:	00 fb       	bst	r16, 0
    37a6:	83 f9       	bld	r24, 3
    37a8:	91 e0       	ldi	r25, 0x01	; 1
    37aa:	26 30       	cpi	r18, 0x06	; 6
    37ac:	09 f0       	breq	.+2      	; 0x37b0 <MQTTSerialize_ack+0x36>
    37ae:	90 e0       	ldi	r25, 0x00	; 0
    37b0:	8f 01       	movw	r16, r30
    37b2:	99 0f       	add	r25, r25
    37b4:	68 2f       	mov	r22, r24
    37b6:	69 7f       	andi	r22, 0xF9	; 249
    37b8:	86 2f       	mov	r24, r22
    37ba:	89 2b       	or	r24, r25
    37bc:	68 2f       	mov	r22, r24
    37be:	ce 01       	movw	r24, r28
    37c0:	01 96       	adiw	r24, 0x01	; 1
    37c2:	a8 dd       	rcall	.-1200   	; 0x3314 <writeChar>
    37c4:	42 e0       	ldi	r20, 0x02	; 2
    37c6:	50 e0       	ldi	r21, 0x00	; 0
    37c8:	60 e0       	ldi	r22, 0x00	; 0
    37ca:	70 e0       	ldi	r23, 0x00	; 0
    37cc:	89 81       	ldd	r24, Y+1	; 0x01
    37ce:	9a 81       	ldd	r25, Y+2	; 0x02
    37d0:	72 dc       	rcall	.-1820   	; 0x30b6 <MQTTPacket_encode>
    37d2:	29 81       	ldd	r18, Y+1	; 0x01
    37d4:	3a 81       	ldd	r19, Y+2	; 0x02
    37d6:	62 0f       	add	r22, r18
    37d8:	73 1f       	adc	r23, r19
    37da:	7a 83       	std	Y+2, r23	; 0x02
    37dc:	69 83       	std	Y+1, r22	; 0x01
    37de:	a7 01       	movw	r20, r14
    37e0:	60 e0       	ldi	r22, 0x00	; 0
    37e2:	70 e0       	ldi	r23, 0x00	; 0
    37e4:	ce 01       	movw	r24, r28
    37e6:	01 96       	adiw	r24, 0x01	; 1
    37e8:	9f dd       	rcall	.-1218   	; 0x3328 <writeInt>
    37ea:	69 81       	ldd	r22, Y+1	; 0x01
    37ec:	7a 81       	ldd	r23, Y+2	; 0x02
    37ee:	60 1b       	sub	r22, r16
    37f0:	71 0b       	sbc	r23, r17
    37f2:	07 2e       	mov	r0, r23
    37f4:	00 0c       	add	r0, r0
    37f6:	88 0b       	sbc	r24, r24
    37f8:	99 0b       	sbc	r25, r25
    37fa:	04 c0       	rjmp	.+8      	; 0x3804 <MQTTSerialize_ack+0x8a>
    37fc:	6e ef       	ldi	r22, 0xFE	; 254
    37fe:	7f ef       	ldi	r23, 0xFF	; 255
    3800:	8f ef       	ldi	r24, 0xFF	; 255
    3802:	9f ef       	ldi	r25, 0xFF	; 255
    3804:	0f 90       	pop	r0
    3806:	0f 90       	pop	r0
    3808:	df 91       	pop	r29
    380a:	cf 91       	pop	r28
    380c:	1f 91       	pop	r17
    380e:	0f 91       	pop	r16
    3810:	ff 90       	pop	r15
    3812:	ef 90       	pop	r14
    3814:	08 95       	ret

00003816 <MQTTSerialize_subscribeLength>:
    3816:	4f 92       	push	r4
    3818:	5f 92       	push	r5
    381a:	6f 92       	push	r6
    381c:	7f 92       	push	r7
    381e:	8f 92       	push	r8
    3820:	9f 92       	push	r9
    3822:	af 92       	push	r10
    3824:	bf 92       	push	r11
    3826:	cf 92       	push	r12
    3828:	df 92       	push	r13
    382a:	ef 92       	push	r14
    382c:	ff 92       	push	r15
    382e:	cf 93       	push	r28
    3830:	df 93       	push	r29
    3832:	2b 01       	movw	r4, r22
    3834:	3c 01       	movw	r6, r24
    3836:	ea 01       	movw	r28, r20
    3838:	c1 2c       	mov	r12, r1
    383a:	d1 2c       	mov	r13, r1
    383c:	76 01       	movw	r14, r12
    383e:	81 2c       	mov	r8, r1
    3840:	91 2c       	mov	r9, r1
    3842:	54 01       	movw	r10, r8
    3844:	68 94       	set
    3846:	81 f8       	bld	r8, 1
    3848:	20 c0       	rjmp	.+64     	; 0x388a <MQTTSerialize_subscribeLength+0x74>
    384a:	f6 01       	movw	r30, r12
    384c:	ee 0f       	add	r30, r30
    384e:	ff 1f       	adc	r31, r31
    3850:	ee 0f       	add	r30, r30
    3852:	ff 1f       	adc	r31, r31
    3854:	ee 0f       	add	r30, r30
    3856:	ff 1f       	adc	r31, r31
    3858:	ec 0f       	add	r30, r28
    385a:	fd 1f       	adc	r31, r29
    385c:	20 81       	ld	r18, Z
    385e:	31 81       	ldd	r19, Z+1	; 0x01
    3860:	42 81       	ldd	r20, Z+2	; 0x02
    3862:	53 81       	ldd	r21, Z+3	; 0x03
    3864:	64 81       	ldd	r22, Z+4	; 0x04
    3866:	75 81       	ldd	r23, Z+5	; 0x05
    3868:	86 81       	ldd	r24, Z+6	; 0x06
    386a:	97 81       	ldd	r25, Z+7	; 0x07
    386c:	44 de       	rcall	.-888    	; 0x34f6 <MQTTstrlen>
    386e:	dc 01       	movw	r26, r24
    3870:	cb 01       	movw	r24, r22
    3872:	03 96       	adiw	r24, 0x03	; 3
    3874:	a1 1d       	adc	r26, r1
    3876:	b1 1d       	adc	r27, r1
    3878:	88 0e       	add	r8, r24
    387a:	99 1e       	adc	r9, r25
    387c:	aa 1e       	adc	r10, r26
    387e:	bb 1e       	adc	r11, r27
    3880:	8f ef       	ldi	r24, 0xFF	; 255
    3882:	c8 1a       	sub	r12, r24
    3884:	d8 0a       	sbc	r13, r24
    3886:	e8 0a       	sbc	r14, r24
    3888:	f8 0a       	sbc	r15, r24
    388a:	c4 14       	cp	r12, r4
    388c:	d5 04       	cpc	r13, r5
    388e:	e6 04       	cpc	r14, r6
    3890:	f7 04       	cpc	r15, r7
    3892:	dc f2       	brlt	.-74     	; 0x384a <MQTTSerialize_subscribeLength+0x34>
    3894:	c5 01       	movw	r24, r10
    3896:	b4 01       	movw	r22, r8
    3898:	df 91       	pop	r29
    389a:	cf 91       	pop	r28
    389c:	ff 90       	pop	r15
    389e:	ef 90       	pop	r14
    38a0:	df 90       	pop	r13
    38a2:	cf 90       	pop	r12
    38a4:	bf 90       	pop	r11
    38a6:	af 90       	pop	r10
    38a8:	9f 90       	pop	r9
    38aa:	8f 90       	pop	r8
    38ac:	7f 90       	pop	r7
    38ae:	6f 90       	pop	r6
    38b0:	5f 90       	pop	r5
    38b2:	4f 90       	pop	r4
    38b4:	08 95       	ret

000038b6 <MQTTSerialize_subscribe>:
    38b6:	2f 92       	push	r2
    38b8:	3f 92       	push	r3
    38ba:	4f 92       	push	r4
    38bc:	5f 92       	push	r5
    38be:	6f 92       	push	r6
    38c0:	7f 92       	push	r7
    38c2:	8f 92       	push	r8
    38c4:	9f 92       	push	r9
    38c6:	af 92       	push	r10
    38c8:	bf 92       	push	r11
    38ca:	cf 92       	push	r12
    38cc:	df 92       	push	r13
    38ce:	ef 92       	push	r14
    38d0:	ff 92       	push	r15
    38d2:	0f 93       	push	r16
    38d4:	1f 93       	push	r17
    38d6:	cf 93       	push	r28
    38d8:	df 93       	push	r29
    38da:	cd b7       	in	r28, 0x3d	; 61
    38dc:	de b7       	in	r29, 0x3e	; 62
    38de:	27 97       	sbiw	r28, 0x07	; 7
    38e0:	0f b6       	in	r0, 0x3f	; 63
    38e2:	f8 94       	cli
    38e4:	de bf       	out	0x3e, r29	; 62
    38e6:	0f be       	out	0x3f, r0	; 63
    38e8:	cd bf       	out	0x3d, r28	; 61
    38ea:	1c 01       	movw	r2, r24
    38ec:	2a 01       	movw	r4, r20
    38ee:	3b 01       	movw	r6, r22
    38f0:	2f 83       	std	Y+7, r18	; 0x07
    38f2:	9a 83       	std	Y+2, r25	; 0x02
    38f4:	89 83       	std	Y+1, r24	; 0x01
    38f6:	a5 01       	movw	r20, r10
    38f8:	c7 01       	movw	r24, r14
    38fa:	b6 01       	movw	r22, r12
    38fc:	8c df       	rcall	.-232    	; 0x3816 <MQTTSerialize_subscribeLength>
    38fe:	6b 83       	std	Y+3, r22	; 0x03
    3900:	7c 83       	std	Y+4, r23	; 0x04
    3902:	8d 83       	std	Y+5, r24	; 0x05
    3904:	9e 83       	std	Y+6, r25	; 0x06
    3906:	b5 dc       	rcall	.-1686   	; 0x3272 <MQTTPacket_len>
    3908:	46 16       	cp	r4, r22
    390a:	57 06       	cpc	r5, r23
    390c:	68 06       	cpc	r6, r24
    390e:	79 06       	cpc	r7, r25
    3910:	0c f4       	brge	.+2      	; 0x3914 <MQTTSerialize_subscribe+0x5e>
    3912:	52 c0       	rjmp	.+164    	; 0x39b8 <MQTTSerialize_subscribe+0x102>
    3914:	60 e8       	ldi	r22, 0x80	; 128
    3916:	8f 81       	ldd	r24, Y+7	; 0x07
    3918:	80 fb       	bst	r24, 0
    391a:	63 f9       	bld	r22, 3
    391c:	69 7f       	andi	r22, 0xF9	; 249
    391e:	62 60       	ori	r22, 0x02	; 2
    3920:	ce 01       	movw	r24, r28
    3922:	01 96       	adiw	r24, 0x01	; 1
    3924:	f7 dc       	rcall	.-1554   	; 0x3314 <writeChar>
    3926:	4b 81       	ldd	r20, Y+3	; 0x03
    3928:	5c 81       	ldd	r21, Y+4	; 0x04
    392a:	6d 81       	ldd	r22, Y+5	; 0x05
    392c:	7e 81       	ldd	r23, Y+6	; 0x06
    392e:	89 81       	ldd	r24, Y+1	; 0x01
    3930:	9a 81       	ldd	r25, Y+2	; 0x02
    3932:	c1 db       	rcall	.-2174   	; 0x30b6 <MQTTPacket_encode>
    3934:	29 81       	ldd	r18, Y+1	; 0x01
    3936:	3a 81       	ldd	r19, Y+2	; 0x02
    3938:	62 0f       	add	r22, r18
    393a:	73 1f       	adc	r23, r19
    393c:	7a 83       	std	Y+2, r23	; 0x02
    393e:	69 83       	std	Y+1, r22	; 0x01
    3940:	a8 01       	movw	r20, r16
    3942:	60 e0       	ldi	r22, 0x00	; 0
    3944:	70 e0       	ldi	r23, 0x00	; 0
    3946:	ce 01       	movw	r24, r28
    3948:	01 96       	adiw	r24, 0x01	; 1
    394a:	ee dc       	rcall	.-1572   	; 0x3328 <writeInt>
    394c:	41 2c       	mov	r4, r1
    394e:	51 2c       	mov	r5, r1
    3950:	32 01       	movw	r6, r4
    3952:	24 c0       	rjmp	.+72     	; 0x399c <MQTTSerialize_subscribe+0xe6>
    3954:	f2 01       	movw	r30, r4
    3956:	ee 0f       	add	r30, r30
    3958:	ff 1f       	adc	r31, r31
    395a:	ee 0f       	add	r30, r30
    395c:	ff 1f       	adc	r31, r31
    395e:	ee 0f       	add	r30, r30
    3960:	ff 1f       	adc	r31, r31
    3962:	ea 0d       	add	r30, r10
    3964:	fb 1d       	adc	r31, r11
    3966:	00 81       	ld	r16, Z
    3968:	11 81       	ldd	r17, Z+1	; 0x01
    396a:	22 81       	ldd	r18, Z+2	; 0x02
    396c:	33 81       	ldd	r19, Z+3	; 0x03
    396e:	44 81       	ldd	r20, Z+4	; 0x04
    3970:	55 81       	ldd	r21, Z+5	; 0x05
    3972:	66 81       	ldd	r22, Z+6	; 0x06
    3974:	77 81       	ldd	r23, Z+7	; 0x07
    3976:	ce 01       	movw	r24, r28
    3978:	01 96       	adiw	r24, 0x01	; 1
    397a:	2c dd       	rcall	.-1448   	; 0x33d4 <writeMQTTString>
    397c:	f2 01       	movw	r30, r4
    397e:	ee 0f       	add	r30, r30
    3980:	ff 1f       	adc	r31, r31
    3982:	ee 0f       	add	r30, r30
    3984:	ff 1f       	adc	r31, r31
    3986:	e8 0d       	add	r30, r8
    3988:	f9 1d       	adc	r31, r9
    398a:	60 81       	ld	r22, Z
    398c:	ce 01       	movw	r24, r28
    398e:	01 96       	adiw	r24, 0x01	; 1
    3990:	c1 dc       	rcall	.-1662   	; 0x3314 <writeChar>
    3992:	8f ef       	ldi	r24, 0xFF	; 255
    3994:	48 1a       	sub	r4, r24
    3996:	58 0a       	sbc	r5, r24
    3998:	68 0a       	sbc	r6, r24
    399a:	78 0a       	sbc	r7, r24
    399c:	4c 14       	cp	r4, r12
    399e:	5d 04       	cpc	r5, r13
    39a0:	6e 04       	cpc	r6, r14
    39a2:	7f 04       	cpc	r7, r15
    39a4:	bc f2       	brlt	.-82     	; 0x3954 <MQTTSerialize_subscribe+0x9e>
    39a6:	69 81       	ldd	r22, Y+1	; 0x01
    39a8:	7a 81       	ldd	r23, Y+2	; 0x02
    39aa:	62 19       	sub	r22, r2
    39ac:	73 09       	sbc	r23, r3
    39ae:	07 2e       	mov	r0, r23
    39b0:	00 0c       	add	r0, r0
    39b2:	88 0b       	sbc	r24, r24
    39b4:	99 0b       	sbc	r25, r25
    39b6:	04 c0       	rjmp	.+8      	; 0x39c0 <MQTTSerialize_subscribe+0x10a>
    39b8:	6e ef       	ldi	r22, 0xFE	; 254
    39ba:	7f ef       	ldi	r23, 0xFF	; 255
    39bc:	8f ef       	ldi	r24, 0xFF	; 255
    39be:	9f ef       	ldi	r25, 0xFF	; 255
    39c0:	27 96       	adiw	r28, 0x07	; 7
    39c2:	0f b6       	in	r0, 0x3f	; 63
    39c4:	f8 94       	cli
    39c6:	de bf       	out	0x3e, r29	; 62
    39c8:	0f be       	out	0x3f, r0	; 63
    39ca:	cd bf       	out	0x3d, r28	; 61
    39cc:	df 91       	pop	r29
    39ce:	cf 91       	pop	r28
    39d0:	1f 91       	pop	r17
    39d2:	0f 91       	pop	r16
    39d4:	ff 90       	pop	r15
    39d6:	ef 90       	pop	r14
    39d8:	df 90       	pop	r13
    39da:	cf 90       	pop	r12
    39dc:	bf 90       	pop	r11
    39de:	af 90       	pop	r10
    39e0:	9f 90       	pop	r9
    39e2:	8f 90       	pop	r8
    39e4:	7f 90       	pop	r7
    39e6:	6f 90       	pop	r6
    39e8:	5f 90       	pop	r5
    39ea:	4f 90       	pop	r4
    39ec:	3f 90       	pop	r3
    39ee:	2f 90       	pop	r2
    39f0:	08 95       	ret

000039f2 <MQTTDeserialize_suback>:
    39f2:	4f 92       	push	r4
    39f4:	5f 92       	push	r5
    39f6:	6f 92       	push	r6
    39f8:	7f 92       	push	r7
    39fa:	8f 92       	push	r8
    39fc:	9f 92       	push	r9
    39fe:	af 92       	push	r10
    3a00:	bf 92       	push	r11
    3a02:	cf 92       	push	r12
    3a04:	df 92       	push	r13
    3a06:	ef 92       	push	r14
    3a08:	ff 92       	push	r15
    3a0a:	0f 93       	push	r16
    3a0c:	1f 93       	push	r17
    3a0e:	cf 93       	push	r28
    3a10:	df 93       	push	r29
    3a12:	00 d0       	rcall	.+0      	; 0x3a14 <MQTTDeserialize_suback+0x22>
    3a14:	00 d0       	rcall	.+0      	; 0x3a16 <MQTTDeserialize_suback+0x24>
    3a16:	cd b7       	in	r28, 0x3d	; 61
    3a18:	de b7       	in	r29, 0x3e	; 62
    3a1a:	4c 01       	movw	r8, r24
    3a1c:	2a 01       	movw	r4, r20
    3a1e:	3b 01       	movw	r6, r22
    3a20:	69 01       	movw	r12, r18
    3a22:	fa 82       	std	Y+2, r15	; 0x02
    3a24:	e9 82       	std	Y+1, r14	; 0x01
    3a26:	ce 01       	movw	r24, r28
    3a28:	01 96       	adiw	r24, 0x01	; 1
    3a2a:	6c dc       	rcall	.-1832   	; 0x3304 <readChar>
    3a2c:	80 7f       	andi	r24, 0xF0	; 240
    3a2e:	80 39       	cpi	r24, 0x90	; 144
    3a30:	09 f0       	breq	.+2      	; 0x3a34 <MQTTDeserialize_suback+0x42>
    3a32:	53 c0       	rjmp	.+166    	; 0x3ada <MQTTDeserialize_suback+0xe8>
    3a34:	be 01       	movw	r22, r28
    3a36:	6d 5f       	subi	r22, 0xFD	; 253
    3a38:	7f 4f       	sbci	r23, 0xFF	; 255
    3a3a:	89 81       	ldd	r24, Y+1	; 0x01
    3a3c:	9a 81       	ldd	r25, Y+2	; 0x02
    3a3e:	47 dc       	rcall	.-1906   	; 0x32ce <MQTTPacket_decodeBuf>
    3a40:	29 81       	ldd	r18, Y+1	; 0x01
    3a42:	3a 81       	ldd	r19, Y+2	; 0x02
    3a44:	26 0f       	add	r18, r22
    3a46:	37 1f       	adc	r19, r23
    3a48:	3a 83       	std	Y+2, r19	; 0x02
    3a4a:	29 83       	std	Y+1, r18	; 0x01
    3a4c:	ab 80       	ldd	r10, Y+3	; 0x03
    3a4e:	bc 80       	ldd	r11, Y+4	; 0x04
    3a50:	a2 0e       	add	r10, r18
    3a52:	b3 1e       	adc	r11, r19
    3a54:	a5 01       	movw	r20, r10
    3a56:	42 1b       	sub	r20, r18
    3a58:	53 0b       	sbc	r21, r19
    3a5a:	42 30       	cpi	r20, 0x02	; 2
    3a5c:	51 05       	cpc	r21, r1
    3a5e:	0c f4       	brge	.+2      	; 0x3a62 <MQTTDeserialize_suback+0x70>
    3a60:	43 c0       	rjmp	.+134    	; 0x3ae8 <MQTTDeserialize_suback+0xf6>
    3a62:	ce 01       	movw	r24, r28
    3a64:	01 96       	adiw	r24, 0x01	; 1
    3a66:	3b dc       	rcall	.-1930   	; 0x32de <readInt>
    3a68:	f4 01       	movw	r30, r8
    3a6a:	71 83       	std	Z+1, r23	; 0x01
    3a6c:	60 83       	st	Z, r22
    3a6e:	f6 01       	movw	r30, r12
    3a70:	10 82       	st	Z, r1
    3a72:	11 82       	std	Z+1, r1	; 0x01
    3a74:	12 82       	std	Z+2, r1	; 0x02
    3a76:	13 82       	std	Z+3, r1	; 0x03
    3a78:	26 c0       	rjmp	.+76     	; 0x3ac6 <MQTTDeserialize_suback+0xd4>
    3a7a:	f6 01       	movw	r30, r12
    3a7c:	80 81       	ld	r24, Z
    3a7e:	91 81       	ldd	r25, Z+1	; 0x01
    3a80:	a2 81       	ldd	r26, Z+2	; 0x02
    3a82:	b3 81       	ldd	r27, Z+3	; 0x03
    3a84:	48 16       	cp	r4, r24
    3a86:	59 06       	cpc	r5, r25
    3a88:	6a 06       	cpc	r6, r26
    3a8a:	7b 06       	cpc	r7, r27
    3a8c:	54 f1       	brlt	.+84     	; 0x3ae2 <MQTTDeserialize_suback+0xf0>
    3a8e:	ac 01       	movw	r20, r24
    3a90:	bd 01       	movw	r22, r26
    3a92:	4f 5f       	subi	r20, 0xFF	; 255
    3a94:	5f 4f       	sbci	r21, 0xFF	; 255
    3a96:	6f 4f       	sbci	r22, 0xFF	; 255
    3a98:	7f 4f       	sbci	r23, 0xFF	; 255
    3a9a:	40 83       	st	Z, r20
    3a9c:	51 83       	std	Z+1, r21	; 0x01
    3a9e:	62 83       	std	Z+2, r22	; 0x02
    3aa0:	73 83       	std	Z+3, r23	; 0x03
    3aa2:	88 0f       	add	r24, r24
    3aa4:	99 1f       	adc	r25, r25
    3aa6:	88 0f       	add	r24, r24
    3aa8:	99 1f       	adc	r25, r25
    3aaa:	78 01       	movw	r14, r16
    3aac:	e8 0e       	add	r14, r24
    3aae:	f9 1e       	adc	r15, r25
    3ab0:	ce 01       	movw	r24, r28
    3ab2:	01 96       	adiw	r24, 0x01	; 1
    3ab4:	27 dc       	rcall	.-1970   	; 0x3304 <readChar>
    3ab6:	90 e0       	ldi	r25, 0x00	; 0
    3ab8:	a0 e0       	ldi	r26, 0x00	; 0
    3aba:	b0 e0       	ldi	r27, 0x00	; 0
    3abc:	f7 01       	movw	r30, r14
    3abe:	80 83       	st	Z, r24
    3ac0:	91 83       	std	Z+1, r25	; 0x01
    3ac2:	a2 83       	std	Z+2, r26	; 0x02
    3ac4:	b3 83       	std	Z+3, r27	; 0x03
    3ac6:	89 81       	ldd	r24, Y+1	; 0x01
    3ac8:	9a 81       	ldd	r25, Y+2	; 0x02
    3aca:	8a 15       	cp	r24, r10
    3acc:	9b 05       	cpc	r25, r11
    3ace:	a8 f2       	brcs	.-86     	; 0x3a7a <MQTTDeserialize_suback+0x88>
    3ad0:	61 e0       	ldi	r22, 0x01	; 1
    3ad2:	70 e0       	ldi	r23, 0x00	; 0
    3ad4:	80 e0       	ldi	r24, 0x00	; 0
    3ad6:	90 e0       	ldi	r25, 0x00	; 0
    3ad8:	07 c0       	rjmp	.+14     	; 0x3ae8 <MQTTDeserialize_suback+0xf6>
    3ada:	60 e0       	ldi	r22, 0x00	; 0
    3adc:	70 e0       	ldi	r23, 0x00	; 0
    3ade:	cb 01       	movw	r24, r22
    3ae0:	03 c0       	rjmp	.+6      	; 0x3ae8 <MQTTDeserialize_suback+0xf6>
    3ae2:	6f ef       	ldi	r22, 0xFF	; 255
    3ae4:	7f ef       	ldi	r23, 0xFF	; 255
    3ae6:	cb 01       	movw	r24, r22
    3ae8:	26 96       	adiw	r28, 0x06	; 6
    3aea:	0f b6       	in	r0, 0x3f	; 63
    3aec:	f8 94       	cli
    3aee:	de bf       	out	0x3e, r29	; 62
    3af0:	0f be       	out	0x3f, r0	; 63
    3af2:	cd bf       	out	0x3d, r28	; 61
    3af4:	df 91       	pop	r29
    3af6:	cf 91       	pop	r28
    3af8:	1f 91       	pop	r17
    3afa:	0f 91       	pop	r16
    3afc:	ff 90       	pop	r15
    3afe:	ef 90       	pop	r14
    3b00:	df 90       	pop	r13
    3b02:	cf 90       	pop	r12
    3b04:	bf 90       	pop	r11
    3b06:	af 90       	pop	r10
    3b08:	9f 90       	pop	r9
    3b0a:	8f 90       	pop	r8
    3b0c:	7f 90       	pop	r7
    3b0e:	6f 90       	pop	r6
    3b10:	5f 90       	pop	r5
    3b12:	4f 90       	pop	r4
    3b14:	08 95       	ret

00003b16 <w5500_read>:
    3b16:	cf 92       	push	r12
    3b18:	df 92       	push	r13
    3b1a:	ef 92       	push	r14
    3b1c:	ff 92       	push	r15
    3b1e:	0f 93       	push	r16
    3b20:	1f 93       	push	r17
    3b22:	cf 93       	push	r28
    3b24:	df 93       	push	r29
    3b26:	ec 01       	movw	r28, r24
    3b28:	8b 01       	movw	r16, r22
    3b2a:	69 01       	movw	r12, r18
    3b2c:	7a 01       	movw	r14, r20
    3b2e:	88 81       	ld	r24, Y
    3b30:	99 81       	ldd	r25, Y+1	; 0x01
    3b32:	aa 81       	ldd	r26, Y+2	; 0x02
    3b34:	bb 81       	ldd	r27, Y+3	; 0x03
    3b36:	88 0f       	add	r24, r24
    3b38:	99 1f       	adc	r25, r25
    3b3a:	aa 1f       	adc	r26, r26
    3b3c:	bb 1f       	adc	r27, r27
    3b3e:	88 0f       	add	r24, r24
    3b40:	99 1f       	adc	r25, r25
    3b42:	aa 1f       	adc	r26, r26
    3b44:	bb 1f       	adc	r27, r27
    3b46:	01 96       	adiw	r24, 0x01	; 1
    3b48:	a1 1d       	adc	r26, r1
    3b4a:	b1 1d       	adc	r27, r1
    3b4c:	88 0f       	add	r24, r24
    3b4e:	99 1f       	adc	r25, r25
    3b50:	aa 1f       	adc	r26, r26
    3b52:	bb 1f       	adc	r27, r27
    3b54:	88 0f       	add	r24, r24
    3b56:	99 1f       	adc	r25, r25
    3b58:	aa 1f       	adc	r26, r26
    3b5a:	bb 1f       	adc	r27, r27
    3b5c:	88 0f       	add	r24, r24
    3b5e:	99 1f       	adc	r25, r25
    3b60:	aa 1f       	adc	r26, r26
    3b62:	bb 1f       	adc	r27, r27
    3b64:	bc 01       	movw	r22, r24
    3b66:	cd 01       	movw	r24, r26
    3b68:	7d 5f       	subi	r23, 0xFD	; 253
    3b6a:	8f 4f       	sbci	r24, 0xFF	; 255
    3b6c:	9f 4f       	sbci	r25, 0xFF	; 255
    3b6e:	0e 94 af 06 	call	0xd5e	; 0xd5e <WIZCHIP_READ>
    3b72:	87 31       	cpi	r24, 0x17	; 23
    3b74:	59 f4       	brne	.+22     	; 0x3b8c <w5500_read+0x76>
    3b76:	88 81       	ld	r24, Y
    3b78:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <getSn_RX_RSR>
    3b7c:	89 2b       	or	r24, r25
    3b7e:	51 f0       	breq	.+20     	; 0x3b94 <w5500_read+0x7e>
    3b80:	a6 01       	movw	r20, r12
    3b82:	b8 01       	movw	r22, r16
    3b84:	88 81       	ld	r24, Y
    3b86:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <recv>
    3b8a:	07 c0       	rjmp	.+14     	; 0x3b9a <w5500_read+0x84>
    3b8c:	60 e0       	ldi	r22, 0x00	; 0
    3b8e:	70 e0       	ldi	r23, 0x00	; 0
    3b90:	cb 01       	movw	r24, r22
    3b92:	03 c0       	rjmp	.+6      	; 0x3b9a <w5500_read+0x84>
    3b94:	60 e0       	ldi	r22, 0x00	; 0
    3b96:	70 e0       	ldi	r23, 0x00	; 0
    3b98:	cb 01       	movw	r24, r22
    3b9a:	df 91       	pop	r29
    3b9c:	cf 91       	pop	r28
    3b9e:	1f 91       	pop	r17
    3ba0:	0f 91       	pop	r16
    3ba2:	ff 90       	pop	r15
    3ba4:	ef 90       	pop	r14
    3ba6:	df 90       	pop	r13
    3ba8:	cf 90       	pop	r12
    3baa:	08 95       	ret

00003bac <w5500_write>:
    3bac:	cf 92       	push	r12
    3bae:	df 92       	push	r13
    3bb0:	ef 92       	push	r14
    3bb2:	ff 92       	push	r15
    3bb4:	0f 93       	push	r16
    3bb6:	1f 93       	push	r17
    3bb8:	cf 93       	push	r28
    3bba:	df 93       	push	r29
    3bbc:	ec 01       	movw	r28, r24
    3bbe:	8b 01       	movw	r16, r22
    3bc0:	69 01       	movw	r12, r18
    3bc2:	7a 01       	movw	r14, r20
    3bc4:	88 81       	ld	r24, Y
    3bc6:	99 81       	ldd	r25, Y+1	; 0x01
    3bc8:	aa 81       	ldd	r26, Y+2	; 0x02
    3bca:	bb 81       	ldd	r27, Y+3	; 0x03
    3bcc:	88 0f       	add	r24, r24
    3bce:	99 1f       	adc	r25, r25
    3bd0:	aa 1f       	adc	r26, r26
    3bd2:	bb 1f       	adc	r27, r27
    3bd4:	88 0f       	add	r24, r24
    3bd6:	99 1f       	adc	r25, r25
    3bd8:	aa 1f       	adc	r26, r26
    3bda:	bb 1f       	adc	r27, r27
    3bdc:	01 96       	adiw	r24, 0x01	; 1
    3bde:	a1 1d       	adc	r26, r1
    3be0:	b1 1d       	adc	r27, r1
    3be2:	88 0f       	add	r24, r24
    3be4:	99 1f       	adc	r25, r25
    3be6:	aa 1f       	adc	r26, r26
    3be8:	bb 1f       	adc	r27, r27
    3bea:	88 0f       	add	r24, r24
    3bec:	99 1f       	adc	r25, r25
    3bee:	aa 1f       	adc	r26, r26
    3bf0:	bb 1f       	adc	r27, r27
    3bf2:	88 0f       	add	r24, r24
    3bf4:	99 1f       	adc	r25, r25
    3bf6:	aa 1f       	adc	r26, r26
    3bf8:	bb 1f       	adc	r27, r27
    3bfa:	bc 01       	movw	r22, r24
    3bfc:	cd 01       	movw	r24, r26
    3bfe:	7d 5f       	subi	r23, 0xFD	; 253
    3c00:	8f 4f       	sbci	r24, 0xFF	; 255
    3c02:	9f 4f       	sbci	r25, 0xFF	; 255
    3c04:	0e 94 af 06 	call	0xd5e	; 0xd5e <WIZCHIP_READ>
    3c08:	87 31       	cpi	r24, 0x17	; 23
    3c0a:	31 f4       	brne	.+12     	; 0x3c18 <w5500_write+0x6c>
    3c0c:	a6 01       	movw	r20, r12
    3c0e:	b8 01       	movw	r22, r16
    3c10:	88 81       	ld	r24, Y
    3c12:	0e 94 dd 04 	call	0x9ba	; 0x9ba <send>
    3c16:	03 c0       	rjmp	.+6      	; 0x3c1e <w5500_write+0x72>
    3c18:	60 e0       	ldi	r22, 0x00	; 0
    3c1a:	70 e0       	ldi	r23, 0x00	; 0
    3c1c:	cb 01       	movw	r24, r22
    3c1e:	df 91       	pop	r29
    3c20:	cf 91       	pop	r28
    3c22:	1f 91       	pop	r17
    3c24:	0f 91       	pop	r16
    3c26:	ff 90       	pop	r15
    3c28:	ef 90       	pop	r14
    3c2a:	df 90       	pop	r13
    3c2c:	cf 90       	pop	r12
    3c2e:	08 95       	ret

00003c30 <w5500_disconnect>:
    3c30:	fc 01       	movw	r30, r24
    3c32:	80 81       	ld	r24, Z
    3c34:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <disconnect>
    3c38:	08 95       	ret

00003c3a <expired>:
    3c3a:	cf 92       	push	r12
    3c3c:	df 92       	push	r13
    3c3e:	ef 92       	push	r14
    3c40:	ff 92       	push	r15
    3c42:	fc 01       	movw	r30, r24
    3c44:	c4 80       	ldd	r12, Z+4	; 0x04
    3c46:	d5 80       	ldd	r13, Z+5	; 0x05
    3c48:	e6 80       	ldd	r14, Z+6	; 0x06
    3c4a:	f7 80       	ldd	r15, Z+7	; 0x07
    3c4c:	cc d2       	rcall	.+1432   	; 0x41e6 <millis>
    3c4e:	09 2e       	mov	r0, r25
    3c50:	00 0c       	add	r0, r0
    3c52:	aa 0b       	sbc	r26, r26
    3c54:	bb 0b       	sbc	r27, r27
    3c56:	a7 01       	movw	r20, r14
    3c58:	96 01       	movw	r18, r12
    3c5a:	28 1b       	sub	r18, r24
    3c5c:	39 0b       	sbc	r19, r25
    3c5e:	4a 0b       	sbc	r20, r26
    3c60:	5b 0b       	sbc	r21, r27
    3c62:	da 01       	movw	r26, r20
    3c64:	c9 01       	movw	r24, r18
    3c66:	88 27       	eor	r24, r24
    3c68:	b7 fd       	sbrc	r27, 7
    3c6a:	83 95       	inc	r24
    3c6c:	99 27       	eor	r25, r25
    3c6e:	aa 27       	eor	r26, r26
    3c70:	bb 27       	eor	r27, r27
    3c72:	ff 90       	pop	r15
    3c74:	ef 90       	pop	r14
    3c76:	df 90       	pop	r13
    3c78:	cf 90       	pop	r12
    3c7a:	08 95       	ret

00003c7c <countdown_ms>:
    3c7c:	cf 92       	push	r12
    3c7e:	df 92       	push	r13
    3c80:	ef 92       	push	r14
    3c82:	ff 92       	push	r15
    3c84:	cf 93       	push	r28
    3c86:	df 93       	push	r29
    3c88:	ec 01       	movw	r28, r24
    3c8a:	6a 01       	movw	r12, r20
    3c8c:	7b 01       	movw	r14, r22
    3c8e:	ab d2       	rcall	.+1366   	; 0x41e6 <millis>
    3c90:	09 2e       	mov	r0, r25
    3c92:	00 0c       	add	r0, r0
    3c94:	aa 0b       	sbc	r26, r26
    3c96:	bb 0b       	sbc	r27, r27
    3c98:	c8 0e       	add	r12, r24
    3c9a:	d9 1e       	adc	r13, r25
    3c9c:	ea 1e       	adc	r14, r26
    3c9e:	fb 1e       	adc	r15, r27
    3ca0:	cc 82       	std	Y+4, r12	; 0x04
    3ca2:	dd 82       	std	Y+5, r13	; 0x05
    3ca4:	ee 82       	std	Y+6, r14	; 0x06
    3ca6:	ff 82       	std	Y+7, r15	; 0x07
    3ca8:	df 91       	pop	r29
    3caa:	cf 91       	pop	r28
    3cac:	ff 90       	pop	r15
    3cae:	ef 90       	pop	r14
    3cb0:	df 90       	pop	r13
    3cb2:	cf 90       	pop	r12
    3cb4:	08 95       	ret

00003cb6 <countdown>:
    3cb6:	cf 92       	push	r12
    3cb8:	df 92       	push	r13
    3cba:	ef 92       	push	r14
    3cbc:	ff 92       	push	r15
    3cbe:	0f 93       	push	r16
    3cc0:	1f 93       	push	r17
    3cc2:	cf 93       	push	r28
    3cc4:	df 93       	push	r29
    3cc6:	ec 01       	movw	r28, r24
    3cc8:	6a 01       	movw	r12, r20
    3cca:	7b 01       	movw	r14, r22
    3ccc:	8c d2       	rcall	.+1304   	; 0x41e6 <millis>
    3cce:	8c 01       	movw	r16, r24
    3cd0:	a8 ee       	ldi	r26, 0xE8	; 232
    3cd2:	b3 e0       	ldi	r27, 0x03	; 3
    3cd4:	a7 01       	movw	r20, r14
    3cd6:	96 01       	movw	r18, r12
    3cd8:	0e 94 e9 32 	call	0x65d2	; 0x65d2 <__muluhisi3>
    3cdc:	01 2e       	mov	r0, r17
    3cde:	00 0c       	add	r0, r0
    3ce0:	22 0b       	sbc	r18, r18
    3ce2:	33 0b       	sbc	r19, r19
    3ce4:	dc 01       	movw	r26, r24
    3ce6:	cb 01       	movw	r24, r22
    3ce8:	80 0f       	add	r24, r16
    3cea:	91 1f       	adc	r25, r17
    3cec:	a2 1f       	adc	r26, r18
    3cee:	b3 1f       	adc	r27, r19
    3cf0:	8c 83       	std	Y+4, r24	; 0x04
    3cf2:	9d 83       	std	Y+5, r25	; 0x05
    3cf4:	ae 83       	std	Y+6, r26	; 0x06
    3cf6:	bf 83       	std	Y+7, r27	; 0x07
    3cf8:	df 91       	pop	r29
    3cfa:	cf 91       	pop	r28
    3cfc:	1f 91       	pop	r17
    3cfe:	0f 91       	pop	r16
    3d00:	ff 90       	pop	r15
    3d02:	ef 90       	pop	r14
    3d04:	df 90       	pop	r13
    3d06:	cf 90       	pop	r12
    3d08:	08 95       	ret

00003d0a <left_ms>:
    3d0a:	cf 92       	push	r12
    3d0c:	df 92       	push	r13
    3d0e:	ef 92       	push	r14
    3d10:	ff 92       	push	r15
    3d12:	fc 01       	movw	r30, r24
    3d14:	c4 80       	ldd	r12, Z+4	; 0x04
    3d16:	d5 80       	ldd	r13, Z+5	; 0x05
    3d18:	e6 80       	ldd	r14, Z+6	; 0x06
    3d1a:	f7 80       	ldd	r15, Z+7	; 0x07
    3d1c:	64 d2       	rcall	.+1224   	; 0x41e6 <millis>
    3d1e:	09 2e       	mov	r0, r25
    3d20:	00 0c       	add	r0, r0
    3d22:	aa 0b       	sbc	r26, r26
    3d24:	bb 0b       	sbc	r27, r27
    3d26:	a7 01       	movw	r20, r14
    3d28:	96 01       	movw	r18, r12
    3d2a:	28 1b       	sub	r18, r24
    3d2c:	39 0b       	sbc	r19, r25
    3d2e:	4a 0b       	sbc	r20, r26
    3d30:	5b 0b       	sbc	r21, r27
    3d32:	ca 01       	movw	r24, r20
    3d34:	b9 01       	movw	r22, r18
    3d36:	1a f4       	brpl	.+6      	; 0x3d3e <left_ms+0x34>
    3d38:	60 e0       	ldi	r22, 0x00	; 0
    3d3a:	70 e0       	ldi	r23, 0x00	; 0
    3d3c:	cb 01       	movw	r24, r22
    3d3e:	ff 90       	pop	r15
    3d40:	ef 90       	pop	r14
    3d42:	df 90       	pop	r13
    3d44:	cf 90       	pop	r12
    3d46:	08 95       	ret

00003d48 <InitTimer>:
    3d48:	fc 01       	movw	r30, r24
    3d4a:	14 82       	std	Z+4, r1	; 0x04
    3d4c:	15 82       	std	Z+5, r1	; 0x05
    3d4e:	16 82       	std	Z+6, r1	; 0x06
    3d50:	17 82       	std	Z+7, r1	; 0x07
    3d52:	08 95       	ret

00003d54 <NewNetwork>:
    3d54:	fc 01       	movw	r30, r24
    3d56:	8b e8       	ldi	r24, 0x8B	; 139
    3d58:	9d e1       	ldi	r25, 0x1D	; 29
    3d5a:	95 83       	std	Z+5, r25	; 0x05
    3d5c:	84 83       	std	Z+4, r24	; 0x04
    3d5e:	86 ed       	ldi	r24, 0xD6	; 214
    3d60:	9d e1       	ldi	r25, 0x1D	; 29
    3d62:	97 83       	std	Z+7, r25	; 0x07
    3d64:	86 83       	std	Z+6, r24	; 0x06
    3d66:	88 e1       	ldi	r24, 0x18	; 24
    3d68:	9e e1       	ldi	r25, 0x1E	; 30
    3d6a:	91 87       	std	Z+9, r25	; 0x09
    3d6c:	80 87       	std	Z+8, r24	; 0x08
    3d6e:	08 95       	ret

00003d70 <ConnectNetwork>:
    3d70:	ef 92       	push	r14
    3d72:	ff 92       	push	r15
    3d74:	0f 93       	push	r16
    3d76:	1f 93       	push	r17
    3d78:	cf 93       	push	r28
    3d7a:	df 93       	push	r29
    3d7c:	ec 01       	movw	r28, r24
    3d7e:	8b 01       	movw	r16, r22
    3d80:	7a 01       	movw	r14, r20
    3d82:	20 e0       	ldi	r18, 0x00	; 0
    3d84:	49 e3       	ldi	r20, 0x39	; 57
    3d86:	50 e3       	ldi	r21, 0x30	; 48
    3d88:	61 e0       	ldi	r22, 0x01	; 1
    3d8a:	88 81       	ld	r24, Y
    3d8c:	0e 94 99 02 	call	0x532	; 0x532 <socket>
    3d90:	a7 01       	movw	r20, r14
    3d92:	b8 01       	movw	r22, r16
    3d94:	88 81       	ld	r24, Y
    3d96:	0e 94 96 03 	call	0x72c	; 0x72c <connect>
    3d9a:	60 e0       	ldi	r22, 0x00	; 0
    3d9c:	70 e0       	ldi	r23, 0x00	; 0
    3d9e:	cb 01       	movw	r24, r22
    3da0:	df 91       	pop	r29
    3da2:	cf 91       	pop	r28
    3da4:	1f 91       	pop	r17
    3da6:	0f 91       	pop	r16
    3da8:	ff 90       	pop	r15
    3daa:	ef 90       	pop	r14
    3dac:	08 95       	ret

00003dae <appDataConf>:
    3dae:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <appDataReqBusy>
    3db2:	08 95       	ret

00003db4 <appTimerHandler>:
    3db4:	08 95       	ret

00003db6 <appDataInd_ACK>:
    3db6:	0f 93       	push	r16
    3db8:	1f 93       	push	r17
    3dba:	cf 93       	push	r28
    3dbc:	8c 01       	movw	r16, r24
    3dbe:	c0 e0       	ldi	r28, 0x00	; 0
    3dc0:	0a c0       	rjmp	.+20     	; 0x3dd6 <appDataInd_ACK+0x20>
    3dc2:	d8 01       	movw	r26, r16
    3dc4:	17 96       	adiw	r26, 0x07	; 7
    3dc6:	ed 91       	ld	r30, X+
    3dc8:	fc 91       	ld	r31, X
    3dca:	18 97       	sbiw	r26, 0x08	; 8
    3dcc:	ec 0f       	add	r30, r28
    3dce:	f1 1d       	adc	r31, r1
    3dd0:	80 81       	ld	r24, Z
    3dd2:	dc d4       	rcall	.+2488   	; 0x478c <HAL_UartWriteByte>
    3dd4:	cf 5f       	subi	r28, 0xFF	; 255
    3dd6:	f8 01       	movw	r30, r16
    3dd8:	81 85       	ldd	r24, Z+9	; 0x09
    3dda:	c8 17       	cp	r28, r24
    3ddc:	90 f3       	brcs	.-28     	; 0x3dc2 <appDataInd_ACK+0xc>
    3dde:	81 e0       	ldi	r24, 0x01	; 1
    3de0:	cf 91       	pop	r28
    3de2:	1f 91       	pop	r17
    3de4:	0f 91       	pop	r16
    3de6:	08 95       	ret

00003de8 <sendOK>:
    3de8:	20 91 7d 04 	lds	r18, 0x047D	; 0x80047d <appDataReqBusy>
    3dec:	21 11       	cpse	r18, r1
    3dee:	20 c0       	rjmp	.+64     	; 0x3e30 <sendOK+0x48>
    3df0:	2c e6       	ldi	r18, 0x6C	; 108
    3df2:	ee e1       	ldi	r30, 0x1E	; 30
    3df4:	f2 e0       	ldi	r31, 0x02	; 2
    3df6:	a0 e1       	ldi	r26, 0x10	; 16
    3df8:	b4 e0       	ldi	r27, 0x04	; 4
    3dfa:	01 90       	ld	r0, Z+
    3dfc:	0d 92       	st	X+, r0
    3dfe:	2a 95       	dec	r18
    3e00:	e1 f7       	brne	.-8      	; 0x3dfa <sendOK+0x12>
    3e02:	ee e7       	ldi	r30, 0x7E	; 126
    3e04:	f4 e0       	ldi	r31, 0x04	; 4
    3e06:	96 83       	std	Z+6, r25	; 0x06
    3e08:	85 83       	std	Z+5, r24	; 0x05
    3e0a:	82 e0       	ldi	r24, 0x02	; 2
    3e0c:	87 83       	std	Z+7, r24	; 0x07
    3e0e:	80 87       	std	Z+8, r24	; 0x08
    3e10:	81 87       	std	Z+9, r24	; 0x09
    3e12:	80 e1       	ldi	r24, 0x10	; 16
    3e14:	94 e0       	ldi	r25, 0x04	; 4
    3e16:	93 87       	std	Z+11, r25	; 0x0b
    3e18:	82 87       	std	Z+10, r24	; 0x0a
    3e1a:	84 e0       	ldi	r24, 0x04	; 4
    3e1c:	84 87       	std	Z+12, r24	; 0x0c
    3e1e:	87 ed       	ldi	r24, 0xD7	; 215
    3e20:	9e e1       	ldi	r25, 0x1E	; 30
    3e22:	96 87       	std	Z+14, r25	; 0x0e
    3e24:	85 87       	std	Z+13, r24	; 0x0d
    3e26:	cf 01       	movw	r24, r30
    3e28:	98 d6       	rcall	.+3376   	; 0x4b5a <NWK_DataReq>
    3e2a:	81 e0       	ldi	r24, 0x01	; 1
    3e2c:	80 93 7d 04 	sts	0x047D, r24	; 0x80047d <appDataReqBusy>
    3e30:	08 95       	ret

00003e32 <appDataInd>:
    3e32:	dc 01       	movw	r26, r24
    3e34:	90 e0       	ldi	r25, 0x00	; 0
    3e36:	0e c0       	rjmp	.+28     	; 0x3e54 <appDataInd+0x22>
    3e38:	29 2f       	mov	r18, r25
    3e3a:	30 e0       	ldi	r19, 0x00	; 0
    3e3c:	17 96       	adiw	r26, 0x07	; 7
    3e3e:	ed 91       	ld	r30, X+
    3e40:	fc 91       	ld	r31, X
    3e42:	18 97       	sbiw	r26, 0x08	; 8
    3e44:	e2 0f       	add	r30, r18
    3e46:	f3 1f       	adc	r31, r19
    3e48:	80 81       	ld	r24, Z
    3e4a:	f9 01       	movw	r30, r18
    3e4c:	ed 55       	subi	r30, 0x5D	; 93
    3e4e:	fb 4f       	sbci	r31, 0xFB	; 251
    3e50:	80 83       	st	Z, r24
    3e52:	9f 5f       	subi	r25, 0xFF	; 255
    3e54:	19 96       	adiw	r26, 0x09	; 9
    3e56:	8c 91       	ld	r24, X
    3e58:	19 97       	sbiw	r26, 0x09	; 9
    3e5a:	98 17       	cp	r25, r24
    3e5c:	68 f3       	brcs	.-38     	; 0x3e38 <appDataInd+0x6>
    3e5e:	8d 91       	ld	r24, X+
    3e60:	9c 91       	ld	r25, X
    3e62:	c2 df       	rcall	.-124    	; 0x3de8 <sendOK>
    3e64:	81 e0       	ldi	r24, 0x01	; 1
    3e66:	80 93 a2 04 	sts	0x04A2, r24	; 0x8004a2 <data_ready>
    3e6a:	08 95       	ret

00003e6c <HAL_UartBytesReceived>:
    3e6c:	0f 93       	push	r16
    3e6e:	1f 93       	push	r17
    3e70:	cf 93       	push	r28
    3e72:	df 93       	push	r29
    3e74:	8c 01       	movw	r16, r24
    3e76:	c0 e0       	ldi	r28, 0x00	; 0
    3e78:	d0 e0       	ldi	r29, 0x00	; 0
    3e7a:	10 c0       	rjmp	.+32     	; 0x3e9c <HAL_UartBytesReceived+0x30>
    3e7c:	ae d4       	rcall	.+2396   	; 0x47da <HAL_UartReadByte>
    3e7e:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <appUartBufferPtr>
    3e82:	8d 36       	cpi	r24, 0x6D	; 109
    3e84:	19 f4       	brne	.+6      	; 0x3e8c <HAL_UartBytesReceived+0x20>
    3e86:	81 e0       	ldi	r24, 0x01	; 1
    3e88:	90 e0       	ldi	r25, 0x00	; 0
    3e8a:	ae df       	rcall	.-164    	; 0x3de8 <sendOK>
    3e8c:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <appUartBufferPtr>
    3e90:	8d 36       	cpi	r24, 0x6D	; 109
    3e92:	18 f4       	brcc	.+6      	; 0x3e9a <HAL_UartBytesReceived+0x2e>
    3e94:	8f 5f       	subi	r24, 0xFF	; 255
    3e96:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <appUartBufferPtr>
    3e9a:	21 96       	adiw	r28, 0x01	; 1
    3e9c:	c0 17       	cp	r28, r16
    3e9e:	d1 07       	cpc	r29, r17
    3ea0:	68 f3       	brcs	.-38     	; 0x3e7c <HAL_UartBytesReceived+0x10>
    3ea2:	8f e8       	ldi	r24, 0x8F	; 143
    3ea4:	94 e0       	ldi	r25, 0x04	; 4
    3ea6:	0e 94 45 2e 	call	0x5c8a	; 0x5c8a <SYS_TimerStop>
    3eaa:	8f e8       	ldi	r24, 0x8F	; 143
    3eac:	94 e0       	ldi	r25, 0x04	; 4
    3eae:	0e 94 8f 2e 	call	0x5d1e	; 0x5d1e <SYS_TimerStart>
    3eb2:	df 91       	pop	r29
    3eb4:	cf 91       	pop	r28
    3eb6:	1f 91       	pop	r17
    3eb8:	0f 91       	pop	r16
    3eba:	08 95       	ret

00003ebc <appInit>:
    3ebc:	80 e0       	ldi	r24, 0x00	; 0
    3ebe:	90 e0       	ldi	r25, 0x00	; 0
    3ec0:	84 d5       	rcall	.+2824   	; 0x49ca <NWK_SetAddr>
    3ec2:	86 e9       	ldi	r24, 0x96	; 150
    3ec4:	90 e0       	ldi	r25, 0x00	; 0
    3ec6:	88 d5       	rcall	.+2832   	; 0x49d8 <NWK_SetPanId>
    3ec8:	8f e0       	ldi	r24, 0x0F	; 15
    3eca:	0e 94 10 2d 	call	0x5a20	; 0x5a20 <PHY_SetChannel>
    3ece:	81 e0       	ldi	r24, 0x01	; 1
    3ed0:	0e 94 0c 2d 	call	0x5a18	; 0x5a18 <PHY_SetRxState>
    3ed4:	69 e1       	ldi	r22, 0x19	; 25
    3ed6:	7f e1       	ldi	r23, 0x1F	; 31
    3ed8:	81 e0       	ldi	r24, 0x01	; 1
    3eda:	85 d5       	rcall	.+2826   	; 0x49e6 <NWK_OpenEndpoint>
    3edc:	6b ed       	ldi	r22, 0xDB	; 219
    3ede:	7e e1       	ldi	r23, 0x1E	; 30
    3ee0:	82 e0       	ldi	r24, 0x02	; 2
    3ee2:	81 d5       	rcall	.+2818   	; 0x49e6 <NWK_OpenEndpoint>
    3ee4:	ef e8       	ldi	r30, 0x8F	; 143
    3ee6:	f4 e0       	ldi	r31, 0x04	; 4
    3ee8:	84 e1       	ldi	r24, 0x14	; 20
    3eea:	90 e0       	ldi	r25, 0x00	; 0
    3eec:	a0 e0       	ldi	r26, 0x00	; 0
    3eee:	b0 e0       	ldi	r27, 0x00	; 0
    3ef0:	86 83       	std	Z+6, r24	; 0x06
    3ef2:	97 83       	std	Z+7, r25	; 0x07
    3ef4:	a0 87       	std	Z+8, r26	; 0x08
    3ef6:	b1 87       	std	Z+9, r27	; 0x09
    3ef8:	12 86       	std	Z+10, r1	; 0x0a
    3efa:	8a ed       	ldi	r24, 0xDA	; 218
    3efc:	9e e1       	ldi	r25, 0x1E	; 30
    3efe:	94 87       	std	Z+12, r25	; 0x0c
    3f00:	83 87       	std	Z+11, r24	; 0x0b
    3f02:	08 95       	ret

00003f04 <APP_TaskHandler>:
    3f04:	80 91 9c 04 	lds	r24, 0x049C	; 0x80049c <appState>
    3f08:	81 11       	cpse	r24, r1
    3f0a:	04 c0       	rjmp	.+8      	; 0x3f14 <APP_TaskHandler+0x10>
    3f0c:	d7 df       	rcall	.-82     	; 0x3ebc <appInit>
    3f0e:	81 e0       	ldi	r24, 0x01	; 1
    3f10:	80 93 9c 04 	sts	0x049C, r24	; 0x80049c <appState>
    3f14:	08 95       	ret

00003f16 <freeRam>:
//Wiznet FUNC headers
void print_network_information(void);

// RAM Memory usage test
static int freeRam (void)
{
    3f16:	cf 93       	push	r28
    3f18:	df 93       	push	r29
    3f1a:	1f 92       	push	r1
    3f1c:	1f 92       	push	r1
    3f1e:	cd b7       	in	r28, 0x3d	; 61
    3f20:	de b7       	in	r29, 0x3e	; 62
	extern int __heap_start, *__brkval;
	int v;
	int _res = (int) &v - (__brkval == 0 ? (int) &__heap_start : (int) __brkval);
    3f22:	80 91 b5 1c 	lds	r24, 0x1CB5	; 0x801cb5 <__brkval>
    3f26:	90 91 b6 1c 	lds	r25, 0x1CB6	; 0x801cb6 <__brkval+0x1>
    3f2a:	00 97       	sbiw	r24, 0x00	; 0
    3f2c:	11 f0       	breq	.+4      	; 0x3f32 <freeRam+0x1c>
    3f2e:	9c 01       	movw	r18, r24
    3f30:	02 c0       	rjmp	.+4      	; 0x3f36 <freeRam+0x20>
    3f32:	20 ec       	ldi	r18, 0xC0	; 192
    3f34:	3c e1       	ldi	r19, 0x1C	; 28
	return _res;
}
    3f36:	ce 01       	movw	r24, r28
    3f38:	01 96       	adiw	r24, 0x01	; 1
    3f3a:	82 1b       	sub	r24, r18
    3f3c:	93 0b       	sbc	r25, r19
    3f3e:	0f 90       	pop	r0
    3f40:	0f 90       	pop	r0
    3f42:	df 91       	pop	r29
    3f44:	cf 91       	pop	r28
    3f46:	08 95       	ret

00003f48 <cs_sel>:

unsigned char ethBuf0[ETH_MAX_BUF_SIZE];
unsigned char ethBuf1[ETH_MAX_BUF_SIZE];

void cs_sel() {
	SPI_WIZNET_ENABLE();
    3f48:	8b b1       	in	r24, 0x0b	; 11
    3f4a:	8f 7e       	andi	r24, 0xEF	; 239
    3f4c:	8b b9       	out	0x0b, r24	; 11
    3f4e:	08 95       	ret

00003f50 <cs_desel>:
}

void cs_desel() {
	SPI_WIZNET_DISABLE();
    3f50:	8b b1       	in	r24, 0x0b	; 11
    3f52:	80 61       	ori	r24, 0x10	; 16
    3f54:	8b b9       	out	0x0b, r24	; 11
    3f56:	08 95       	ret

00003f58 <spi_rb>:
}

uint8_t spi_rb(void) {
	uint8_t rbuf;
	SPI_READ(rbuf);
    3f58:	1e bc       	out	0x2e, r1	; 46
    3f5a:	0d b4       	in	r0, 0x2d	; 45
    3f5c:	07 fe       	sbrs	r0, 7
    3f5e:	fd cf       	rjmp	.-6      	; 0x3f5a <spi_rb+0x2>
    3f60:	8e b5       	in	r24, 0x2e	; 46
	return rbuf;
}
    3f62:	08 95       	ret

00003f64 <spi_wb>:

void spi_wb(uint8_t b) {
	SPI_WRITE(b);
    3f64:	8e bd       	out	0x2e, r24	; 46
    3f66:	0d b4       	in	r0, 0x2d	; 45
    3f68:	07 fe       	sbrs	r0, 7
    3f6a:	fd cf       	rjmp	.-6      	; 0x3f66 <spi_wb+0x2>
}
    3f6c:	08 95       	ret

00003f6e <spi_rb_burst>:

void spi_rb_burst(uint8_t *buf, uint16_t len) {
    3f6e:	fc 01       	movw	r30, r24
	for (uint16_t var = 0; var < len; var++) {
    3f70:	20 e0       	ldi	r18, 0x00	; 0
    3f72:	30 e0       	ldi	r19, 0x00	; 0
    3f74:	09 c0       	rjmp	.+18     	; 0x3f88 <spi_rb_burst+0x1a>
		SPI_READ(*buf++);
    3f76:	1e bc       	out	0x2e, r1	; 46
    3f78:	0d b4       	in	r0, 0x2d	; 45
    3f7a:	07 fe       	sbrs	r0, 7
    3f7c:	fd cf       	rjmp	.-6      	; 0x3f78 <spi_rb_burst+0xa>
    3f7e:	8e b5       	in	r24, 0x2e	; 46
    3f80:	80 83       	st	Z, r24
void spi_wb(uint8_t b) {
	SPI_WRITE(b);
}

void spi_rb_burst(uint8_t *buf, uint16_t len) {
	for (uint16_t var = 0; var < len; var++) {
    3f82:	2f 5f       	subi	r18, 0xFF	; 255
    3f84:	3f 4f       	sbci	r19, 0xFF	; 255
		SPI_READ(*buf++);
    3f86:	31 96       	adiw	r30, 0x01	; 1
void spi_wb(uint8_t b) {
	SPI_WRITE(b);
}

void spi_rb_burst(uint8_t *buf, uint16_t len) {
	for (uint16_t var = 0; var < len; var++) {
    3f88:	26 17       	cp	r18, r22
    3f8a:	37 07       	cpc	r19, r23
    3f8c:	a0 f3       	brcs	.-24     	; 0x3f76 <spi_rb_burst+0x8>
		SPI_READ(*buf++);
	}
}
    3f8e:	08 95       	ret

00003f90 <spi_wb_burst>:

void spi_wb_burst(uint8_t *buf, uint16_t len) {
    3f90:	fc 01       	movw	r30, r24
	for (uint16_t var = 0; var < len; var++) {
    3f92:	20 e0       	ldi	r18, 0x00	; 0
    3f94:	30 e0       	ldi	r19, 0x00	; 0
    3f96:	0a c0       	rjmp	.+20     	; 0x3fac <spi_wb_burst+0x1c>
		SPI_WRITE(*buf++);
    3f98:	cf 01       	movw	r24, r30
    3f9a:	01 96       	adiw	r24, 0x01	; 1
    3f9c:	40 81       	ld	r20, Z
    3f9e:	4e bd       	out	0x2e, r20	; 46
    3fa0:	0d b4       	in	r0, 0x2d	; 45
    3fa2:	07 fe       	sbrs	r0, 7
    3fa4:	fd cf       	rjmp	.-6      	; 0x3fa0 <spi_wb_burst+0x10>
		SPI_READ(*buf++);
	}
}

void spi_wb_burst(uint8_t *buf, uint16_t len) {
	for (uint16_t var = 0; var < len; var++) {
    3fa6:	2f 5f       	subi	r18, 0xFF	; 255
    3fa8:	3f 4f       	sbci	r19, 0xFF	; 255
		SPI_WRITE(*buf++);
    3faa:	fc 01       	movw	r30, r24
		SPI_READ(*buf++);
	}
}

void spi_wb_burst(uint8_t *buf, uint16_t len) {
	for (uint16_t var = 0; var < len; var++) {
    3fac:	26 17       	cp	r18, r22
    3fae:	37 07       	cpc	r19, r23
    3fb0:	98 f3       	brcs	.-26     	; 0x3f98 <spi_wb_burst+0x8>
		SPI_WRITE(*buf++);
	}
}
    3fb2:	08 95       	ret

00003fb4 <messageArrived>:
#define PUBLISH_TEPLOTA_0         "/ssy/test/teplota"
//#define PUBLISH_AVR_DEBUG         "/w5500_avr_dbg"

//MQTT subscribe call-back is here
void messageArrived(MessageData* md)
{
    3fb4:	cf 92       	push	r12
    3fb6:	df 92       	push	r13
    3fb8:	ef 92       	push	r14
    3fba:	ff 92       	push	r15
    3fbc:	0f 93       	push	r16
    3fbe:	1f 93       	push	r17
    3fc0:	cf 93       	push	r28
    3fc2:	df 93       	push	r29
    3fc4:	cd b7       	in	r28, 0x3d	; 61
    3fc6:	de b7       	in	r29, 0x3e	; 62
    3fc8:	c0 5c       	subi	r28, 0xC0	; 192
    3fca:	d1 09       	sbc	r29, r1
    3fcc:	0f b6       	in	r0, 0x3f	; 63
    3fce:	f8 94       	cli
    3fd0:	de bf       	out	0x3e, r29	; 62
    3fd2:	0f be       	out	0x3f, r0	; 63
    3fd4:	cd bf       	out	0x3d, r28	; 61
	char _topic_name[64] = "\0";
    3fd6:	20 91 87 02 	lds	r18, 0x0287	; 0x800287 <mqtt_target+0x3f>
    3fda:	30 91 88 02 	lds	r19, 0x0288	; 0x800288 <mqtt_target+0x40>
    3fde:	3a 83       	std	Y+2, r19	; 0x02
    3fe0:	29 83       	std	Y+1, r18	; 0x01
    3fe2:	fe 01       	movw	r30, r28
    3fe4:	33 96       	adiw	r30, 0x03	; 3
    3fe6:	4e e3       	ldi	r20, 0x3E	; 62
    3fe8:	df 01       	movw	r26, r30
    3fea:	1d 92       	st	X+, r1
    3fec:	4a 95       	dec	r20
    3fee:	e9 f7       	brne	.-6      	; 0x3fea <messageArrived+0x36>
	char _message[128] = "\0";
    3ff0:	8e 01       	movw	r16, r28
    3ff2:	0f 5b       	subi	r16, 0xBF	; 191
    3ff4:	1f 4f       	sbci	r17, 0xFF	; 255
    3ff6:	f8 01       	movw	r30, r16
    3ff8:	31 83       	std	Z+1, r19	; 0x01
    3ffa:	20 83       	st	Z, r18
    3ffc:	32 96       	adiw	r30, 0x02	; 2
    3ffe:	2e e7       	ldi	r18, 0x7E	; 126
    4000:	df 01       	movw	r26, r30
    4002:	1d 92       	st	X+, r1
    4004:	2a 95       	dec	r18
    4006:	e9 f7       	brne	.-6      	; 0x4002 <messageArrived+0x4e>

	MQTTMessage* message = md->message;
    4008:	fc 01       	movw	r30, r24
    400a:	c0 80       	ld	r12, Z
    400c:	d1 80       	ldd	r13, Z+1	; 0x01
	MQTTString* topic = md->topicName;
    400e:	02 80       	ldd	r0, Z+2	; 0x02
    4010:	f3 81       	ldd	r31, Z+3	; 0x03
    4012:	e0 2d       	mov	r30, r0
	strncpy(_topic_name, topic->lenstring.data, topic->lenstring.len);
    4014:	42 81       	ldd	r20, Z+2	; 0x02
    4016:	53 81       	ldd	r21, Z+3	; 0x03
    4018:	64 81       	ldd	r22, Z+4	; 0x04
    401a:	75 81       	ldd	r23, Z+5	; 0x05
    401c:	86 81       	ldd	r24, Z+6	; 0x06
    401e:	97 81       	ldd	r25, Z+7	; 0x07
    4020:	bc 01       	movw	r22, r24
    4022:	ce 01       	movw	r24, r28
    4024:	01 96       	adiw	r24, 0x01	; 1
    4026:	7c 01       	movw	r14, r24
    4028:	0e 94 51 34 	call	0x68a2	; 0x68a2 <strncpy>
	strncpy(_message, message->payload, message->payloadlen);
    402c:	d6 01       	movw	r26, r12
    402e:	15 96       	adiw	r26, 0x05	; 5
    4030:	6d 91       	ld	r22, X+
    4032:	7c 91       	ld	r23, X
    4034:	16 97       	sbiw	r26, 0x06	; 6
    4036:	17 96       	adiw	r26, 0x07	; 7
    4038:	4d 91       	ld	r20, X+
    403a:	5c 91       	ld	r21, X
    403c:	18 97       	sbiw	r26, 0x08	; 8
    403e:	c8 01       	movw	r24, r16
    4040:	0e 94 51 34 	call	0x68a2	; 0x68a2 <strncpy>
	PRINTF("<<MQTT Sub: [%s] %s", _topic_name , _message);
    4044:	1f 93       	push	r17
    4046:	0f 93       	push	r16
    4048:	ff 92       	push	r15
    404a:	ef 92       	push	r14
    404c:	8b ed       	ldi	r24, 0xDB	; 219
    404e:	93 e0       	ldi	r25, 0x03	; 3
    4050:	9f 93       	push	r25
    4052:	8f 93       	push	r24
    4054:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>
}
    4058:	0f 90       	pop	r0
    405a:	0f 90       	pop	r0
    405c:	0f 90       	pop	r0
    405e:	0f 90       	pop	r0
    4060:	0f 90       	pop	r0
    4062:	0f 90       	pop	r0
    4064:	c0 54       	subi	r28, 0x40	; 64
    4066:	df 4f       	sbci	r29, 0xFF	; 255
    4068:	0f b6       	in	r0, 0x3f	; 63
    406a:	f8 94       	cli
    406c:	de bf       	out	0x3e, r29	; 62
    406e:	0f be       	out	0x3f, r0	; 63
    4070:	cd bf       	out	0x3d, r28	; 61
    4072:	df 91       	pop	r29
    4074:	cf 91       	pop	r28
    4076:	1f 91       	pop	r17
    4078:	0f 91       	pop	r16
    407a:	ff 90       	pop	r15
    407c:	ef 90       	pop	r14
    407e:	df 90       	pop	r13
    4080:	cf 90       	pop	r12
    4082:	08 95       	ret

00004084 <mqtt_pub>:

void mqtt_pub(Client* mqtt_client, char * mqtt_topic, char * mqtt_msg, int mqtt_msg_len)
{
    4084:	af 92       	push	r10
    4086:	bf 92       	push	r11
    4088:	cf 92       	push	r12
    408a:	df 92       	push	r13
    408c:	ef 92       	push	r14
    408e:	ff 92       	push	r15
    4090:	0f 93       	push	r16
    4092:	1f 93       	push	r17
    4094:	cf 93       	push	r28
    4096:	df 93       	push	r29
    4098:	cd b7       	in	r28, 0x3d	; 61
    409a:	de b7       	in	r29, 0x3e	; 62
    409c:	29 97       	sbiw	r28, 0x09	; 9
    409e:	0f b6       	in	r0, 0x3f	; 63
    40a0:	f8 94       	cli
    40a2:	de bf       	out	0x3e, r29	; 62
    40a4:	0f be       	out	0x3f, r0	; 63
    40a6:	cd bf       	out	0x3d, r28	; 61
    40a8:	8c 01       	movw	r16, r24
    40aa:	7b 01       	movw	r14, r22
    40ac:	6a 01       	movw	r12, r20
    40ae:	59 01       	movw	r10, r18
	static uint32_t mqtt_pub_count = 0;
	static uint8_t mqtt_err_cnt = 0;
	int32_t mqtt_rc;

	wdt_reset();
    40b0:	a8 95       	wdr
	//wdt_disable();
	PRINTF(">>MQTT pub msg %lu ", ++mqtt_pub_count);
    40b2:	80 91 9e 04 	lds	r24, 0x049E	; 0x80049e <mqtt_pub_count.3507>
    40b6:	90 91 9f 04 	lds	r25, 0x049F	; 0x80049f <mqtt_pub_count.3507+0x1>
    40ba:	a0 91 a0 04 	lds	r26, 0x04A0	; 0x8004a0 <mqtt_pub_count.3507+0x2>
    40be:	b0 91 a1 04 	lds	r27, 0x04A1	; 0x8004a1 <mqtt_pub_count.3507+0x3>
    40c2:	01 96       	adiw	r24, 0x01	; 1
    40c4:	a1 1d       	adc	r26, r1
    40c6:	b1 1d       	adc	r27, r1
    40c8:	80 93 9e 04 	sts	0x049E, r24	; 0x80049e <mqtt_pub_count.3507>
    40cc:	90 93 9f 04 	sts	0x049F, r25	; 0x80049f <mqtt_pub_count.3507+0x1>
    40d0:	a0 93 a0 04 	sts	0x04A0, r26	; 0x8004a0 <mqtt_pub_count.3507+0x2>
    40d4:	b0 93 a1 04 	sts	0x04A1, r27	; 0x8004a1 <mqtt_pub_count.3507+0x3>
    40d8:	bf 93       	push	r27
    40da:	af 93       	push	r26
    40dc:	9f 93       	push	r25
    40de:	8f 93       	push	r24
    40e0:	87 ec       	ldi	r24, 0xC7	; 199
    40e2:	93 e0       	ldi	r25, 0x03	; 3
    40e4:	9f 93       	push	r25
    40e6:	8f 93       	push	r24
    40e8:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>
	MQTTMessage pubMessage;
	pubMessage.qos = QOS0;
    40ec:	19 82       	std	Y+1, r1	; 0x01
	pubMessage.id = mes_id++;
    40ee:	80 91 8a 1b 	lds	r24, 0x1B8A	; 0x801b8a <mes_id>
    40f2:	90 91 8b 1b 	lds	r25, 0x1B8B	; 0x801b8b <mes_id+0x1>
    40f6:	9c 01       	movw	r18, r24
    40f8:	2f 5f       	subi	r18, 0xFF	; 255
    40fa:	3f 4f       	sbci	r19, 0xFF	; 255
    40fc:	30 93 8b 1b 	sts	0x1B8B, r19	; 0x801b8b <mes_id+0x1>
    4100:	20 93 8a 1b 	sts	0x1B8A, r18	; 0x801b8a <mes_id>
    4104:	9d 83       	std	Y+5, r25	; 0x05
    4106:	8c 83       	std	Y+4, r24	; 0x04
	pubMessage.payloadlen = (size_t)mqtt_msg_len;
    4108:	b9 86       	std	Y+9, r11	; 0x09
    410a:	a8 86       	std	Y+8, r10	; 0x08
	pubMessage.payload = mqtt_msg;
    410c:	df 82       	std	Y+7, r13	; 0x07
    410e:	ce 82       	std	Y+6, r12	; 0x06
	mqtt_rc = MQTTPublish(mqtt_client, mqtt_topic , &pubMessage);
    4110:	ae 01       	movw	r20, r28
    4112:	4f 5f       	subi	r20, 0xFF	; 255
    4114:	5f 4f       	sbci	r21, 0xFF	; 255
    4116:	b7 01       	movw	r22, r14
    4118:	c8 01       	movw	r24, r16
    411a:	0e 94 3e 14 	call	0x287c	; 0x287c <MQTTPublish>
	//Analize MQTT publish result (for MQTT failover mode)
	if (mqtt_rc == SUCCESSS)
    411e:	0f 90       	pop	r0
    4120:	0f 90       	pop	r0
    4122:	0f 90       	pop	r0
    4124:	0f 90       	pop	r0
    4126:	0f 90       	pop	r0
    4128:	0f 90       	pop	r0
    412a:	67 2b       	or	r22, r23
    412c:	68 2b       	or	r22, r24
    412e:	69 2b       	or	r22, r25
    4130:	59 f4       	brne	.+22     	; 0x4148 <mqtt_pub+0xc4>
	{
		mqtt_err_cnt  = 0;
    4132:	10 92 9d 04 	sts	0x049D, r1	; 0x80049d <mqtt_err_cnt.3508>
		PRINTF(" - OK\r\n");
    4136:	8f eb       	ldi	r24, 0xBF	; 191
    4138:	93 e0       	ldi	r25, 0x03	; 3
    413a:	9f 93       	push	r25
    413c:	8f 93       	push	r24
    413e:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>
    4142:	0f 90       	pop	r0
    4144:	0f 90       	pop	r0
    4146:	19 c0       	rjmp	.+50     	; 0x417a <mqtt_pub+0xf6>
	}
	else
	{
		PRINTF(" - ERROR\r\n");
    4148:	84 eb       	ldi	r24, 0xB4	; 180
    414a:	93 e0       	ldi	r25, 0x03	; 3
    414c:	9f 93       	push	r25
    414e:	8f 93       	push	r24
    4150:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>
		//Reboot device after 20 continuous errors (~ 20sec)
		if(mqtt_err_cnt++ > 20)
    4154:	80 91 9d 04 	lds	r24, 0x049D	; 0x80049d <mqtt_err_cnt.3508>
    4158:	91 e0       	ldi	r25, 0x01	; 1
    415a:	98 0f       	add	r25, r24
    415c:	90 93 9d 04 	sts	0x049D, r25	; 0x80049d <mqtt_err_cnt.3508>
    4160:	0f 90       	pop	r0
    4162:	0f 90       	pop	r0
    4164:	85 31       	cpi	r24, 0x15	; 21
    4166:	48 f0       	brcs	.+18     	; 0x417a <mqtt_pub+0xf6>
		{
			PRINTF("Connection with MQTT Broker was lost!!\r\nReboot the board..\r\n");
    4168:	87 e7       	ldi	r24, 0x77	; 119
    416a:	93 e0       	ldi	r25, 0x03	; 3
    416c:	9f 93       	push	r25
    416e:	8f 93       	push	r24
    4170:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>
    4174:	0f 90       	pop	r0
    4176:	0f 90       	pop	r0
    4178:	ff cf       	rjmp	.-2      	; 0x4178 <mqtt_pub+0xf4>
			while(1);
		}
	}
}
    417a:	29 96       	adiw	r28, 0x09	; 9
    417c:	0f b6       	in	r0, 0x3f	; 63
    417e:	f8 94       	cli
    4180:	de bf       	out	0x3e, r29	; 62
    4182:	0f be       	out	0x3f, r0	; 63
    4184:	cd bf       	out	0x3d, r28	; 61
    4186:	df 91       	pop	r29
    4188:	cf 91       	pop	r28
    418a:	1f 91       	pop	r17
    418c:	0f 91       	pop	r16
    418e:	ff 90       	pop	r15
    4190:	ef 90       	pop	r14
    4192:	df 90       	pop	r13
    4194:	cf 90       	pop	r12
    4196:	bf 90       	pop	r11
    4198:	af 90       	pop	r10
    419a:	08 95       	ret

0000419c <__vector_21>:


//******************* MILLIS ENGINE: BEGIN
//ISR (TIMER0_COMP_vect )
ISR (TIMER0_COMPA_vect)
{
    419c:	1f 92       	push	r1
    419e:	0f 92       	push	r0
    41a0:	0f b6       	in	r0, 0x3f	; 63
    41a2:	0f 92       	push	r0
    41a4:	11 24       	eor	r1, r1
    41a6:	8f 93       	push	r24
    41a8:	9f 93       	push	r25
    41aa:	af 93       	push	r26
    41ac:	bf 93       	push	r27
	// Compare match Timer0
	// Here every 1ms
	_millis++; // INC millis tick
    41ae:	80 91 86 19 	lds	r24, 0x1986	; 0x801986 <_millis>
    41b2:	90 91 87 19 	lds	r25, 0x1987	; 0x801987 <_millis+0x1>
    41b6:	a0 91 88 19 	lds	r26, 0x1988	; 0x801988 <_millis+0x2>
    41ba:	b0 91 89 19 	lds	r27, 0x1989	; 0x801989 <_millis+0x3>
    41be:	01 96       	adiw	r24, 0x01	; 1
    41c0:	a1 1d       	adc	r26, r1
    41c2:	b1 1d       	adc	r27, r1
    41c4:	80 93 86 19 	sts	0x1986, r24	; 0x801986 <_millis>
    41c8:	90 93 87 19 	sts	0x1987, r25	; 0x801987 <_millis+0x1>
    41cc:	a0 93 88 19 	sts	0x1988, r26	; 0x801988 <_millis+0x2>
    41d0:	b0 93 89 19 	sts	0x1989, r27	; 0x801989 <_millis+0x3>
}
    41d4:	bf 91       	pop	r27
    41d6:	af 91       	pop	r26
    41d8:	9f 91       	pop	r25
    41da:	8f 91       	pop	r24
    41dc:	0f 90       	pop	r0
    41de:	0f be       	out	0x3f, r0	; 63
    41e0:	0f 90       	pop	r0
    41e2:	1f 90       	pop	r1
    41e4:	18 95       	reti

000041e6 <millis>:

unsigned long millis(void)
{
	unsigned long i;
	cli();
    41e6:	f8 94       	cli
	// Atomic tick reading
	i = _millis;
    41e8:	60 91 86 19 	lds	r22, 0x1986	; 0x801986 <_millis>
    41ec:	70 91 87 19 	lds	r23, 0x1987	; 0x801987 <_millis+0x1>
    41f0:	80 91 88 19 	lds	r24, 0x1988	; 0x801988 <_millis+0x2>
    41f4:	90 91 89 19 	lds	r25, 0x1989	; 0x801989 <_millis+0x3>
	sei();
    41f8:	78 94       	sei
	return i;
}
    41fa:	08 95       	ret

000041fc <IO_LIBRARY_Init>:
	for (uint16_t var = 0; var < len; var++) {
		SPI_WRITE(*buf++);
	}
}

void IO_LIBRARY_Init(void) {
    41fc:	cf 93       	push	r28
    41fe:	df 93       	push	r29
    4200:	cd b7       	in	r28, 0x3d	; 61
    4202:	de b7       	in	r29, 0x3e	; 62
    4204:	28 97       	sbiw	r28, 0x08	; 8
    4206:	0f b6       	in	r0, 0x3f	; 63
    4208:	f8 94       	cli
    420a:	de bf       	out	0x3e, r29	; 62
    420c:	0f be       	out	0x3f, r0	; 63
    420e:	cd bf       	out	0x3d, r28	; 61
	uint8_t bufSize[] = {2, 2, 2, 2, 2, 2, 2, 2};
    4210:	88 e0       	ldi	r24, 0x08	; 8
    4212:	e7 ec       	ldi	r30, 0xC7	; 199
    4214:	f2 e0       	ldi	r31, 0x02	; 2
    4216:	de 01       	movw	r26, r28
    4218:	11 96       	adiw	r26, 0x01	; 1
    421a:	01 90       	ld	r0, Z+
    421c:	0d 92       	st	X+, r0
    421e:	8a 95       	dec	r24
    4220:	e1 f7       	brne	.-8      	; 0x421a <IO_LIBRARY_Init+0x1e>

	reg_wizchip_cs_cbfunc(cs_sel, cs_desel);
    4222:	68 ea       	ldi	r22, 0xA8	; 168
    4224:	7f e1       	ldi	r23, 0x1F	; 31
    4226:	84 ea       	ldi	r24, 0xA4	; 164
    4228:	9f e1       	ldi	r25, 0x1F	; 31
    422a:	0e 94 5e 0a 	call	0x14bc	; 0x14bc <reg_wizchip_cs_cbfunc>
	reg_wizchip_spi_cbfunc(spi_rb, spi_wb);
    422e:	62 eb       	ldi	r22, 0xB2	; 178
    4230:	7f e1       	ldi	r23, 0x1F	; 31
    4232:	8c ea       	ldi	r24, 0xAC	; 172
    4234:	9f e1       	ldi	r25, 0x1F	; 31
    4236:	0e 94 75 0a 	call	0x14ea	; 0x14ea <reg_wizchip_spi_cbfunc>
	reg_wizchip_spiburst_cbfunc(spi_rb_burst, spi_wb_burst);
    423a:	68 ec       	ldi	r22, 0xC8	; 200
    423c:	7f e1       	ldi	r23, 0x1F	; 31
    423e:	87 eb       	ldi	r24, 0xB7	; 183
    4240:	9f e1       	ldi	r25, 0x1F	; 31
    4242:	0e 94 92 0a 	call	0x1524	; 0x1524 <reg_wizchip_spiburst_cbfunc>

	wizchip_init(bufSize, bufSize);
    4246:	be 01       	movw	r22, r28
    4248:	6f 5f       	subi	r22, 0xFF	; 255
    424a:	7f 4f       	sbci	r23, 0xFF	; 255
    424c:	cb 01       	movw	r24, r22
    424e:	0e 94 1b 0b 	call	0x1636	; 0x1636 <wizchip_init>
	wizchip_setnetinfo(&netInfo);
    4252:	81 e3       	ldi	r24, 0x31	; 49
    4254:	92 e0       	ldi	r25, 0x02	; 2
    4256:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <wizchip_setnetinfo>
	//wizchip_setinterruptmask(IK_SOCK_0);
}
    425a:	28 96       	adiw	r28, 0x08	; 8
    425c:	0f b6       	in	r0, 0x3f	; 63
    425e:	f8 94       	cli
    4260:	de bf       	out	0x3e, r29	; 62
    4262:	0f be       	out	0x3f, r0	; 63
    4264:	cd bf       	out	0x3d, r28	; 61
    4266:	df 91       	pop	r29
    4268:	cf 91       	pop	r28
    426a:	08 95       	ret

0000426c <timer0_init>:
	TCCR0 = (1<<CS02)|(1<<WGM01); //TIMER0 SET-UP: CTC MODE & PS 1:64
	OCR0 = 249; // 1ms reach for clear (16mz:64=>250kHz:250-=>1kHz)
	TIMSK |= 1<<OCIE0;	 //IRQ on TIMER0 output compare
	 */
	//For M664p
	cli();
    426c:	f8 94       	cli
	TCCR0A = 0; TCCR0B = 0; TIMSK0 =  0;
    426e:	14 bc       	out	0x24, r1	; 36
    4270:	15 bc       	out	0x25, r1	; 37
    4272:	ee e6       	ldi	r30, 0x6E	; 110
    4274:	f0 e0       	ldi	r31, 0x00	; 0
    4276:	10 82       	st	Z, r1
	
	TCCR0A = (1<<WGM01); //TIMER0 SET-UP: CTC MODE
    4278:	82 e0       	ldi	r24, 0x02	; 2
    427a:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1<<CS01)|(1<<CS00); // PS 1:64
    427c:	83 e0       	ldi	r24, 0x03	; 3
    427e:	85 bd       	out	0x25, r24	; 37
	OCR0A = 249; // 1ms reach for clear (16mz:64=>250kHz:250-=>1kHz)
    4280:	89 ef       	ldi	r24, 0xF9	; 249
    4282:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= 1<<OCIE0A;	 //IRQ on TIMER0 output compareA
    4284:	80 81       	ld	r24, Z
    4286:	82 60       	ori	r24, 0x02	; 2
    4288:	80 83       	st	Z, r24
	sei();
    428a:	78 94       	sei
    428c:	08 95       	ret

0000428e <avr_init>:
				: "r0"
		);
	}
	else
	{
		__asm__ __volatile__ (
    428e:	99 e2       	ldi	r25, 0x29	; 41
    4290:	88 e1       	ldi	r24, 0x18	; 24
    4292:	0f b6       	in	r0, 0x3f	; 63
    4294:	f8 94       	cli
    4296:	a8 95       	wdr
    4298:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    429c:	0f be       	out	0x3f, r0	; 63
    429e:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
static void avr_init(void)
{
	// Initialize device here.
	// WatchDog INIT
	wdt_enable(WDTO_8S);  // set up wdt reset interval 2 second
	wdt_reset(); // wdt reset ~ every <2000ms
    42a2:	a8 95       	wdr

	timer0_init();// Timer0 millis engine init
    42a4:	e3 df       	rcall	.-58     	; 0x426c <timer0_init>
	 *  uart1_BAUD_SELECT() (normal speed mode )
	 *  or
	 *  uart1_BAUD_SELECT_DOUBLE_SPEED() ( double speed mode)
	 */

	UART_init( UART_BAUD_RATE );
    42a6:	80 e0       	ldi	r24, 0x00	; 0
    42a8:	96 e9       	ldi	r25, 0x96	; 150
    42aa:	0e 94 f9 2e 	call	0x5df2	; 0x5df2 <UART_init>
	// Define Output/Input Stream
	stdout = &uart_str;
    42ae:	83 e2       	ldi	r24, 0x23	; 35
    42b0:	92 e0       	ldi	r25, 0x02	; 2
    42b2:	90 93 bc 1c 	sts	0x1CBC, r25	; 0x801cbc <__iob+0x3>
    42b6:	80 93 bb 1c 	sts	0x1CBB, r24	; 0x801cbb <__iob+0x2>
	sei(); //re-enable global interrupts
    42ba:	78 94       	sei
    42bc:	08 95       	ret

000042be <print_network_information>:

	return;
}

void print_network_information(void)
{
    42be:	0f 93       	push	r16
    42c0:	1f 93       	push	r17
    42c2:	cf 93       	push	r28
    42c4:	df 93       	push	r29
    42c6:	cd b7       	in	r28, 0x3d	; 61
    42c8:	de b7       	in	r29, 0x3e	; 62
    42ca:	6d 97       	sbiw	r28, 0x1d	; 29
    42cc:	0f b6       	in	r0, 0x3f	; 63
    42ce:	f8 94       	cli
    42d0:	de bf       	out	0x3e, r29	; 62
    42d2:	0f be       	out	0x3f, r0	; 63
    42d4:	cd bf       	out	0x3d, r28	; 61

	uint8_t tmpstr[6] = {0,};
    42d6:	8e 01       	movw	r16, r28
    42d8:	0f 5f       	subi	r16, 0xFF	; 255
    42da:	1f 4f       	sbci	r17, 0xFF	; 255
    42dc:	86 e0       	ldi	r24, 0x06	; 6
    42de:	f8 01       	movw	r30, r16
    42e0:	11 92       	st	Z+, r1
    42e2:	8a 95       	dec	r24
    42e4:	e9 f7       	brne	.-6      	; 0x42e0 <print_network_information+0x22>
	ctlwizchip(CW_GET_ID,(void*)tmpstr); // Get WIZCHIP name
    42e6:	b8 01       	movw	r22, r16
    42e8:	88 e0       	ldi	r24, 0x08	; 8
    42ea:	0e 94 86 0c 	call	0x190c	; 0x190c <ctlwizchip>
    PRINTF("\r\n=======================================\r\n");
    42ee:	8b ea       	ldi	r24, 0xAB	; 171
    42f0:	92 e0       	ldi	r25, 0x02	; 2
    42f2:	9f 93       	push	r25
    42f4:	8f 93       	push	r24
    42f6:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>
    PRINTF(" WIZnet chip:  %s \r\n", tmpstr);
    42fa:	1f 93       	push	r17
    42fc:	0f 93       	push	r16
    42fe:	86 e9       	ldi	r24, 0x96	; 150
    4300:	92 e0       	ldi	r25, 0x02	; 2
    4302:	9f 93       	push	r25
    4304:	8f 93       	push	r24
    4306:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>
    PRINTF("=======================================\r\n");
    430a:	8c e6       	ldi	r24, 0x6C	; 108
    430c:	92 e0       	ldi	r25, 0x02	; 2
    430e:	9f 93       	push	r25
    4310:	8f 93       	push	r24
    4312:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>

	wiz_NetInfo gWIZNETINFO;
	wizchip_getnetinfo(&gWIZNETINFO);
    4316:	ce 01       	movw	r24, r28
    4318:	07 96       	adiw	r24, 0x07	; 7
    431a:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <wizchip_getnetinfo>
	if (gWIZNETINFO.dhcp == NETINFO_STATIC)
    431e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4320:	0f b6       	in	r0, 0x3f	; 63
    4322:	f8 94       	cli
    4324:	de bf       	out	0x3e, r29	; 62
    4326:	0f be       	out	0x3f, r0	; 63
    4328:	cd bf       	out	0x3d, r28	; 61
    432a:	81 30       	cpi	r24, 0x01	; 1
    432c:	49 f4       	brne	.+18     	; 0x4340 <print_network_information+0x82>
		PRINTF("STATIC IP\r\n");
    432e:	80 e6       	ldi	r24, 0x60	; 96
    4330:	92 e0       	ldi	r25, 0x02	; 2
    4332:	9f 93       	push	r25
    4334:	8f 93       	push	r24
    4336:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>
    433a:	0f 90       	pop	r0
    433c:	0f 90       	pop	r0
    433e:	08 c0       	rjmp	.+16     	; 0x4350 <print_network_information+0x92>
	else
		PRINTF("DHCP IP\r\n");
    4340:	86 e5       	ldi	r24, 0x56	; 86
    4342:	92 e0       	ldi	r25, 0x02	; 2
    4344:	9f 93       	push	r25
    4346:	8f 93       	push	r24
    4348:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>
    434c:	0f 90       	pop	r0
    434e:	0f 90       	pop	r0
	printf("Mac address: %02x:%02x:%02x:%02x:%02x:%02x\n\r",gWIZNETINFO.mac[0],gWIZNETINFO.mac[1],gWIZNETINFO.mac[2],gWIZNETINFO.mac[3],gWIZNETINFO.mac[4],gWIZNETINFO.mac[5]);
    4350:	5c 85       	ldd	r21, Y+12	; 0x0c
    4352:	4b 85       	ldd	r20, Y+11	; 0x0b
    4354:	3a 85       	ldd	r19, Y+10	; 0x0a
    4356:	29 85       	ldd	r18, Y+9	; 0x09
    4358:	98 85       	ldd	r25, Y+8	; 0x08
    435a:	8f 81       	ldd	r24, Y+7	; 0x07
    435c:	1f 92       	push	r1
    435e:	5f 93       	push	r21
    4360:	1f 92       	push	r1
    4362:	4f 93       	push	r20
    4364:	1f 92       	push	r1
    4366:	3f 93       	push	r19
    4368:	1f 92       	push	r1
    436a:	2f 93       	push	r18
    436c:	1f 92       	push	r1
    436e:	9f 93       	push	r25
    4370:	1f 92       	push	r1
    4372:	8f 93       	push	r24
    4374:	88 e1       	ldi	r24, 0x18	; 24
    4376:	93 e0       	ldi	r25, 0x03	; 3
    4378:	9f 93       	push	r25
    437a:	8f 93       	push	r24
    437c:	0e 94 a7 34 	call	0x694e	; 0x694e <printf>
	printf("IP address : %d.%d.%d.%d\n\r",gWIZNETINFO.ip[0],gWIZNETINFO.ip[1],gWIZNETINFO.ip[2],gWIZNETINFO.ip[3]);
    4380:	38 89       	ldd	r19, Y+16	; 0x10
    4382:	2f 85       	ldd	r18, Y+15	; 0x0f
    4384:	9e 85       	ldd	r25, Y+14	; 0x0e
    4386:	8d 85       	ldd	r24, Y+13	; 0x0d
    4388:	1f 92       	push	r1
    438a:	3f 93       	push	r19
    438c:	1f 92       	push	r1
    438e:	2f 93       	push	r18
    4390:	1f 92       	push	r1
    4392:	9f 93       	push	r25
    4394:	1f 92       	push	r1
    4396:	8f 93       	push	r24
    4398:	85 e4       	ldi	r24, 0x45	; 69
    439a:	93 e0       	ldi	r25, 0x03	; 3
    439c:	9f 93       	push	r25
    439e:	8f 93       	push	r24
    43a0:	0e 94 a7 34 	call	0x694e	; 0x694e <printf>
	printf("SM Mask	   : %d.%d.%d.%d\n\r",gWIZNETINFO.sn[0],gWIZNETINFO.sn[1],gWIZNETINFO.sn[2],gWIZNETINFO.sn[3]);
    43a4:	3c 89       	ldd	r19, Y+20	; 0x14
    43a6:	2b 89       	ldd	r18, Y+19	; 0x13
    43a8:	9a 89       	ldd	r25, Y+18	; 0x12
    43aa:	89 89       	ldd	r24, Y+17	; 0x11
    43ac:	1f 92       	push	r1
    43ae:	3f 93       	push	r19
    43b0:	1f 92       	push	r1
    43b2:	2f 93       	push	r18
    43b4:	1f 92       	push	r1
    43b6:	9f 93       	push	r25
    43b8:	1f 92       	push	r1
    43ba:	8f 93       	push	r24
    43bc:	80 e6       	ldi	r24, 0x60	; 96
    43be:	93 e0       	ldi	r25, 0x03	; 3
    43c0:	9f 93       	push	r25
    43c2:	8f 93       	push	r24
    43c4:	0e 94 a7 34 	call	0x694e	; 0x694e <printf>
	printf("Gate way   : %d.%d.%d.%d\n\r",gWIZNETINFO.gw[0],gWIZNETINFO.gw[1],gWIZNETINFO.gw[2],gWIZNETINFO.gw[3]);
    43c8:	38 8d       	ldd	r19, Y+24	; 0x18
    43ca:	2f 89       	ldd	r18, Y+23	; 0x17
    43cc:	9e 89       	ldd	r25, Y+22	; 0x16
    43ce:	8d 89       	ldd	r24, Y+21	; 0x15
    43d0:	0f b6       	in	r0, 0x3f	; 63
    43d2:	f8 94       	cli
    43d4:	de bf       	out	0x3e, r29	; 62
    43d6:	0f be       	out	0x3f, r0	; 63
    43d8:	cd bf       	out	0x3d, r28	; 61
    43da:	1f 92       	push	r1
    43dc:	3f 93       	push	r19
    43de:	1f 92       	push	r1
    43e0:	2f 93       	push	r18
    43e2:	1f 92       	push	r1
    43e4:	9f 93       	push	r25
    43e6:	1f 92       	push	r1
    43e8:	8f 93       	push	r24
    43ea:	8b e7       	ldi	r24, 0x7B	; 123
    43ec:	93 e0       	ldi	r25, 0x03	; 3
    43ee:	9f 93       	push	r25
    43f0:	8f 93       	push	r24
    43f2:	0e 94 a7 34 	call	0x694e	; 0x694e <printf>
	printf("DNS Server : %d.%d.%d.%d\n\r",gWIZNETINFO.dns[0],gWIZNETINFO.dns[1],gWIZNETINFO.dns[2],gWIZNETINFO.dns[3]);
    43f6:	3c 8d       	ldd	r19, Y+28	; 0x1c
    43f8:	2b 8d       	ldd	r18, Y+27	; 0x1b
    43fa:	9a 8d       	ldd	r25, Y+26	; 0x1a
    43fc:	89 8d       	ldd	r24, Y+25	; 0x19
    43fe:	1f 92       	push	r1
    4400:	3f 93       	push	r19
    4402:	1f 92       	push	r1
    4404:	2f 93       	push	r18
    4406:	1f 92       	push	r1
    4408:	9f 93       	push	r25
    440a:	1f 92       	push	r1
    440c:	8f 93       	push	r24
    440e:	86 e9       	ldi	r24, 0x96	; 150
    4410:	93 e0       	ldi	r25, 0x03	; 3
    4412:	9f 93       	push	r25
    4414:	8f 93       	push	r24
    4416:	0e 94 a7 34 	call	0x694e	; 0x694e <printf>
}
    441a:	0f b6       	in	r0, 0x3f	; 63
    441c:	f8 94       	cli
    441e:	de bf       	out	0x3e, r29	; 62
    4420:	0f be       	out	0x3f, r0	; 63
    4422:	cd bf       	out	0x3d, r28	; 61
    4424:	6d 96       	adiw	r28, 0x1d	; 29
    4426:	0f b6       	in	r0, 0x3f	; 63
    4428:	f8 94       	cli
    442a:	de bf       	out	0x3e, r29	; 62
    442c:	0f be       	out	0x3f, r0	; 63
    442e:	cd bf       	out	0x3d, r28	; 61
    4430:	df 91       	pop	r29
    4432:	cf 91       	pop	r28
    4434:	1f 91       	pop	r17
    4436:	0f 91       	pop	r16
    4438:	08 95       	ret

0000443a <main>:
			seq_query,\
			len_query);
}*/

int main()
{
    443a:	cf 93       	push	r28
    443c:	df 93       	push	r29
    443e:	cd b7       	in	r28, 0x3d	; 61
    4440:	de b7       	in	r29, 0x3e	; 62
    4442:	c4 5f       	subi	r28, 0xF4	; 244
    4444:	d1 09       	sbc	r29, r1
    4446:	0f b6       	in	r0, 0x3f	; 63
    4448:	f8 94       	cli
    444a:	de bf       	out	0x3e, r29	; 62
    444c:	0f be       	out	0x3f, r0	; 63
    444e:	cd bf       	out	0x3d, r28	; 61
	
	//uint8_t prev_sw1 = 1; // VAR for sw1 pressing detect
	SYS_Init();
    4450:	0e 94 dd 2d 	call	0x5bba	; 0x5bba <SYS_Init>
	// INIT MCU
	avr_init();
    4454:	1c df       	rcall	.-456    	; 0x428e <avr_init>
	spi_init(); //SPI Master, MODE0, 4Mhz(DIV4), CS_PB.3=HIGH - suitable for WIZNET 5x00(1/2/5)
    4456:	3e d1       	rcall	.+636    	; 0x46d4 <spi_init>

	// Print program metrics
	//PRINTF("%S", str_prog_name);// ???????? ?????????
	//PRINTF("Compiled at: %S %S\r\n", compile_time, compile_date);// ????? ???? ??????????
	//PRINTF(">> MCU is: %S; CLK is: %luHz\r\n", str_mcu, F_CPU);// MCU Name && FREQ
	PRINTF(">> Free RAM is: %d bytes\r\n", freeRam());
    4458:	5e dd       	rcall	.-1348   	; 0x3f16 <freeRam>
    445a:	9f 93       	push	r25
    445c:	8f 93       	push	r24
    445e:	8c e5       	ldi	r24, 0x5C	; 92
    4460:	93 e0       	ldi	r25, 0x03	; 3
    4462:	9f 93       	push	r25
    4464:	8f 93       	push	r24
    4466:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>
    446a:	0f 90       	pop	r0

	//Short Blink LED 3 times on startup
	unsigned char i = 3;
	while(i--)
    446c:	0f 90       	pop	r0
    446e:	0f 90       	pop	r0
    4470:	0f 90       	pop	r0
    4472:	83 e0       	ldi	r24, 0x03	; 3
	//PRINTF("Compiled at: %S %S\r\n", compile_time, compile_date);// ????? ???? ??????????
	//PRINTF(">> MCU is: %S; CLK is: %luHz\r\n", str_mcu, F_CPU);// MCU Name && FREQ
	PRINTF(">> Free RAM is: %d bytes\r\n", freeRam());

	//Short Blink LED 3 times on startup
	unsigned char i = 3;
    4474:	1a c0       	rjmp	.+52     	; 0x44aa <main+0x70>
	while(i--)
    4476:	85 b1       	in	r24, 0x05	; 5
	{
		LED0ON;
    4478:	8f 7e       	andi	r24, 0xEF	; 239
    447a:	85 b9       	out	0x05, r24	; 5
    447c:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    447e:	30 e7       	ldi	r19, 0x70	; 112
    4480:	82 e0       	ldi	r24, 0x02	; 2
    4482:	21 50       	subi	r18, 0x01	; 1
    4484:	30 40       	sbci	r19, 0x00	; 0
    4486:	80 40       	sbci	r24, 0x00	; 0
    4488:	e1 f7       	brne	.-8      	; 0x4482 <main+0x48>
    448a:	00 c0       	rjmp	.+0      	; 0x448c <main+0x52>
    448c:	00 00       	nop
    448e:	85 b1       	in	r24, 0x05	; 5
		_delay_ms(100);
		LED0OFF;
    4490:	80 61       	ori	r24, 0x10	; 16
    4492:	85 b9       	out	0x05, r24	; 5
    4494:	2f ef       	ldi	r18, 0xFF	; 255
    4496:	33 ec       	ldi	r19, 0xC3	; 195
    4498:	89 e0       	ldi	r24, 0x09	; 9
    449a:	21 50       	subi	r18, 0x01	; 1
    449c:	30 40       	sbci	r19, 0x00	; 0
    449e:	80 40       	sbci	r24, 0x00	; 0
    44a0:	e1 f7       	brne	.-8      	; 0x449a <main+0x60>
    44a2:	00 c0       	rjmp	.+0      	; 0x44a4 <main+0x6a>
    44a4:	00 00       	nop
    44a6:	a8 95       	wdr
		_delay_ms(400);
		wdt_reset();
    44a8:	89 2f       	mov	r24, r25
	//PRINTF(">> MCU is: %S; CLK is: %luHz\r\n", str_mcu, F_CPU);// MCU Name && FREQ
	PRINTF(">> Free RAM is: %d bytes\r\n", freeRam());

	//Short Blink LED 3 times on startup
	unsigned char i = 3;
	while(i--)
    44aa:	9f ef       	ldi	r25, 0xFF	; 255
    44ac:	98 0f       	add	r25, r24
    44ae:	81 11       	cpse	r24, r1
		_delay_ms(400);
		wdt_reset();
	}

	//Wizchip WIZ5500 Ethernet initialize
	IO_LIBRARY_Init(); //After that ping must working
    44b0:	e2 cf       	rjmp	.-60     	; 0x4476 <main+0x3c>
    44b2:	a4 de       	rcall	.-696    	; 0x41fc <IO_LIBRARY_Init>
	print_network_information();
    44b4:	04 df       	rcall	.-504    	; 0x42be <print_network_information>
    44b6:	85 e0       	ldi	r24, 0x05	; 5
	//Find MQTT broker and connect with it
	uint8_t mqtt_buf[100];
	int32_t mqtt_rc = 0;
	Network mqtt_network;
	Client mqtt_client;
	mqtt_network.my_socket = SOCK_MQTT;
    44b8:	90 e0       	ldi	r25, 0x00	; 0
    44ba:	a0 e0       	ldi	r26, 0x00	; 0
    44bc:	b0 e0       	ldi	r27, 0x00	; 0
    44be:	a9 96       	adiw	r28, 0x29	; 41
    44c0:	8c af       	std	Y+60, r24	; 0x3c
    44c2:	9d af       	std	Y+61, r25	; 0x3d
    44c4:	ae af       	std	Y+62, r26	; 0x3e
    44c6:	bf af       	std	Y+63, r27	; 0x3f
    44c8:	a9 97       	sbiw	r28, 0x29	; 41
    44ca:	e8 e4       	ldi	r30, 0x48	; 72
	
	PRINTF(">>Trying connect to MQTT broker: %d.%d.%d.%d ..\r\n", mqtt_target[0], mqtt_target[1], mqtt_target[2], mqtt_target[3]);
    44cc:	f2 e0       	ldi	r31, 0x02	; 2
    44ce:	33 81       	ldd	r19, Z+3	; 0x03
    44d0:	22 81       	ldd	r18, Z+2	; 0x02
    44d2:	91 81       	ldd	r25, Z+1	; 0x01
    44d4:	80 81       	ld	r24, Z
    44d6:	1f 92       	push	r1
    44d8:	3f 93       	push	r19
    44da:	1f 92       	push	r1
    44dc:	2f 93       	push	r18
    44de:	1f 92       	push	r1
    44e0:	9f 93       	push	r25
    44e2:	1f 92       	push	r1
    44e4:	8f 93       	push	r24
    44e6:	8a e2       	ldi	r24, 0x2A	; 42
    44e8:	93 e0       	ldi	r25, 0x03	; 3
    44ea:	9f 93       	push	r25
    44ec:	8f 93       	push	r24
    44ee:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>
	NewNetwork(&mqtt_network);
    44f2:	ce 01       	movw	r24, r28
    44f4:	8b 59       	subi	r24, 0x9B	; 155
    44f6:	9f 4f       	sbci	r25, 0xFF	; 255
    44f8:	2d dc       	rcall	.-1958   	; 0x3d54 <NewNetwork>
    44fa:	4b e5       	ldi	r20, 0x5B	; 91
	ConnectNetwork(&mqtt_network, mqtt_target, 1883);
    44fc:	57 e0       	ldi	r21, 0x07	; 7
    44fe:	68 e4       	ldi	r22, 0x48	; 72
    4500:	72 e0       	ldi	r23, 0x02	; 2
    4502:	ce 01       	movw	r24, r28
    4504:	8b 59       	subi	r24, 0x9B	; 155
    4506:	9f 4f       	sbci	r25, 0xFF	; 255
    4508:	33 dc       	rcall	.-1946   	; 0x3d70 <ConnectNetwork>
    450a:	a1 2c       	mov	r10, r1
	MQTTClient(&mqtt_client, &mqtt_network, 1000, mqtt_buf, 100, mqtt_readBuffer, MQTT_BUFFER_SIZE);
    450c:	68 94       	set
    450e:	bb 24       	eor	r11, r11
    4510:	b1 f8       	bld	r11, 1
    4512:	0f 2e       	mov	r0, r31
    4514:	fa e8       	ldi	r31, 0x8A	; 138
    4516:	cf 2e       	mov	r12, r31
    4518:	f9 e1       	ldi	r31, 0x19	; 25
    451a:	df 2e       	mov	r13, r31
    451c:	f0 2d       	mov	r31, r0
    451e:	0f 2e       	mov	r0, r31
    4520:	f4 e6       	ldi	r31, 0x64	; 100
    4522:	ef 2e       	mov	r14, r31
    4524:	f1 2c       	mov	r15, r1
    4526:	f0 2d       	mov	r31, r0
    4528:	8e 01       	movw	r16, r28
    452a:	0f 5f       	subi	r16, 0xFF	; 255
    452c:	1f 4f       	sbci	r17, 0xFF	; 255
    452e:	28 ee       	ldi	r18, 0xE8	; 232
    4530:	33 e0       	ldi	r19, 0x03	; 3
    4532:	40 e0       	ldi	r20, 0x00	; 0
    4534:	50 e0       	ldi	r21, 0x00	; 0
    4536:	be 01       	movw	r22, r28
    4538:	6b 59       	subi	r22, 0x9B	; 155
    453a:	7f 4f       	sbci	r23, 0xFF	; 255
    453c:	ce 01       	movw	r24, r28
    453e:	81 59       	subi	r24, 0x91	; 145
    4540:	9f 4f       	sbci	r25, 0xFF	; 255
    4542:	0e 94 09 0e 	call	0x1c12	; 0x1c12 <MQTTClient>
    4546:	8b e3       	ldi	r24, 0x3B	; 59
	
	//Connection to MQTT broker
	MQTTPacket_connectData data = MQTTPacket_connectData_initializer;
    4548:	e1 ed       	ldi	r30, 0xD1	; 209
    454a:	f2 e0       	ldi	r31, 0x02	; 2
    454c:	de 01       	movw	r26, r28
    454e:	a8 55       	subi	r26, 0x58	; 88
    4550:	bf 4f       	sbci	r27, 0xFF	; 255
    4552:	01 90       	ld	r0, Z+
    4554:	0d 92       	st	X+, r0
    4556:	8a 95       	dec	r24
    4558:	e1 f7       	brne	.-8      	; 0x4552 <main+0x118>
    455a:	c6 54       	subi	r28, 0x46	; 70
	data.willFlag = 0;
    455c:	df 4f       	sbci	r29, 0xFF	; 255
    455e:	18 82       	st	Y, r1
    4560:	ca 5b       	subi	r28, 0xBA	; 186
    4562:	d0 40       	sbci	r29, 0x00	; 0
    4564:	84 e0       	ldi	r24, 0x04	; 4
	data.MQTTVersion = 4;//3;
    4566:	c2 55       	subi	r28, 0x52	; 82
    4568:	df 4f       	sbci	r29, 0xFF	; 255
    456a:	88 83       	st	Y, r24
    456c:	ce 5a       	subi	r28, 0xAE	; 174
    456e:	d0 40       	sbci	r29, 0x00	; 0
    4570:	81 eb       	ldi	r24, 0xB1	; 177
	data.clientID.cstring = (char*)"w5500_avr_client";
    4572:	93 e0       	ldi	r25, 0x03	; 3
    4574:	c1 55       	subi	r28, 0x51	; 81
    4576:	df 4f       	sbci	r29, 0xFF	; 255
    4578:	99 83       	std	Y+1, r25	; 0x01
    457a:	88 83       	st	Y, r24
    457c:	cf 5a       	subi	r28, 0xAF	; 175
    457e:	d0 40       	sbci	r29, 0x00	; 0
    4580:	82 ec       	ldi	r24, 0xC2	; 194
	data.username.cstring = (char*)"user1234";
    4582:	93 e0       	ldi	r25, 0x03	; 3
    4584:	cd 52       	subi	r28, 0x2D	; 45
    4586:	df 4f       	sbci	r29, 0xFF	; 255
    4588:	99 83       	std	Y+1, r25	; 0x01
    458a:	88 83       	st	Y, r24
    458c:	c3 5d       	subi	r28, 0xD3	; 211
    458e:	d0 40       	sbci	r29, 0x00	; 0
    4590:	8f ec       	ldi	r24, 0xCF	; 207
	data.password.cstring = (char*)"\0";
    4592:	92 e0       	ldi	r25, 0x02	; 2
    4594:	c5 52       	subi	r28, 0x25	; 37
    4596:	df 4f       	sbci	r29, 0xFF	; 255
    4598:	99 83       	std	Y+1, r25	; 0x01
    459a:	88 83       	st	Y, r24
    459c:	cb 5d       	subi	r28, 0xDB	; 219
    459e:	d0 40       	sbci	r29, 0x00	; 0
    45a0:	8c e3       	ldi	r24, 0x3C	; 60
	data.keepAliveInterval = 60;
    45a2:	90 e0       	ldi	r25, 0x00	; 0
    45a4:	c9 54       	subi	r28, 0x49	; 73
    45a6:	df 4f       	sbci	r29, 0xFF	; 255
    45a8:	99 83       	std	Y+1, r25	; 0x01
    45aa:	88 83       	st	Y, r24
    45ac:	c7 5b       	subi	r28, 0xB7	; 183
    45ae:	d0 40       	sbci	r29, 0x00	; 0
    45b0:	81 e0       	ldi	r24, 0x01	; 1
	data.cleansession = 1;
    45b2:	c7 54       	subi	r28, 0x47	; 71
    45b4:	df 4f       	sbci	r29, 0xFF	; 255
    45b6:	88 83       	st	Y, r24
    45b8:	c9 5b       	subi	r28, 0xB9	; 185
    45ba:	d0 40       	sbci	r29, 0x00	; 0
    45bc:	be 01       	movw	r22, r28
	mqtt_rc = MQTTConnect(&mqtt_client, &data);
    45be:	68 55       	subi	r22, 0x58	; 88
    45c0:	7f 4f       	sbci	r23, 0xFF	; 255
    45c2:	ce 01       	movw	r24, r28
    45c4:	81 59       	subi	r24, 0x91	; 145
    45c6:	9f 4f       	sbci	r25, 0xFF	; 255
    45c8:	0e 94 81 12 	call	0x2502	; 0x2502 <MQTTConnect>
    45cc:	0f b6       	in	r0, 0x3f	; 63
	if (mqtt_rc == SUCCESSS)
    45ce:	f8 94       	cli
    45d0:	de bf       	out	0x3e, r29	; 62
    45d2:	0f be       	out	0x3f, r0	; 63
    45d4:	cd bf       	out	0x3d, r28	; 61
    45d6:	61 15       	cp	r22, r1
    45d8:	71 05       	cpc	r23, r1
    45da:	81 05       	cpc	r24, r1
    45dc:	91 05       	cpc	r25, r1
    45de:	09 f0       	breq	.+2      	; 0x45e2 <main+0x1a8>
    45e0:	3f c0       	rjmp	.+126    	; 0x4660 <main+0x226>
    45e2:	9f 93       	push	r25
	{
		PRINTF("++MQTT Connected SUCCESS: %ld\r\n", mqtt_rc);
    45e4:	8f 93       	push	r24
    45e6:	7f 93       	push	r23
    45e8:	6f 93       	push	r22
    45ea:	8a e0       	ldi	r24, 0x0A	; 10
    45ec:	93 e0       	ldi	r25, 0x03	; 3
    45ee:	9f 93       	push	r25
    45f0:	8f 93       	push	r24
    45f2:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>
    45f6:	7e 01       	movw	r14, r28
		PRINTF("--MQTT Connected ERROR: %ld\r\n", mqtt_rc);
		while(1);//Reboot the board
	}
	
	// Subscribe to all topics
	char SubString[] = "/ssy/test/teplota";// Subscribe for all that begin from "/"
    45f8:	33 ee       	ldi	r19, 0xE3	; 227
    45fa:	e3 0e       	add	r14, r19
    45fc:	f1 1c       	adc	r15, r1
    45fe:	82 e1       	ldi	r24, 0x12	; 18
    4600:	e9 ed       	ldi	r30, 0xD9	; 217
    4602:	f3 e0       	ldi	r31, 0x03	; 3
    4604:	d7 01       	movw	r26, r14
    4606:	01 90       	ld	r0, Z+
    4608:	0d 92       	st	X+, r0
    460a:	8a 95       	dec	r24
    460c:	e1 f7       	brne	.-8      	; 0x4606 <main+0x1cc>
    460e:	2a ed       	ldi	r18, 0xDA	; 218
	mqtt_rc = MQTTSubscribe(&mqtt_client, SubString, QOS0, messageArrived);
    4610:	3f e1       	ldi	r19, 0x1F	; 31
    4612:	40 e0       	ldi	r20, 0x00	; 0
    4614:	b7 01       	movw	r22, r14
    4616:	ce 01       	movw	r24, r28
    4618:	81 59       	subi	r24, 0x91	; 145
    461a:	9f 4f       	sbci	r25, 0xFF	; 255
    461c:	0e 94 3c 13 	call	0x2678	; 0x2678 <MQTTSubscribe>
    4620:	9f 93       	push	r25
	PRINTF("Subscribed (%s) %d\r\n", SubString, mqtt_rc);
    4622:	8f 93       	push	r24
    4624:	7f 93       	push	r23
    4626:	6f 93       	push	r22
    4628:	ff 92       	push	r15
    462a:	ef 92       	push	r14
    462c:	85 ef       	ldi	r24, 0xF5	; 245
    462e:	92 e0       	ldi	r25, 0x02	; 2
    4630:	9f 93       	push	r25
    4632:	8f 93       	push	r24
    4634:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>

	uint32_t timer_mqtt_pub_1sec = millis();
    4638:	d6 dd       	rcall	.-1108   	; 0x41e6 <millis>
	/* Loopback Test: TCP Server and UDP */
	// Test for Ethernet data transfer validation
	uint32_t timer_link_1sec = millis();
    463a:	d5 dd       	rcall	.-1110   	; 0x41e6 <millis>
    463c:	6b 01       	movw	r12, r22
    463e:	7c 01       	movw	r14, r24
    4640:	2e e0       	ldi	r18, 0x0E	; 14
		printf("Socket number is correct\n\r");
	}
	else{
		printf("Socket number is incorrect\n\r");
	}*/
	mqtt_pub(&mqtt_client, PUBLISH_TEPLOTA_0, "AhojAhojCotTy", 14);
    4642:	30 e0       	ldi	r19, 0x00	; 0
    4644:	4b ec       	ldi	r20, 0xCB	; 203
    4646:	53 e0       	ldi	r21, 0x03	; 3
    4648:	69 ed       	ldi	r22, 0xD9	; 217
    464a:	73 e0       	ldi	r23, 0x03	; 3
    464c:	ce 01       	movw	r24, r28
    464e:	81 59       	subi	r24, 0x91	; 145
    4650:	9f 4f       	sbci	r25, 0xFF	; 255
    4652:	18 dd       	rcall	.-1488   	; 0x4084 <mqtt_pub>
    4654:	0f b6       	in	r0, 0x3f	; 63
    4656:	f8 94       	cli
    4658:	de bf       	out	0x3e, r29	; 62
    465a:	0f be       	out	0x3f, r0	; 63
    465c:	cd bf       	out	0x3d, r28	; 61
    465e:	11 c0       	rjmp	.+34     	; 0x4682 <main+0x248>
    4660:	9f 93       	push	r25
	{
		PRINTF("++MQTT Connected SUCCESS: %ld\r\n", mqtt_rc);
	}
	else
	{
		PRINTF("--MQTT Connected ERROR: %ld\r\n", mqtt_rc);
    4662:	8f 93       	push	r24
    4664:	7f 93       	push	r23
    4666:	6f 93       	push	r22
    4668:	87 ed       	ldi	r24, 0xD7	; 215
    466a:	92 e0       	ldi	r25, 0x02	; 2
    466c:	9f 93       	push	r25
    466e:	8f 93       	push	r24
    4670:	0e 94 ba 34 	call	0x6974	; 0x6974 <printf_P>
    4674:	0f 90       	pop	r0
    4676:	0f 90       	pop	r0
    4678:	0f 90       	pop	r0
    467a:	0f 90       	pop	r0
    467c:	0f 90       	pop	r0
    467e:	0f 90       	pop	r0
	}*/
	mqtt_pub(&mqtt_client, PUBLISH_TEPLOTA_0, "AhojAhojCotTy", 14);
	//sendto(socket_number,test,sizeof(test),ping_ip,42000);
	while(1)
	{	
		SYS_TaskHandler();
    4680:	ff cf       	rjmp	.-2      	; 0x4680 <main+0x246>
    4682:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <SYS_TaskHandler>
		HAL_UartTaskHandler();
    4686:	42 d1       	rcall	.+644    	; 0x490c <HAL_UartTaskHandler>
		APP_TaskHandler();
    4688:	3d dc       	rcall	.-1926   	; 0x3f04 <APP_TaskHandler>
		//Here at least every 1sec
		wdt_reset(); // WDT reset at least every sec
    468a:	a8 95       	wdr
//  			data_ready = 0;
//  		}
		

		// MQTT broker connection and sub receive
		MQTTYield(&mqtt_client, 100);//~100msec blocking here
    468c:	44 e6       	ldi	r20, 0x64	; 100
    468e:	50 e0       	ldi	r21, 0x00	; 0
    4690:	60 e0       	ldi	r22, 0x00	; 0
    4692:	70 e0       	ldi	r23, 0x00	; 0
    4694:	ce 01       	movw	r24, r28
    4696:	81 59       	subi	r24, 0x91	; 145
    4698:	9f 4f       	sbci	r25, 0xFF	; 255
    469a:	0e 94 0b 12 	call	0x2416	; 0x2416 <MQTTYield>
// 		}
// 
// 		//loopback_ret = loopback_tcpc(SOCK_TCPS, gDATABUF, destip, destport);
// 		//if(loopback_ret < 0) printf("loopback ret: %ld\r\n", loopback_ret); // TCP Socket Error code

		if((millis()-timer_link_1sec)> 1000)
    469e:	a3 dd       	rcall	.-1210   	; 0x41e6 <millis>
    46a0:	dc 01       	movw	r26, r24
    46a2:	cb 01       	movw	r24, r22
    46a4:	8c 19       	sub	r24, r12
    46a6:	9d 09       	sbc	r25, r13
    46a8:	ae 09       	sbc	r26, r14
    46aa:	bf 09       	sbc	r27, r15
    46ac:	89 3e       	cpi	r24, 0xE9	; 233
    46ae:	93 40       	sbci	r25, 0x03	; 3
    46b0:	a1 05       	cpc	r26, r1
    46b2:	b1 05       	cpc	r27, r1
    46b4:	30 f3       	brcs	.-52     	; 0x4682 <main+0x248>
		{
			//here every 1 sec
			timer_link_1sec = millis();
    46b6:	97 dd       	rcall	.-1234   	; 0x41e6 <millis>
    46b8:	6b 01       	movw	r12, r22
    46ba:	7c 01       	movw	r14, r24
    46bc:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <wizphy_getphylink>
			if(wizphy_getphylink() == PHY_LINK_ON)
    46c0:	81 30       	cpi	r24, 0x01	; 1
    46c2:	21 f4       	brne	.+8      	; 0x46cc <main+0x292>
    46c4:	85 b1       	in	r24, 0x05	; 5
			{
				LED0ON;
    46c6:	8f 7e       	andi	r24, 0xEF	; 239
    46c8:	85 b9       	out	0x05, r24	; 5
    46ca:	db cf       	rjmp	.-74     	; 0x4682 <main+0x248>
    46cc:	85 b1       	in	r24, 0x05	; 5
			}
			else
			{
				LED0OFF;
    46ce:	80 61       	ori	r24, 0x10	; 16
    46d0:	85 b9       	out	0x05, r24	; 5
    46d2:	d7 cf       	rjmp	.-82     	; 0x4682 <main+0x248>

000046d4 <spi_init>:
    46d4:	8a b1       	in	r24, 0x0a	; 10
    46d6:	80 61       	ori	r24, 0x10	; 16
    46d8:	8a b9       	out	0x0a, r24	; 10
    46da:	8b b1       	in	r24, 0x0b	; 11
    46dc:	80 61       	ori	r24, 0x10	; 16
    46de:	8b b9       	out	0x0b, r24	; 11
    46e0:	84 b1       	in	r24, 0x04	; 4
    46e2:	86 60       	ori	r24, 0x06	; 6
    46e4:	84 b9       	out	0x04, r24	; 4
    46e6:	85 b1       	in	r24, 0x05	; 5
    46e8:	86 60       	ori	r24, 0x06	; 6
    46ea:	85 b9       	out	0x05, r24	; 5
    46ec:	8a b1       	in	r24, 0x0a	; 10
    46ee:	80 64       	ori	r24, 0x40	; 64
    46f0:	8a b9       	out	0x0a, r24	; 10
    46f2:	80 e5       	ldi	r24, 0x50	; 80
    46f4:	8c bd       	out	0x2c, r24	; 44
    46f6:	1d bc       	out	0x2d, r1	; 45
    46f8:	08 95       	ret

000046fa <HAL_Init>:
    46fa:	14 be       	out	0x34, r1	; 52
		);
	}
	else
	{
        uint8_t register temp_reg;
		__asm__ __volatile__ (
    46fc:	0f b6       	in	r0, 0x3f	; 63
    46fe:	f8 94       	cli
    4700:	a8 95       	wdr
    4702:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    4706:	88 61       	ori	r24, 0x18	; 24
    4708:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    470c:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    4710:	0f be       	out	0x3f, r0	; 63
    4712:	e1 e6       	ldi	r30, 0x61	; 97
    4714:	f0 e0       	ldi	r31, 0x00	; 0
    4716:	80 e8       	ldi	r24, 0x80	; 128
    4718:	80 83       	st	Z, r24
    471a:	10 82       	st	Z, r1
    471c:	78 94       	sei
    471e:	01 c0       	rjmp	.+2      	; 0x4722 <HAL_TimerInit>
    4720:	08 95       	ret

00004722 <HAL_TimerInit>:
    4722:	10 92 8c 1c 	sts	0x1C8C, r1	; 0x801c8c <halTimerIrqCount>
    4726:	80 e1       	ldi	r24, 0x10	; 16
    4728:	97 e2       	ldi	r25, 0x27	; 39
    472a:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
    472e:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
    4732:	e1 ea       	ldi	r30, 0xA1	; 161
    4734:	f0 e0       	ldi	r31, 0x00	; 0
    4736:	88 e0       	ldi	r24, 0x08	; 8
    4738:	80 83       	st	Z, r24
    473a:	80 81       	ld	r24, Z
    473c:	82 60       	ori	r24, 0x02	; 2
    473e:	80 83       	st	Z, r24
    4740:	e2 e7       	ldi	r30, 0x72	; 114
    4742:	f0 e0       	ldi	r31, 0x00	; 0
    4744:	80 81       	ld	r24, Z
    4746:	82 60       	ori	r24, 0x02	; 2
    4748:	80 83       	st	Z, r24
    474a:	08 95       	ret

0000474c <__vector_42>:
    474c:	1f 92       	push	r1
    474e:	0f 92       	push	r0
    4750:	0f b6       	in	r0, 0x3f	; 63
    4752:	0f 92       	push	r0
    4754:	11 24       	eor	r1, r1
    4756:	8f 93       	push	r24
    4758:	80 91 8c 1c 	lds	r24, 0x1C8C	; 0x801c8c <halTimerIrqCount>
    475c:	8f 5f       	subi	r24, 0xFF	; 255
    475e:	80 93 8c 1c 	sts	0x1C8C, r24	; 0x801c8c <halTimerIrqCount>
    4762:	8f 91       	pop	r24
    4764:	0f 90       	pop	r0
    4766:	0f be       	out	0x3f, r0	; 63
    4768:	0f 90       	pop	r0
    476a:	1f 90       	pop	r1
    476c:	18 95       	reti

0000476e <__vector_13>:
    476e:	1f 92       	push	r1
    4770:	0f 92       	push	r0
    4772:	0f b6       	in	r0, 0x3f	; 63
    4774:	0f 92       	push	r0
    4776:	11 24       	eor	r1, r1
    4778:	8f 93       	push	r24
    477a:	81 e0       	ldi	r24, 0x01	; 1
    477c:	80 93 c1 04 	sts	0x04C1, r24	; 0x8004c1 <halSleepTimerEvent>
    4780:	8f 91       	pop	r24
    4782:	0f 90       	pop	r0
    4784:	0f be       	out	0x3f, r0	; 63
    4786:	0f 90       	pop	r0
    4788:	1f 90       	pop	r1
    478a:	18 95       	reti

0000478c <HAL_UartWriteByte>:
    478c:	cf 93       	push	r28
    478e:	df 93       	push	r29
    4790:	ee ec       	ldi	r30, 0xCE	; 206
    4792:	f4 e0       	ldi	r31, 0x04	; 4
    4794:	26 81       	ldd	r18, Z+6	; 0x06
    4796:	37 81       	ldd	r19, Z+7	; 0x07
    4798:	64 81       	ldd	r22, Z+4	; 0x04
    479a:	75 81       	ldd	r23, Z+5	; 0x05
    479c:	26 17       	cp	r18, r22
    479e:	37 07       	cpc	r19, r23
    47a0:	c9 f0       	breq	.+50     	; 0x47d4 <HAL_UartWriteByte+0x48>
    47a2:	c0 85       	ldd	r28, Z+8	; 0x08
    47a4:	d1 85       	ldd	r29, Z+9	; 0x09
    47a6:	42 81       	ldd	r20, Z+2	; 0x02
    47a8:	53 81       	ldd	r21, Z+3	; 0x03
    47aa:	da 01       	movw	r26, r20
    47ac:	11 96       	adiw	r26, 0x01	; 1
    47ae:	b3 83       	std	Z+3, r27	; 0x03
    47b0:	a2 83       	std	Z+2, r26	; 0x02
    47b2:	fe 01       	movw	r30, r28
    47b4:	e4 0f       	add	r30, r20
    47b6:	f5 1f       	adc	r31, r21
    47b8:	80 83       	st	Z, r24
    47ba:	6a 17       	cp	r22, r26
    47bc:	7b 07       	cpc	r23, r27
    47be:	21 f4       	brne	.+8      	; 0x47c8 <HAL_UartWriteByte+0x3c>
    47c0:	10 92 d1 04 	sts	0x04D1, r1	; 0x8004d1 <txFifo+0x3>
    47c4:	10 92 d0 04 	sts	0x04D0, r1	; 0x8004d0 <txFifo+0x2>
    47c8:	2f 5f       	subi	r18, 0xFF	; 255
    47ca:	3f 4f       	sbci	r19, 0xFF	; 255
    47cc:	30 93 d5 04 	sts	0x04D5, r19	; 0x8004d5 <txFifo+0x7>
    47d0:	20 93 d4 04 	sts	0x04D4, r18	; 0x8004d4 <txFifo+0x6>
    47d4:	df 91       	pop	r29
    47d6:	cf 91       	pop	r28
    47d8:	08 95       	ret

000047da <HAL_UartReadByte>:
    47da:	4f b7       	in	r20, 0x3f	; 63
    47dc:	f8 94       	cli
    47de:	e4 ec       	ldi	r30, 0xC4	; 196
    47e0:	f4 e0       	ldi	r31, 0x04	; 4
    47e2:	20 85       	ldd	r18, Z+8	; 0x08
    47e4:	31 85       	ldd	r19, Z+9	; 0x09
    47e6:	80 81       	ld	r24, Z
    47e8:	91 81       	ldd	r25, Z+1	; 0x01
    47ea:	bc 01       	movw	r22, r24
    47ec:	6f 5f       	subi	r22, 0xFF	; 255
    47ee:	7f 4f       	sbci	r23, 0xFF	; 255
    47f0:	71 83       	std	Z+1, r23	; 0x01
    47f2:	60 83       	st	Z, r22
    47f4:	d9 01       	movw	r26, r18
    47f6:	a8 0f       	add	r26, r24
    47f8:	b9 1f       	adc	r27, r25
    47fa:	8c 91       	ld	r24, X
    47fc:	60 81       	ld	r22, Z
    47fe:	71 81       	ldd	r23, Z+1	; 0x01
    4800:	24 81       	ldd	r18, Z+4	; 0x04
    4802:	35 81       	ldd	r19, Z+5	; 0x05
    4804:	62 17       	cp	r22, r18
    4806:	73 07       	cpc	r23, r19
    4808:	21 f4       	brne	.+8      	; 0x4812 <HAL_UartReadByte+0x38>
    480a:	10 92 c5 04 	sts	0x04C5, r1	; 0x8004c5 <rxFifo+0x1>
    480e:	10 92 c4 04 	sts	0x04C4, r1	; 0x8004c4 <rxFifo>
    4812:	e4 ec       	ldi	r30, 0xC4	; 196
    4814:	f4 e0       	ldi	r31, 0x04	; 4
    4816:	26 81       	ldd	r18, Z+6	; 0x06
    4818:	37 81       	ldd	r19, Z+7	; 0x07
    481a:	21 50       	subi	r18, 0x01	; 1
    481c:	31 09       	sbc	r19, r1
    481e:	37 83       	std	Z+7, r19	; 0x07
    4820:	26 83       	std	Z+6, r18	; 0x06
    4822:	4f bf       	out	0x3f, r20	; 63
    4824:	08 95       	ret

00004826 <__vector_37>:
    4826:	1f 92       	push	r1
    4828:	0f 92       	push	r0
    482a:	0f b6       	in	r0, 0x3f	; 63
    482c:	0f 92       	push	r0
    482e:	11 24       	eor	r1, r1
    4830:	0b b6       	in	r0, 0x3b	; 59
    4832:	0f 92       	push	r0
    4834:	8f 93       	push	r24
    4836:	ef 93       	push	r30
    4838:	ff 93       	push	r31
    483a:	81 e0       	ldi	r24, 0x01	; 1
    483c:	80 93 c3 04 	sts	0x04C3, r24	; 0x8004c3 <udrEmpty>
    4840:	e9 ec       	ldi	r30, 0xC9	; 201
    4842:	f0 e0       	ldi	r31, 0x00	; 0
    4844:	80 81       	ld	r24, Z
    4846:	8f 7d       	andi	r24, 0xDF	; 223
    4848:	80 83       	st	Z, r24
    484a:	ff 91       	pop	r31
    484c:	ef 91       	pop	r30
    484e:	8f 91       	pop	r24
    4850:	0f 90       	pop	r0
    4852:	0b be       	out	0x3b, r0	; 59
    4854:	0f 90       	pop	r0
    4856:	0f be       	out	0x3f, r0	; 63
    4858:	0f 90       	pop	r0
    485a:	1f 90       	pop	r1
    485c:	18 95       	reti

0000485e <__vector_36>:
    485e:	1f 92       	push	r1
    4860:	0f 92       	push	r0
    4862:	0f b6       	in	r0, 0x3f	; 63
    4864:	0f 92       	push	r0
    4866:	11 24       	eor	r1, r1
    4868:	0b b6       	in	r0, 0x3b	; 59
    486a:	0f 92       	push	r0
    486c:	2f 93       	push	r18
    486e:	3f 93       	push	r19
    4870:	4f 93       	push	r20
    4872:	5f 93       	push	r21
    4874:	6f 93       	push	r22
    4876:	7f 93       	push	r23
    4878:	8f 93       	push	r24
    487a:	9f 93       	push	r25
    487c:	af 93       	push	r26
    487e:	bf 93       	push	r27
    4880:	ef 93       	push	r30
    4882:	ff 93       	push	r31
    4884:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7c00c8>
    4888:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    488c:	8c 71       	andi	r24, 0x1C	; 28
    488e:	59 f5       	brne	.+86     	; 0x48e6 <__vector_36+0x88>
    4890:	e4 ec       	ldi	r30, 0xC4	; 196
    4892:	f4 e0       	ldi	r31, 0x04	; 4
    4894:	46 81       	ldd	r20, Z+6	; 0x06
    4896:	57 81       	ldd	r21, Z+7	; 0x07
    4898:	84 81       	ldd	r24, Z+4	; 0x04
    489a:	95 81       	ldd	r25, Z+5	; 0x05
    489c:	48 17       	cp	r20, r24
    489e:	59 07       	cpc	r21, r25
    48a0:	11 f1       	breq	.+68     	; 0x48e6 <__vector_36+0x88>
    48a2:	40 85       	ldd	r20, Z+8	; 0x08
    48a4:	51 85       	ldd	r21, Z+9	; 0x09
    48a6:	82 81       	ldd	r24, Z+2	; 0x02
    48a8:	93 81       	ldd	r25, Z+3	; 0x03
    48aa:	bc 01       	movw	r22, r24
    48ac:	6f 5f       	subi	r22, 0xFF	; 255
    48ae:	7f 4f       	sbci	r23, 0xFF	; 255
    48b0:	73 83       	std	Z+3, r23	; 0x03
    48b2:	62 83       	std	Z+2, r22	; 0x02
    48b4:	da 01       	movw	r26, r20
    48b6:	a8 0f       	add	r26, r24
    48b8:	b9 1f       	adc	r27, r25
    48ba:	2c 93       	st	X, r18
    48bc:	22 81       	ldd	r18, Z+2	; 0x02
    48be:	33 81       	ldd	r19, Z+3	; 0x03
    48c0:	84 81       	ldd	r24, Z+4	; 0x04
    48c2:	95 81       	ldd	r25, Z+5	; 0x05
    48c4:	28 17       	cp	r18, r24
    48c6:	39 07       	cpc	r19, r25
    48c8:	21 f4       	brne	.+8      	; 0x48d2 <__vector_36+0x74>
    48ca:	10 92 c7 04 	sts	0x04C7, r1	; 0x8004c7 <rxFifo+0x3>
    48ce:	10 92 c6 04 	sts	0x04C6, r1	; 0x8004c6 <rxFifo+0x2>
    48d2:	e4 ec       	ldi	r30, 0xC4	; 196
    48d4:	f4 e0       	ldi	r31, 0x04	; 4
    48d6:	86 81       	ldd	r24, Z+6	; 0x06
    48d8:	97 81       	ldd	r25, Z+7	; 0x07
    48da:	01 96       	adiw	r24, 0x01	; 1
    48dc:	97 83       	std	Z+7, r25	; 0x07
    48de:	86 83       	std	Z+6, r24	; 0x06
    48e0:	81 e0       	ldi	r24, 0x01	; 1
    48e2:	80 93 c2 04 	sts	0x04C2, r24	; 0x8004c2 <newData>
    48e6:	ff 91       	pop	r31
    48e8:	ef 91       	pop	r30
    48ea:	bf 91       	pop	r27
    48ec:	af 91       	pop	r26
    48ee:	9f 91       	pop	r25
    48f0:	8f 91       	pop	r24
    48f2:	7f 91       	pop	r23
    48f4:	6f 91       	pop	r22
    48f6:	5f 91       	pop	r21
    48f8:	4f 91       	pop	r20
    48fa:	3f 91       	pop	r19
    48fc:	2f 91       	pop	r18
    48fe:	0f 90       	pop	r0
    4900:	0b be       	out	0x3b, r0	; 59
    4902:	0f 90       	pop	r0
    4904:	0f be       	out	0x3f, r0	; 63
    4906:	0f 90       	pop	r0
    4908:	1f 90       	pop	r1
    490a:	18 95       	reti

0000490c <HAL_UartTaskHandler>:
    490c:	80 91 d4 04 	lds	r24, 0x04D4	; 0x8004d4 <txFifo+0x6>
    4910:	90 91 d5 04 	lds	r25, 0x04D5	; 0x8004d5 <txFifo+0x7>
    4914:	00 97       	sbiw	r24, 0x00	; 0
    4916:	69 f1       	breq	.+90     	; 0x4972 <HAL_UartTaskHandler+0x66>
    4918:	20 91 c3 04 	lds	r18, 0x04C3	; 0x8004c3 <udrEmpty>
    491c:	22 23       	and	r18, r18
    491e:	49 f1       	breq	.+82     	; 0x4972 <HAL_UartTaskHandler+0x66>
    4920:	ee ec       	ldi	r30, 0xCE	; 206
    4922:	f4 e0       	ldi	r31, 0x04	; 4
    4924:	60 85       	ldd	r22, Z+8	; 0x08
    4926:	71 85       	ldd	r23, Z+9	; 0x09
    4928:	20 81       	ld	r18, Z
    492a:	31 81       	ldd	r19, Z+1	; 0x01
    492c:	a9 01       	movw	r20, r18
    492e:	4f 5f       	subi	r20, 0xFF	; 255
    4930:	5f 4f       	sbci	r21, 0xFF	; 255
    4932:	51 83       	std	Z+1, r21	; 0x01
    4934:	40 83       	st	Z, r20
    4936:	db 01       	movw	r26, r22
    4938:	a2 0f       	add	r26, r18
    493a:	b3 1f       	adc	r27, r19
    493c:	2c 91       	ld	r18, X
    493e:	64 81       	ldd	r22, Z+4	; 0x04
    4940:	75 81       	ldd	r23, Z+5	; 0x05
    4942:	46 17       	cp	r20, r22
    4944:	57 07       	cpc	r21, r23
    4946:	21 f4       	brne	.+8      	; 0x4950 <HAL_UartTaskHandler+0x44>
    4948:	10 92 cf 04 	sts	0x04CF, r1	; 0x8004cf <txFifo+0x1>
    494c:	10 92 ce 04 	sts	0x04CE, r1	; 0x8004ce <txFifo>
    4950:	01 97       	sbiw	r24, 0x01	; 1
    4952:	90 93 d5 04 	sts	0x04D5, r25	; 0x8004d5 <txFifo+0x7>
    4956:	80 93 d4 04 	sts	0x04D4, r24	; 0x8004d4 <txFifo+0x6>
    495a:	9f b7       	in	r25, 0x3f	; 63
    495c:	f8 94       	cli
    495e:	20 93 ce 00 	sts	0x00CE, r18	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    4962:	e9 ec       	ldi	r30, 0xC9	; 201
    4964:	f0 e0       	ldi	r31, 0x00	; 0
    4966:	80 81       	ld	r24, Z
    4968:	80 62       	ori	r24, 0x20	; 32
    496a:	80 83       	st	Z, r24
    496c:	10 92 c3 04 	sts	0x04C3, r1	; 0x8004c3 <udrEmpty>
    4970:	9f bf       	out	0x3f, r25	; 63
    4972:	2f b7       	in	r18, 0x3f	; 63
    4974:	f8 94       	cli
    4976:	90 91 c2 04 	lds	r25, 0x04C2	; 0x8004c2 <newData>
    497a:	10 92 c2 04 	sts	0x04C2, r1	; 0x8004c2 <newData>
    497e:	40 91 ca 04 	lds	r20, 0x04CA	; 0x8004ca <rxFifo+0x6>
    4982:	50 91 cb 04 	lds	r21, 0x04CB	; 0x8004cb <rxFifo+0x7>
    4986:	2f bf       	out	0x3f, r18	; 63
    4988:	99 23       	and	r25, r25
    498a:	11 f0       	breq	.+4      	; 0x4990 <HAL_UartTaskHandler+0x84>
    498c:	ca 01       	movw	r24, r20
    498e:	6e ca       	rjmp	.-2852   	; 0x3e6c <HAL_UartBytesReceived>
    4990:	08 95       	ret

00004992 <NWK_Init>:
    4992:	ed e8       	ldi	r30, 0x8D	; 141
    4994:	fc e1       	ldi	r31, 0x1C	; 28
    4996:	14 82       	std	Z+4, r1	; 0x04
    4998:	15 82       	std	Z+5, r1	; 0x05
    499a:	11 82       	std	Z+1, r1	; 0x01
    499c:	10 82       	st	Z, r1
    499e:	17 a2       	std	Z+39, r1	; 0x27
    49a0:	16 a2       	std	Z+38, r1	; 0x26
    49a2:	80 e0       	ldi	r24, 0x00	; 0
    49a4:	0a c0       	rjmp	.+20     	; 0x49ba <NWK_Init+0x28>
    49a6:	e8 2f       	mov	r30, r24
    49a8:	f0 e0       	ldi	r31, 0x00	; 0
    49aa:	33 96       	adiw	r30, 0x03	; 3
    49ac:	ee 0f       	add	r30, r30
    49ae:	ff 1f       	adc	r31, r31
    49b0:	e3 57       	subi	r30, 0x73	; 115
    49b2:	f3 4e       	sbci	r31, 0xE3	; 227
    49b4:	11 82       	std	Z+1, r1	; 0x01
    49b6:	10 82       	st	Z, r1
    49b8:	8f 5f       	subi	r24, 0xFF	; 255
    49ba:	80 31       	cpi	r24, 0x10	; 16
    49bc:	a0 f3       	brcs	.-24     	; 0x49a6 <NWK_Init+0x14>
    49be:	3a d6       	rcall	.+3188   	; 0x5634 <nwkTxInit>
    49c0:	8d d5       	rcall	.+2842   	; 0x54dc <nwkRxInit>
    49c2:	06 d1       	rcall	.+524    	; 0x4bd0 <nwkFrameInit>
    49c4:	c5 d0       	rcall	.+394    	; 0x4b50 <nwkDataReqInit>
    49c6:	bd c1       	rjmp	.+890    	; 0x4d42 <nwkRouteInit>
    49c8:	08 95       	ret

000049ca <NWK_SetAddr>:
    49ca:	90 93 8e 1c 	sts	0x1C8E, r25	; 0x801c8e <nwkIb+0x1>
    49ce:	80 93 8d 1c 	sts	0x1C8D, r24	; 0x801c8d <nwkIb>
    49d2:	0c 94 26 2d 	jmp	0x5a4c	; 0x5a4c <PHY_SetShortAddr>
    49d6:	08 95       	ret

000049d8 <NWK_SetPanId>:
    49d8:	90 93 90 1c 	sts	0x1C90, r25	; 0x801c90 <nwkIb+0x3>
    49dc:	80 93 8f 1c 	sts	0x1C8F, r24	; 0x801c8f <nwkIb+0x2>
    49e0:	0c 94 14 2d 	jmp	0x5a28	; 0x5a28 <PHY_SetPanId>
    49e4:	08 95       	ret

000049e6 <NWK_OpenEndpoint>:
    49e6:	e8 2f       	mov	r30, r24
    49e8:	f0 e0       	ldi	r31, 0x00	; 0
    49ea:	33 96       	adiw	r30, 0x03	; 3
    49ec:	ee 0f       	add	r30, r30
    49ee:	ff 1f       	adc	r31, r31
    49f0:	e3 57       	subi	r30, 0x73	; 115
    49f2:	f3 4e       	sbci	r31, 0xE3	; 227
    49f4:	71 83       	std	Z+1, r23	; 0x01
    49f6:	60 83       	st	Z, r22
    49f8:	08 95       	ret

000049fa <NWK_TaskHandler>:
    49fa:	c3 d5       	rcall	.+2950   	; 0x5582 <nwkRxTaskHandler>
    49fc:	46 d7       	rcall	.+3724   	; 0x588a <nwkTxTaskHandler>
    49fe:	d1 c0       	rjmp	.+418    	; 0x4ba2 <nwkDataReqTaskHandler>
    4a00:	08 95       	ret

00004a02 <nwkDataReqConfirm>:
    4a02:	a0 91 d8 04 	lds	r26, 0x04D8	; 0x8004d8 <nwkDataReqQueue>
    4a06:	b0 91 d9 04 	lds	r27, 0x04D9	; 0x8004d9 <nwkDataReqQueue+0x1>
    4a0a:	a8 17       	cp	r26, r24
    4a0c:	b9 07       	cpc	r27, r25
    4a0e:	41 f4       	brne	.+16     	; 0x4a20 <nwkDataReqConfirm+0x1e>
    4a10:	2d 91       	ld	r18, X+
    4a12:	3c 91       	ld	r19, X
    4a14:	30 93 d9 04 	sts	0x04D9, r19	; 0x8004d9 <nwkDataReqQueue+0x1>
    4a18:	20 93 d8 04 	sts	0x04D8, r18	; 0x8004d8 <nwkDataReqQueue>
    4a1c:	0b c0       	rjmp	.+22     	; 0x4a34 <nwkDataReqConfirm+0x32>
    4a1e:	df 01       	movw	r26, r30
    4a20:	ed 91       	ld	r30, X+
    4a22:	fc 91       	ld	r31, X
    4a24:	11 97       	sbiw	r26, 0x01	; 1
    4a26:	8e 17       	cp	r24, r30
    4a28:	9f 07       	cpc	r25, r31
    4a2a:	c9 f7       	brne	.-14     	; 0x4a1e <nwkDataReqConfirm+0x1c>
    4a2c:	20 81       	ld	r18, Z
    4a2e:	31 81       	ldd	r19, Z+1	; 0x01
    4a30:	2d 93       	st	X+, r18
    4a32:	3c 93       	st	X, r19
    4a34:	ed e8       	ldi	r30, 0x8D	; 141
    4a36:	fc e1       	ldi	r31, 0x1C	; 28
    4a38:	26 a1       	ldd	r18, Z+38	; 0x26
    4a3a:	37 a1       	ldd	r19, Z+39	; 0x27
    4a3c:	21 50       	subi	r18, 0x01	; 1
    4a3e:	31 09       	sbc	r19, r1
    4a40:	37 a3       	std	Z+39, r19	; 0x27
    4a42:	26 a3       	std	Z+38, r18	; 0x26
    4a44:	dc 01       	movw	r26, r24
    4a46:	1d 96       	adiw	r26, 0x0d	; 13
    4a48:	ed 91       	ld	r30, X+
    4a4a:	fc 91       	ld	r31, X
    4a4c:	1e 97       	sbiw	r26, 0x0e	; 14
    4a4e:	19 95       	eicall
    4a50:	08 95       	ret

00004a52 <nwkDataReqSendFrame>:
    4a52:	0f 93       	push	r16
    4a54:	1f 93       	push	r17
    4a56:	cf 93       	push	r28
    4a58:	df 93       	push	r29
    4a5a:	8c 01       	movw	r16, r24
    4a5c:	c6 d0       	rcall	.+396    	; 0x4bea <nwkFrameAlloc>
    4a5e:	ec 01       	movw	r28, r24
    4a60:	00 97       	sbiw	r24, 0x00	; 0
    4a62:	29 f4       	brne	.+10     	; 0x4a6e <nwkDataReqSendFrame+0x1c>
    4a64:	82 e0       	ldi	r24, 0x02	; 2
    4a66:	f8 01       	movw	r30, r16
    4a68:	84 83       	std	Z+4, r24	; 0x04
    4a6a:	87 87       	std	Z+15, r24	; 0x0f
    4a6c:	50 c0       	rjmp	.+160    	; 0x4b0e <nwkDataReqSendFrame+0xbc>
    4a6e:	f8 01       	movw	r30, r16
    4a70:	93 83       	std	Z+3, r25	; 0x03
    4a72:	82 83       	std	Z+2, r24	; 0x02
    4a74:	81 e0       	ldi	r24, 0x01	; 1
    4a76:	84 83       	std	Z+4, r24	; 0x04
    4a78:	fe 01       	movw	r30, r28
    4a7a:	e9 57       	subi	r30, 0x79	; 121
    4a7c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a7e:	8c e8       	ldi	r24, 0x8C	; 140
    4a80:	95 e2       	ldi	r25, 0x25	; 37
    4a82:	91 83       	std	Z+1, r25	; 0x01
    4a84:	80 83       	st	Z, r24
    4a86:	f8 01       	movw	r30, r16
    4a88:	81 85       	ldd	r24, Z+9	; 0x09
    4a8a:	82 fb       	bst	r24, 2
    4a8c:	88 27       	eor	r24, r24
    4a8e:	80 f9       	bld	r24, 0
    4a90:	fe 01       	movw	r30, r28
    4a92:	ea 57       	subi	r30, 0x7A	; 122
    4a94:	ff 4f       	sbci	r31, 0xFF	; 255
    4a96:	80 83       	st	Z, r24
    4a98:	f8 01       	movw	r30, r16
    4a9a:	91 85       	ldd	r25, Z+9	; 0x09
    4a9c:	8b 85       	ldd	r24, Y+11	; 0x0b
    4a9e:	90 fb       	bst	r25, 0
    4aa0:	80 f9       	bld	r24, 0
    4aa2:	8b 87       	std	Y+11, r24	; 0x0b
    4aa4:	91 85       	ldd	r25, Z+9	; 0x09
    4aa6:	93 fb       	bst	r25, 3
    4aa8:	99 27       	eor	r25, r25
    4aaa:	90 f9       	bld	r25, 0
    4aac:	90 fb       	bst	r25, 0
    4aae:	82 f9       	bld	r24, 2
    4ab0:	8b 87       	std	Y+11, r24	; 0x0b
    4ab2:	ed e8       	ldi	r30, 0x8D	; 141
    4ab4:	fc e1       	ldi	r31, 0x1C	; 28
    4ab6:	84 81       	ldd	r24, Z+4	; 0x04
    4ab8:	8f 5f       	subi	r24, 0xFF	; 255
    4aba:	84 83       	std	Z+4, r24	; 0x04
    4abc:	8c 87       	std	Y+12, r24	; 0x0c
    4abe:	80 81       	ld	r24, Z
    4ac0:	91 81       	ldd	r25, Z+1	; 0x01
    4ac2:	9e 87       	std	Y+14, r25	; 0x0e
    4ac4:	8d 87       	std	Y+13, r24	; 0x0d
    4ac6:	f8 01       	movw	r30, r16
    4ac8:	85 81       	ldd	r24, Z+5	; 0x05
    4aca:	96 81       	ldd	r25, Z+6	; 0x06
    4acc:	98 8b       	std	Y+16, r25	; 0x10
    4ace:	8f 87       	std	Y+15, r24	; 0x0f
    4ad0:	80 85       	ldd	r24, Z+8	; 0x08
    4ad2:	98 2f       	mov	r25, r24
    4ad4:	9f 70       	andi	r25, 0x0F	; 15
    4ad6:	89 89       	ldd	r24, Y+17	; 0x11
    4ad8:	80 7f       	andi	r24, 0xF0	; 240
    4ada:	89 2b       	or	r24, r25
    4adc:	89 8b       	std	Y+17, r24	; 0x11
    4ade:	97 81       	ldd	r25, Z+7	; 0x07
    4ae0:	92 95       	swap	r25
    4ae2:	90 7f       	andi	r25, 0xF0	; 240
    4ae4:	8f 70       	andi	r24, 0x0F	; 15
    4ae6:	89 2b       	or	r24, r25
    4ae8:	89 8b       	std	Y+17, r24	; 0x11
    4aea:	44 85       	ldd	r20, Z+12	; 0x0c
    4aec:	62 85       	ldd	r22, Z+10	; 0x0a
    4aee:	73 85       	ldd	r23, Z+11	; 0x0b
    4af0:	fe 01       	movw	r30, r28
    4af2:	ef 57       	subi	r30, 0x7F	; 127
    4af4:	ff 4f       	sbci	r31, 0xFF	; 255
    4af6:	50 e0       	ldi	r21, 0x00	; 0
    4af8:	80 81       	ld	r24, Z
    4afa:	91 81       	ldd	r25, Z+1	; 0x01
    4afc:	0e 94 3a 34 	call	0x6874	; 0x6874 <memcpy>
    4b00:	f8 01       	movw	r30, r16
    4b02:	84 85       	ldd	r24, Z+12	; 0x0c
    4b04:	99 81       	ldd	r25, Y+1	; 0x01
    4b06:	89 0f       	add	r24, r25
    4b08:	89 83       	std	Y+1, r24	; 0x01
    4b0a:	ce 01       	movw	r24, r28
    4b0c:	b6 d5       	rcall	.+2924   	; 0x567a <nwkTxFrame>
    4b0e:	df 91       	pop	r29
    4b10:	cf 91       	pop	r28
    4b12:	1f 91       	pop	r17
    4b14:	0f 91       	pop	r16
    4b16:	08 95       	ret

00004b18 <nwkDataReqTxConf>:
    4b18:	e0 91 d8 04 	lds	r30, 0x04D8	; 0x8004d8 <nwkDataReqQueue>
    4b1c:	f0 91 d9 04 	lds	r31, 0x04D9	; 0x8004d9 <nwkDataReqQueue+0x1>
    4b20:	13 c0       	rjmp	.+38     	; 0x4b48 <nwkDataReqTxConf+0x30>
    4b22:	22 81       	ldd	r18, Z+2	; 0x02
    4b24:	33 81       	ldd	r19, Z+3	; 0x03
    4b26:	28 17       	cp	r18, r24
    4b28:	39 07       	cpc	r19, r25
    4b2a:	59 f4       	brne	.+22     	; 0x4b42 <nwkDataReqTxConf+0x2a>
    4b2c:	dc 01       	movw	r26, r24
    4b2e:	ad 57       	subi	r26, 0x7D	; 125
    4b30:	bf 4f       	sbci	r27, 0xFF	; 255
    4b32:	2c 91       	ld	r18, X
    4b34:	27 87       	std	Z+15, r18	; 0x0f
    4b36:	13 96       	adiw	r26, 0x03	; 3
    4b38:	2c 91       	ld	r18, X
    4b3a:	20 8b       	std	Z+16, r18	; 0x10
    4b3c:	22 e0       	ldi	r18, 0x02	; 2
    4b3e:	24 83       	std	Z+4, r18	; 0x04
    4b40:	05 c0       	rjmp	.+10     	; 0x4b4c <nwkDataReqTxConf+0x34>
    4b42:	01 90       	ld	r0, Z+
    4b44:	f0 81       	ld	r31, Z
    4b46:	e0 2d       	mov	r30, r0
    4b48:	30 97       	sbiw	r30, 0x00	; 0
    4b4a:	59 f7       	brne	.-42     	; 0x4b22 <nwkDataReqTxConf+0xa>
    4b4c:	7f c0       	rjmp	.+254    	; 0x4c4c <nwkFrameFree>
    4b4e:	08 95       	ret

00004b50 <nwkDataReqInit>:
    4b50:	10 92 d9 04 	sts	0x04D9, r1	; 0x8004d9 <nwkDataReqQueue+0x1>
    4b54:	10 92 d8 04 	sts	0x04D8, r1	; 0x8004d8 <nwkDataReqQueue>
    4b58:	08 95       	ret

00004b5a <NWK_DataReq>:
    4b5a:	fc 01       	movw	r30, r24
    4b5c:	14 82       	std	Z+4, r1	; 0x04
    4b5e:	17 86       	std	Z+15, r1	; 0x0f
    4b60:	13 82       	std	Z+3, r1	; 0x03
    4b62:	12 82       	std	Z+2, r1	; 0x02
    4b64:	ad e8       	ldi	r26, 0x8D	; 141
    4b66:	bc e1       	ldi	r27, 0x1C	; 28
    4b68:	96 96       	adiw	r26, 0x26	; 38
    4b6a:	8d 91       	ld	r24, X+
    4b6c:	9c 91       	ld	r25, X
    4b6e:	97 97       	sbiw	r26, 0x27	; 39
    4b70:	01 96       	adiw	r24, 0x01	; 1
    4b72:	97 96       	adiw	r26, 0x27	; 39
    4b74:	9c 93       	st	X, r25
    4b76:	8e 93       	st	-X, r24
    4b78:	96 97       	sbiw	r26, 0x26	; 38
    4b7a:	80 91 d8 04 	lds	r24, 0x04D8	; 0x8004d8 <nwkDataReqQueue>
    4b7e:	90 91 d9 04 	lds	r25, 0x04D9	; 0x8004d9 <nwkDataReqQueue+0x1>
    4b82:	00 97       	sbiw	r24, 0x00	; 0
    4b84:	39 f4       	brne	.+14     	; 0x4b94 <NWK_DataReq+0x3a>
    4b86:	11 82       	std	Z+1, r1	; 0x01
    4b88:	10 82       	st	Z, r1
    4b8a:	f0 93 d9 04 	sts	0x04D9, r31	; 0x8004d9 <nwkDataReqQueue+0x1>
    4b8e:	e0 93 d8 04 	sts	0x04D8, r30	; 0x8004d8 <nwkDataReqQueue>
    4b92:	08 95       	ret
    4b94:	91 83       	std	Z+1, r25	; 0x01
    4b96:	80 83       	st	Z, r24
    4b98:	f0 93 d9 04 	sts	0x04D9, r31	; 0x8004d9 <nwkDataReqQueue+0x1>
    4b9c:	e0 93 d8 04 	sts	0x04D8, r30	; 0x8004d8 <nwkDataReqQueue>
    4ba0:	08 95       	ret

00004ba2 <nwkDataReqTaskHandler>:
    4ba2:	e0 91 d8 04 	lds	r30, 0x04D8	; 0x8004d8 <nwkDataReqQueue>
    4ba6:	f0 91 d9 04 	lds	r31, 0x04D9	; 0x8004d9 <nwkDataReqQueue+0x1>
    4baa:	0f c0       	rjmp	.+30     	; 0x4bca <nwkDataReqTaskHandler+0x28>
    4bac:	84 81       	ldd	r24, Z+4	; 0x04
    4bae:	88 23       	and	r24, r24
    4bb0:	19 f0       	breq	.+6      	; 0x4bb8 <nwkDataReqTaskHandler+0x16>
    4bb2:	82 30       	cpi	r24, 0x02	; 2
    4bb4:	21 f0       	breq	.+8      	; 0x4bbe <nwkDataReqTaskHandler+0x1c>
    4bb6:	06 c0       	rjmp	.+12     	; 0x4bc4 <nwkDataReqTaskHandler+0x22>
    4bb8:	cf 01       	movw	r24, r30
    4bba:	4b cf       	rjmp	.-362    	; 0x4a52 <nwkDataReqSendFrame>
    4bbc:	08 95       	ret
    4bbe:	cf 01       	movw	r24, r30
    4bc0:	20 cf       	rjmp	.-448    	; 0x4a02 <nwkDataReqConfirm>
    4bc2:	08 95       	ret
    4bc4:	01 90       	ld	r0, Z+
    4bc6:	f0 81       	ld	r31, Z
    4bc8:	e0 2d       	mov	r30, r0
    4bca:	30 97       	sbiw	r30, 0x00	; 0
    4bcc:	79 f7       	brne	.-34     	; 0x4bac <nwkDataReqTaskHandler+0xa>
    4bce:	08 95       	ret

00004bd0 <nwkFrameInit>:
    4bd0:	80 e0       	ldi	r24, 0x00	; 0
    4bd2:	08 c0       	rjmp	.+16     	; 0x4be4 <nwkFrameInit+0x14>
    4bd4:	99 e8       	ldi	r25, 0x89	; 137
    4bd6:	89 9f       	mul	r24, r25
    4bd8:	f0 01       	movw	r30, r0
    4bda:	11 24       	eor	r1, r1
    4bdc:	e6 52       	subi	r30, 0x26	; 38
    4bde:	fb 4f       	sbci	r31, 0xFB	; 251
    4be0:	10 82       	st	Z, r1
    4be2:	8f 5f       	subi	r24, 0xFF	; 255
    4be4:	8e 31       	cpi	r24, 0x1E	; 30
    4be6:	b0 f3       	brcs	.-20     	; 0x4bd4 <nwkFrameInit+0x4>
    4be8:	08 95       	ret

00004bea <nwkFrameAlloc>:
    4bea:	80 e0       	ldi	r24, 0x00	; 0
    4bec:	2a c0       	rjmp	.+84     	; 0x4c42 <nwkFrameAlloc+0x58>
    4bee:	28 2f       	mov	r18, r24
    4bf0:	30 e0       	ldi	r19, 0x00	; 0
    4bf2:	99 e8       	ldi	r25, 0x89	; 137
    4bf4:	92 9f       	mul	r25, r18
    4bf6:	f0 01       	movw	r30, r0
    4bf8:	93 9f       	mul	r25, r19
    4bfa:	f0 0d       	add	r31, r0
    4bfc:	11 24       	eor	r1, r1
    4bfe:	e6 52       	subi	r30, 0x26	; 38
    4c00:	fb 4f       	sbci	r31, 0xFB	; 251
    4c02:	90 81       	ld	r25, Z
    4c04:	91 11       	cpse	r25, r1
    4c06:	1c c0       	rjmp	.+56     	; 0x4c40 <nwkFrameAlloc+0x56>
    4c08:	69 e8       	ldi	r22, 0x89	; 137
    4c0a:	62 9f       	mul	r22, r18
    4c0c:	a0 01       	movw	r20, r0
    4c0e:	63 9f       	mul	r22, r19
    4c10:	50 0d       	add	r21, r0
    4c12:	11 24       	eor	r1, r1
    4c14:	cf 01       	movw	r24, r30
    4c16:	11 92       	st	Z+, r1
    4c18:	6a 95       	dec	r22
    4c1a:	e9 f7       	brne	.-6      	; 0x4c16 <nwkFrameAlloc+0x2c>
    4c1c:	20 e1       	ldi	r18, 0x10	; 16
    4c1e:	fc 01       	movw	r30, r24
    4c20:	21 83       	std	Z+1, r18	; 0x01
    4c22:	44 51       	subi	r20, 0x14	; 20
    4c24:	5b 4f       	sbci	r21, 0xFB	; 251
    4c26:	ef 57       	subi	r30, 0x7F	; 127
    4c28:	ff 4f       	sbci	r31, 0xFF	; 255
    4c2a:	51 83       	std	Z+1, r21	; 0x01
    4c2c:	40 83       	st	Z, r20
    4c2e:	ed e8       	ldi	r30, 0x8D	; 141
    4c30:	fc e1       	ldi	r31, 0x1C	; 28
    4c32:	26 a1       	ldd	r18, Z+38	; 0x26
    4c34:	37 a1       	ldd	r19, Z+39	; 0x27
    4c36:	2f 5f       	subi	r18, 0xFF	; 255
    4c38:	3f 4f       	sbci	r19, 0xFF	; 255
    4c3a:	37 a3       	std	Z+39, r19	; 0x27
    4c3c:	26 a3       	std	Z+38, r18	; 0x26
    4c3e:	08 95       	ret
    4c40:	8f 5f       	subi	r24, 0xFF	; 255
    4c42:	8e 31       	cpi	r24, 0x1E	; 30
    4c44:	a0 f2       	brcs	.-88     	; 0x4bee <nwkFrameAlloc+0x4>
    4c46:	80 e0       	ldi	r24, 0x00	; 0
    4c48:	90 e0       	ldi	r25, 0x00	; 0
    4c4a:	08 95       	ret

00004c4c <nwkFrameFree>:
    4c4c:	fc 01       	movw	r30, r24
    4c4e:	10 82       	st	Z, r1
    4c50:	ed e8       	ldi	r30, 0x8D	; 141
    4c52:	fc e1       	ldi	r31, 0x1C	; 28
    4c54:	86 a1       	ldd	r24, Z+38	; 0x26
    4c56:	97 a1       	ldd	r25, Z+39	; 0x27
    4c58:	01 97       	sbiw	r24, 0x01	; 1
    4c5a:	97 a3       	std	Z+39, r25	; 0x27
    4c5c:	86 a3       	std	Z+38, r24	; 0x26
    4c5e:	08 95       	ret

00004c60 <nwkFrameNext>:
    4c60:	00 97       	sbiw	r24, 0x00	; 0
    4c62:	21 f0       	breq	.+8      	; 0x4c6c <nwkFrameNext+0xc>
    4c64:	fc 01       	movw	r30, r24
    4c66:	e7 57       	subi	r30, 0x77	; 119
    4c68:	ff 4f       	sbci	r31, 0xFF	; 255
    4c6a:	08 c0       	rjmp	.+16     	; 0x4c7c <nwkFrameNext+0x1c>
    4c6c:	ea ed       	ldi	r30, 0xDA	; 218
    4c6e:	f4 e0       	ldi	r31, 0x04	; 4
    4c70:	05 c0       	rjmp	.+10     	; 0x4c7c <nwkFrameNext+0x1c>
    4c72:	80 81       	ld	r24, Z
    4c74:	81 11       	cpse	r24, r1
    4c76:	09 c0       	rjmp	.+18     	; 0x4c8a <nwkFrameNext+0x2a>
    4c78:	e7 57       	subi	r30, 0x77	; 119
    4c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    4c7c:	84 e1       	ldi	r24, 0x14	; 20
    4c7e:	e8 3e       	cpi	r30, 0xE8	; 232
    4c80:	f8 07       	cpc	r31, r24
    4c82:	b8 f3       	brcs	.-18     	; 0x4c72 <nwkFrameNext+0x12>
    4c84:	80 e0       	ldi	r24, 0x00	; 0
    4c86:	90 e0       	ldi	r25, 0x00	; 0
    4c88:	08 95       	ret
    4c8a:	8e 2f       	mov	r24, r30
    4c8c:	9f 2f       	mov	r25, r31
    4c8e:	08 95       	ret

00004c90 <nwkFrameCommandInit>:
    4c90:	fc 01       	movw	r30, r24
    4c92:	dc 01       	movw	r26, r24
    4c94:	ad 57       	subi	r26, 0x7D	; 125
    4c96:	bf 4f       	sbci	r27, 0xFF	; 255
    4c98:	1c 92       	st	X, r1
    4c9a:	ad e8       	ldi	r26, 0x8D	; 141
    4c9c:	bc e1       	ldi	r27, 0x1C	; 28
    4c9e:	14 96       	adiw	r26, 0x04	; 4
    4ca0:	9c 91       	ld	r25, X
    4ca2:	14 97       	sbiw	r26, 0x04	; 4
    4ca4:	9f 5f       	subi	r25, 0xFF	; 255
    4ca6:	14 96       	adiw	r26, 0x04	; 4
    4ca8:	9c 93       	st	X, r25
    4caa:	14 97       	sbiw	r26, 0x04	; 4
    4cac:	94 87       	std	Z+12, r25	; 0x0c
    4cae:	8d 91       	ld	r24, X+
    4cb0:	9c 91       	ld	r25, X
    4cb2:	96 87       	std	Z+14, r25	; 0x0e
    4cb4:	85 87       	std	Z+13, r24	; 0x0d
    4cb6:	08 95       	ret

00004cb8 <nwkRouteNormalizeRanks>:
    4cb8:	90 e0       	ldi	r25, 0x00	; 0
    4cba:	12 c0       	rjmp	.+36     	; 0x4ce0 <nwkRouteNormalizeRanks+0x28>
    4cbc:	29 2f       	mov	r18, r25
    4cbe:	30 e0       	ldi	r19, 0x00	; 0
    4cc0:	f9 01       	movw	r30, r18
    4cc2:	ee 0f       	add	r30, r30
    4cc4:	ff 1f       	adc	r31, r31
    4cc6:	ee 0f       	add	r30, r30
    4cc8:	ff 1f       	adc	r31, r31
    4cca:	ee 0f       	add	r30, r30
    4ccc:	ff 1f       	adc	r31, r31
    4cce:	e2 1b       	sub	r30, r18
    4cd0:	f3 0b       	sbc	r31, r19
    4cd2:	e8 51       	subi	r30, 0x18	; 24
    4cd4:	fb 4e       	sbci	r31, 0xEB	; 235
    4cd6:	85 81       	ldd	r24, Z+5	; 0x05
    4cd8:	86 95       	lsr	r24
    4cda:	8f 5f       	subi	r24, 0xFF	; 255
    4cdc:	85 83       	std	Z+5, r24	; 0x05
    4cde:	9f 5f       	subi	r25, 0xFF	; 255
    4ce0:	94 36       	cpi	r25, 0x64	; 100
    4ce2:	60 f3       	brcs	.-40     	; 0x4cbc <nwkRouteNormalizeRanks+0x4>
    4ce4:	08 95       	ret

00004ce6 <nwkRouteSendRouteError>:
    4ce6:	df 92       	push	r13
    4ce8:	ef 92       	push	r14
    4cea:	ff 92       	push	r15
    4cec:	0f 93       	push	r16
    4cee:	1f 93       	push	r17
    4cf0:	cf 93       	push	r28
    4cf2:	df 93       	push	r29
    4cf4:	8c 01       	movw	r16, r24
    4cf6:	7b 01       	movw	r14, r22
    4cf8:	d4 2e       	mov	r13, r20
    4cfa:	77 df       	rcall	.-274    	; 0x4bea <nwkFrameAlloc>
    4cfc:	ec 01       	movw	r28, r24
    4cfe:	00 97       	sbiw	r24, 0x00	; 0
    4d00:	c1 f0       	breq	.+48     	; 0x4d32 <nwkRouteSendRouteError+0x4c>
    4d02:	c6 df       	rcall	.-116    	; 0x4c90 <nwkFrameCommandInit>
    4d04:	89 81       	ldd	r24, Y+1	; 0x01
    4d06:	8a 5f       	subi	r24, 0xFA	; 250
    4d08:	89 83       	std	Y+1, r24	; 0x01
    4d0a:	fe 01       	movw	r30, r28
    4d0c:	e9 57       	subi	r30, 0x79	; 121
    4d0e:	ff 4f       	sbci	r31, 0xFF	; 255
    4d10:	11 82       	std	Z+1, r1	; 0x01
    4d12:	10 82       	st	Z, r1
    4d14:	18 8b       	std	Y+16, r17	; 0x10
    4d16:	0f 87       	std	Y+15, r16	; 0x0f
    4d18:	36 97       	sbiw	r30, 0x06	; 6
    4d1a:	01 90       	ld	r0, Z+
    4d1c:	f0 81       	ld	r31, Z
    4d1e:	e0 2d       	mov	r30, r0
    4d20:	81 e0       	ldi	r24, 0x01	; 1
    4d22:	80 83       	st	Z, r24
    4d24:	12 83       	std	Z+2, r17	; 0x02
    4d26:	01 83       	std	Z+1, r16	; 0x01
    4d28:	f4 82       	std	Z+4, r15	; 0x04
    4d2a:	e3 82       	std	Z+3, r14	; 0x03
    4d2c:	d5 82       	std	Z+5, r13	; 0x05
    4d2e:	ce 01       	movw	r24, r28
    4d30:	a4 d4       	rcall	.+2376   	; 0x567a <nwkTxFrame>
    4d32:	df 91       	pop	r29
    4d34:	cf 91       	pop	r28
    4d36:	1f 91       	pop	r17
    4d38:	0f 91       	pop	r16
    4d3a:	ff 90       	pop	r15
    4d3c:	ef 90       	pop	r14
    4d3e:	df 90       	pop	r13
    4d40:	08 95       	ret

00004d42 <nwkRouteInit>:
    4d42:	80 e0       	ldi	r24, 0x00	; 0
    4d44:	16 c0       	rjmp	.+44     	; 0x4d72 <nwkRouteInit+0x30>
    4d46:	28 2f       	mov	r18, r24
    4d48:	30 e0       	ldi	r19, 0x00	; 0
    4d4a:	f9 01       	movw	r30, r18
    4d4c:	ee 0f       	add	r30, r30
    4d4e:	ff 1f       	adc	r31, r31
    4d50:	ee 0f       	add	r30, r30
    4d52:	ff 1f       	adc	r31, r31
    4d54:	ee 0f       	add	r30, r30
    4d56:	ff 1f       	adc	r31, r31
    4d58:	e2 1b       	sub	r30, r18
    4d5a:	f3 0b       	sbc	r31, r19
    4d5c:	e8 51       	subi	r30, 0x18	; 24
    4d5e:	fb 4e       	sbci	r31, 0xEB	; 235
    4d60:	2f ef       	ldi	r18, 0xFF	; 255
    4d62:	3f ef       	ldi	r19, 0xFF	; 255
    4d64:	32 83       	std	Z+2, r19	; 0x02
    4d66:	21 83       	std	Z+1, r18	; 0x01
    4d68:	90 81       	ld	r25, Z
    4d6a:	9e 7f       	andi	r25, 0xFE	; 254
    4d6c:	90 83       	st	Z, r25
    4d6e:	15 82       	std	Z+5, r1	; 0x05
    4d70:	8f 5f       	subi	r24, 0xFF	; 255
    4d72:	84 36       	cpi	r24, 0x64	; 100
    4d74:	40 f3       	brcs	.-48     	; 0x4d46 <nwkRouteInit+0x4>
    4d76:	08 95       	ret

00004d78 <NWK_RouteFindEntry>:
    4d78:	cf 93       	push	r28
    4d7a:	df 93       	push	r29
    4d7c:	ec 01       	movw	r28, r24
    4d7e:	90 e0       	ldi	r25, 0x00	; 0
    4d80:	2a c0       	rjmp	.+84     	; 0x4dd6 <NWK_RouteFindEntry+0x5e>
    4d82:	29 2f       	mov	r18, r25
    4d84:	30 e0       	ldi	r19, 0x00	; 0
    4d86:	f9 01       	movw	r30, r18
    4d88:	ee 0f       	add	r30, r30
    4d8a:	ff 1f       	adc	r31, r31
    4d8c:	ee 0f       	add	r30, r30
    4d8e:	ff 1f       	adc	r31, r31
    4d90:	ee 0f       	add	r30, r30
    4d92:	ff 1f       	adc	r31, r31
    4d94:	e2 1b       	sub	r30, r18
    4d96:	f3 0b       	sbc	r31, r19
    4d98:	e8 51       	subi	r30, 0x18	; 24
    4d9a:	fb 4e       	sbci	r31, 0xEB	; 235
    4d9c:	41 81       	ldd	r20, Z+1	; 0x01
    4d9e:	52 81       	ldd	r21, Z+2	; 0x02
    4da0:	4c 17       	cp	r20, r28
    4da2:	5d 07       	cpc	r21, r29
    4da4:	b9 f4       	brne	.+46     	; 0x4dd4 <NWK_RouteFindEntry+0x5c>
    4da6:	f9 01       	movw	r30, r18
    4da8:	ee 0f       	add	r30, r30
    4daa:	ff 1f       	adc	r31, r31
    4dac:	ee 0f       	add	r30, r30
    4dae:	ff 1f       	adc	r31, r31
    4db0:	ee 0f       	add	r30, r30
    4db2:	ff 1f       	adc	r31, r31
    4db4:	e2 1b       	sub	r30, r18
    4db6:	f3 0b       	sbc	r31, r19
    4db8:	e8 51       	subi	r30, 0x18	; 24
    4dba:	fb 4e       	sbci	r31, 0xEB	; 235
    4dbc:	80 81       	ld	r24, Z
    4dbe:	81 fb       	bst	r24, 1
    4dc0:	aa 27       	eor	r26, r26
    4dc2:	a0 f9       	bld	r26, 0
    4dc4:	b0 e0       	ldi	r27, 0x00	; 0
    4dc6:	46 2f       	mov	r20, r22
    4dc8:	50 e0       	ldi	r21, 0x00	; 0
    4dca:	a4 17       	cp	r26, r20
    4dcc:	b5 07       	cpc	r27, r21
    4dce:	11 f4       	brne	.+4      	; 0x4dd4 <NWK_RouteFindEntry+0x5c>
    4dd0:	cf 01       	movw	r24, r30
    4dd2:	05 c0       	rjmp	.+10     	; 0x4dde <NWK_RouteFindEntry+0x66>
    4dd4:	9f 5f       	subi	r25, 0xFF	; 255
    4dd6:	94 36       	cpi	r25, 0x64	; 100
    4dd8:	a0 f2       	brcs	.-88     	; 0x4d82 <NWK_RouteFindEntry+0xa>
    4dda:	80 e0       	ldi	r24, 0x00	; 0
    4ddc:	90 e0       	ldi	r25, 0x00	; 0
    4dde:	df 91       	pop	r29
    4de0:	cf 91       	pop	r28
    4de2:	08 95       	ret

00004de4 <NWK_RouteNewEntry>:
    4de4:	80 e0       	ldi	r24, 0x00	; 0
    4de6:	a0 e0       	ldi	r26, 0x00	; 0
    4de8:	b0 e0       	ldi	r27, 0x00	; 0
    4dea:	e8 ee       	ldi	r30, 0xE8	; 232
    4dec:	f4 e1       	ldi	r31, 0x14	; 20
    4dee:	13 c0       	rjmp	.+38     	; 0x4e16 <NWK_RouteNewEntry+0x32>
    4df0:	90 81       	ld	r25, Z
    4df2:	90 fd       	sbrc	r25, 0
    4df4:	0e c0       	rjmp	.+28     	; 0x4e12 <NWK_RouteNewEntry+0x2e>
    4df6:	95 81       	ldd	r25, Z+5	; 0x05
    4df8:	99 23       	and	r25, r25
    4dfa:	81 f0       	breq	.+32     	; 0x4e1c <NWK_RouteNewEntry+0x38>
    4dfc:	10 97       	sbiw	r26, 0x00	; 0
    4dfe:	31 f0       	breq	.+12     	; 0x4e0c <NWK_RouteNewEntry+0x28>
    4e00:	15 96       	adiw	r26, 0x05	; 5
    4e02:	2c 91       	ld	r18, X
    4e04:	15 97       	sbiw	r26, 0x05	; 5
    4e06:	92 17       	cp	r25, r18
    4e08:	18 f0       	brcs	.+6      	; 0x4e10 <NWK_RouteNewEntry+0x2c>
    4e0a:	03 c0       	rjmp	.+6      	; 0x4e12 <NWK_RouteNewEntry+0x2e>
    4e0c:	df 01       	movw	r26, r30
    4e0e:	01 c0       	rjmp	.+2      	; 0x4e12 <NWK_RouteNewEntry+0x2e>
    4e10:	df 01       	movw	r26, r30
    4e12:	8f 5f       	subi	r24, 0xFF	; 255
    4e14:	37 96       	adiw	r30, 0x07	; 7
    4e16:	84 36       	cpi	r24, 0x64	; 100
    4e18:	58 f3       	brcs	.-42     	; 0x4df0 <NWK_RouteNewEntry+0xc>
    4e1a:	fd 01       	movw	r30, r26
    4e1c:	80 81       	ld	r24, Z
    4e1e:	8d 70       	andi	r24, 0x0D	; 13
    4e20:	80 63       	ori	r24, 0x30	; 48
    4e22:	80 83       	st	Z, r24
    4e24:	80 e8       	ldi	r24, 0x80	; 128
    4e26:	85 83       	std	Z+5, r24	; 0x05
    4e28:	cf 01       	movw	r24, r30
    4e2a:	08 95       	ret

00004e2c <NWK_RouteFreeEntry>:
    4e2c:	fc 01       	movw	r30, r24
    4e2e:	80 81       	ld	r24, Z
    4e30:	80 fd       	sbrc	r24, 0
    4e32:	05 c0       	rjmp	.+10     	; 0x4e3e <NWK_RouteFreeEntry+0x12>
    4e34:	8f ef       	ldi	r24, 0xFF	; 255
    4e36:	9f ef       	ldi	r25, 0xFF	; 255
    4e38:	92 83       	std	Z+2, r25	; 0x02
    4e3a:	81 83       	std	Z+1, r24	; 0x01
    4e3c:	15 82       	std	Z+5, r1	; 0x05
    4e3e:	08 95       	ret

00004e40 <NWK_RouteNextHop>:
    4e40:	9b df       	rcall	.-202    	; 0x4d78 <NWK_RouteFindEntry>
    4e42:	00 97       	sbiw	r24, 0x00	; 0
    4e44:	21 f0       	breq	.+8      	; 0x4e4e <NWK_RouteNextHop+0xe>
    4e46:	fc 01       	movw	r30, r24
    4e48:	83 81       	ldd	r24, Z+3	; 0x03
    4e4a:	94 81       	ldd	r25, Z+4	; 0x04
    4e4c:	08 95       	ret
    4e4e:	8f ef       	ldi	r24, 0xFF	; 255
    4e50:	9f ef       	ldi	r25, 0xFF	; 255
    4e52:	08 95       	ret

00004e54 <nwkRouteRemove>:
    4e54:	91 df       	rcall	.-222    	; 0x4d78 <NWK_RouteFindEntry>
    4e56:	00 97       	sbiw	r24, 0x00	; 0
    4e58:	09 f0       	breq	.+2      	; 0x4e5c <nwkRouteRemove+0x8>
    4e5a:	e8 cf       	rjmp	.-48     	; 0x4e2c <NWK_RouteFreeEntry>
    4e5c:	08 95       	ret

00004e5e <nwkRouteFrameReceived>:
    4e5e:	0f 93       	push	r16
    4e60:	1f 93       	push	r17
    4e62:	cf 93       	push	r28
    4e64:	df 93       	push	r29
    4e66:	fc 01       	movw	r30, r24
    4e68:	01 85       	ldd	r16, Z+9	; 0x09
    4e6a:	12 85       	ldd	r17, Z+10	; 0x0a
    4e6c:	11 23       	and	r17, r17
    4e6e:	34 f4       	brge	.+12     	; 0x4e7c <nwkRouteFrameReceived+0x1e>
    4e70:	85 85       	ldd	r24, Z+13	; 0x0d
    4e72:	96 85       	ldd	r25, Z+14	; 0x0e
    4e74:	08 17       	cp	r16, r24
    4e76:	19 07       	cpc	r17, r25
    4e78:	09 f0       	breq	.+2      	; 0x4e7c <nwkRouteFrameReceived+0x1e>
    4e7a:	50 c0       	rjmp	.+160    	; 0x4f1c <nwkRouteFrameReceived+0xbe>
    4e7c:	85 81       	ldd	r24, Z+5	; 0x05
    4e7e:	96 81       	ldd	r25, Z+6	; 0x06
    4e80:	01 96       	adiw	r24, 0x01	; 1
    4e82:	09 f4       	brne	.+2      	; 0x4e86 <nwkRouteFrameReceived+0x28>
    4e84:	4b c0       	rjmp	.+150    	; 0x4f1c <nwkRouteFrameReceived+0xbe>
    4e86:	ef 01       	movw	r28, r30
    4e88:	60 e0       	ldi	r22, 0x00	; 0
    4e8a:	85 85       	ldd	r24, Z+13	; 0x0d
    4e8c:	96 85       	ldd	r25, Z+14	; 0x0e
    4e8e:	74 df       	rcall	.-280    	; 0x4d78 <NWK_RouteFindEntry>
    4e90:	dc 01       	movw	r26, r24
    4e92:	89 2b       	or	r24, r25
    4e94:	79 f1       	breq	.+94     	; 0x4ef4 <nwkRouteFrameReceived+0x96>
    4e96:	8f 81       	ldd	r24, Y+7	; 0x07
    4e98:	98 85       	ldd	r25, Y+8	; 0x08
    4e9a:	01 96       	adiw	r24, 0x01	; 1
    4e9c:	59 f4       	brne	.+22     	; 0x4eb4 <nwkRouteFrameReceived+0x56>
    4e9e:	20 91 8d 1c 	lds	r18, 0x1C8D	; 0x801c8d <nwkIb>
    4ea2:	30 91 8e 1c 	lds	r19, 0x1C8E	; 0x801c8e <nwkIb+0x1>
    4ea6:	8f 85       	ldd	r24, Y+15	; 0x0f
    4ea8:	98 89       	ldd	r25, Y+16	; 0x10
    4eaa:	28 17       	cp	r18, r24
    4eac:	39 07       	cpc	r19, r25
    4eae:	21 f0       	breq	.+8      	; 0x4eb8 <nwkRouteFrameReceived+0x5a>
    4eb0:	80 e0       	ldi	r24, 0x00	; 0
    4eb2:	03 c0       	rjmp	.+6      	; 0x4eba <nwkRouteFrameReceived+0x5c>
    4eb4:	80 e0       	ldi	r24, 0x00	; 0
    4eb6:	01 c0       	rjmp	.+2      	; 0x4eba <nwkRouteFrameReceived+0x5c>
    4eb8:	81 e0       	ldi	r24, 0x01	; 1
    4eba:	98 2f       	mov	r25, r24
    4ebc:	91 70       	andi	r25, 0x01	; 1
    4ebe:	13 96       	adiw	r26, 0x03	; 3
    4ec0:	2d 91       	ld	r18, X+
    4ec2:	3c 91       	ld	r19, X
    4ec4:	14 97       	sbiw	r26, 0x04	; 4
    4ec6:	02 17       	cp	r16, r18
    4ec8:	13 07       	cpc	r17, r19
    4eca:	49 f0       	breq	.+18     	; 0x4ede <nwkRouteFrameReceived+0x80>
    4ecc:	fe 01       	movw	r30, r28
    4ece:	ed 57       	subi	r30, 0x7D	; 125
    4ed0:	ff 4f       	sbci	r31, 0xFF	; 255
    4ed2:	20 81       	ld	r18, Z
    4ed4:	16 96       	adiw	r26, 0x06	; 6
    4ed6:	8c 91       	ld	r24, X
    4ed8:	16 97       	sbiw	r26, 0x06	; 6
    4eda:	82 17       	cp	r24, r18
    4edc:	10 f0       	brcs	.+4      	; 0x4ee2 <nwkRouteFrameReceived+0x84>
    4ede:	99 23       	and	r25, r25
    4ee0:	b9 f0       	breq	.+46     	; 0x4f10 <nwkRouteFrameReceived+0xb2>
    4ee2:	14 96       	adiw	r26, 0x04	; 4
    4ee4:	1c 93       	st	X, r17
    4ee6:	0e 93       	st	-X, r16
    4ee8:	13 97       	sbiw	r26, 0x03	; 3
    4eea:	8c 91       	ld	r24, X
    4eec:	8f 70       	andi	r24, 0x0F	; 15
    4eee:	80 63       	ori	r24, 0x30	; 48
    4ef0:	8c 93       	st	X, r24
    4ef2:	0e c0       	rjmp	.+28     	; 0x4f10 <nwkRouteFrameReceived+0xb2>
    4ef4:	77 df       	rcall	.-274    	; 0x4de4 <NWK_RouteNewEntry>
    4ef6:	dc 01       	movw	r26, r24
    4ef8:	8d 85       	ldd	r24, Y+13	; 0x0d
    4efa:	9e 85       	ldd	r25, Y+14	; 0x0e
    4efc:	12 96       	adiw	r26, 0x02	; 2
    4efe:	9c 93       	st	X, r25
    4f00:	8e 93       	st	-X, r24
    4f02:	11 97       	sbiw	r26, 0x01	; 1
    4f04:	89 85       	ldd	r24, Y+9	; 0x09
    4f06:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f08:	14 96       	adiw	r26, 0x04	; 4
    4f0a:	9c 93       	st	X, r25
    4f0c:	8e 93       	st	-X, r24
    4f0e:	13 97       	sbiw	r26, 0x03	; 3
    4f10:	fe 01       	movw	r30, r28
    4f12:	ed 57       	subi	r30, 0x7D	; 125
    4f14:	ff 4f       	sbci	r31, 0xFF	; 255
    4f16:	80 81       	ld	r24, Z
    4f18:	16 96       	adiw	r26, 0x06	; 6
    4f1a:	8c 93       	st	X, r24
    4f1c:	df 91       	pop	r29
    4f1e:	cf 91       	pop	r28
    4f20:	1f 91       	pop	r17
    4f22:	0f 91       	pop	r16
    4f24:	08 95       	ret

00004f26 <nwkRouteFrameSent>:
    4f26:	cf 93       	push	r28
    4f28:	df 93       	push	r29
    4f2a:	fc 01       	movw	r30, r24
    4f2c:	87 85       	ldd	r24, Z+15	; 0x0f
    4f2e:	90 89       	ldd	r25, Z+16	; 0x10
    4f30:	8f 3f       	cpi	r24, 0xFF	; 255
    4f32:	2f ef       	ldi	r18, 0xFF	; 255
    4f34:	92 07       	cpc	r25, r18
    4f36:	81 f1       	breq	.+96     	; 0x4f98 <nwkRouteFrameSent+0x72>
    4f38:	ef 01       	movw	r28, r30
    4f3a:	63 85       	ldd	r22, Z+11	; 0x0b
    4f3c:	63 fb       	bst	r22, 3
    4f3e:	66 27       	eor	r22, r22
    4f40:	60 f9       	bld	r22, 0
    4f42:	1a df       	rcall	.-460    	; 0x4d78 <NWK_RouteFindEntry>
    4f44:	dc 01       	movw	r26, r24
    4f46:	89 2b       	or	r24, r25
    4f48:	39 f1       	breq	.+78     	; 0x4f98 <nwkRouteFrameSent+0x72>
    4f4a:	8c 91       	ld	r24, X
    4f4c:	80 fd       	sbrc	r24, 0
    4f4e:	24 c0       	rjmp	.+72     	; 0x4f98 <nwkRouteFrameSent+0x72>
    4f50:	fe 01       	movw	r30, r28
    4f52:	ed 57       	subi	r30, 0x7D	; 125
    4f54:	ff 4f       	sbci	r31, 0xFF	; 255
    4f56:	80 81       	ld	r24, Z
    4f58:	81 11       	cpse	r24, r1
    4f5a:	0e c0       	rjmp	.+28     	; 0x4f78 <nwkRouteFrameSent+0x52>
    4f5c:	8c 91       	ld	r24, X
    4f5e:	8f 70       	andi	r24, 0x0F	; 15
    4f60:	80 63       	ori	r24, 0x30	; 48
    4f62:	8c 93       	st	X, r24
    4f64:	15 96       	adiw	r26, 0x05	; 5
    4f66:	8c 91       	ld	r24, X
    4f68:	15 97       	sbiw	r26, 0x05	; 5
    4f6a:	8f 5f       	subi	r24, 0xFF	; 255
    4f6c:	15 96       	adiw	r26, 0x05	; 5
    4f6e:	8c 93       	st	X, r24
    4f70:	8f 3f       	cpi	r24, 0xFF	; 255
    4f72:	91 f4       	brne	.+36     	; 0x4f98 <nwkRouteFrameSent+0x72>
    4f74:	a1 de       	rcall	.-702    	; 0x4cb8 <nwkRouteNormalizeRanks>
    4f76:	10 c0       	rjmp	.+32     	; 0x4f98 <nwkRouteFrameSent+0x72>
    4f78:	9c 91       	ld	r25, X
    4f7a:	89 2f       	mov	r24, r25
    4f7c:	82 95       	swap	r24
    4f7e:	8f 70       	andi	r24, 0x0F	; 15
    4f80:	81 5f       	subi	r24, 0xF1	; 241
    4f82:	8f 70       	andi	r24, 0x0F	; 15
    4f84:	28 2f       	mov	r18, r24
    4f86:	22 95       	swap	r18
    4f88:	20 7f       	andi	r18, 0xF0	; 240
    4f8a:	9f 70       	andi	r25, 0x0F	; 15
    4f8c:	92 2b       	or	r25, r18
    4f8e:	9c 93       	st	X, r25
    4f90:	81 11       	cpse	r24, r1
    4f92:	02 c0       	rjmp	.+4      	; 0x4f98 <nwkRouteFrameSent+0x72>
    4f94:	cd 01       	movw	r24, r26
    4f96:	4a df       	rcall	.-364    	; 0x4e2c <NWK_RouteFreeEntry>
    4f98:	df 91       	pop	r29
    4f9a:	cf 91       	pop	r28
    4f9c:	08 95       	ret

00004f9e <nwkRoutePrepareTx>:
    4f9e:	cf 93       	push	r28
    4fa0:	df 93       	push	r29
    4fa2:	fc 01       	movw	r30, r24
    4fa4:	87 85       	ldd	r24, Z+15	; 0x0f
    4fa6:	90 89       	ldd	r25, Z+16	; 0x10
    4fa8:	8f 3f       	cpi	r24, 0xFF	; 255
    4faa:	2f ef       	ldi	r18, 0xFF	; 255
    4fac:	92 07       	cpc	r25, r18
    4fae:	29 f4       	brne	.+10     	; 0x4fba <nwkRoutePrepareTx+0x1c>
    4fb0:	8f ef       	ldi	r24, 0xFF	; 255
    4fb2:	9f ef       	ldi	r25, 0xFF	; 255
    4fb4:	90 87       	std	Z+8, r25	; 0x08
    4fb6:	87 83       	std	Z+7, r24	; 0x07
    4fb8:	0e c0       	rjmp	.+28     	; 0x4fd6 <nwkRoutePrepareTx+0x38>
    4fba:	23 85       	ldd	r18, Z+11	; 0x0b
    4fbc:	22 ff       	sbrs	r18, 2
    4fbe:	03 c0       	rjmp	.+6      	; 0x4fc6 <nwkRoutePrepareTx+0x28>
    4fc0:	90 87       	std	Z+8, r25	; 0x08
    4fc2:	87 83       	std	Z+7, r24	; 0x07
    4fc4:	08 c0       	rjmp	.+16     	; 0x4fd6 <nwkRoutePrepareTx+0x38>
    4fc6:	ef 01       	movw	r28, r30
    4fc8:	63 85       	ldd	r22, Z+11	; 0x0b
    4fca:	63 fb       	bst	r22, 3
    4fcc:	66 27       	eor	r22, r22
    4fce:	60 f9       	bld	r22, 0
    4fd0:	37 df       	rcall	.-402    	; 0x4e40 <NWK_RouteNextHop>
    4fd2:	98 87       	std	Y+8, r25	; 0x08
    4fd4:	8f 83       	std	Y+7, r24	; 0x07
    4fd6:	df 91       	pop	r29
    4fd8:	cf 91       	pop	r28
    4fda:	08 95       	ret

00004fdc <nwkRouteFrame>:
    4fdc:	ef 92       	push	r14
    4fde:	ff 92       	push	r15
    4fe0:	1f 93       	push	r17
    4fe2:	cf 93       	push	r28
    4fe4:	df 93       	push	r29
    4fe6:	ec 01       	movw	r28, r24
    4fe8:	1b 85       	ldd	r17, Y+11	; 0x0b
    4fea:	13 fb       	bst	r17, 3
    4fec:	11 27       	eor	r17, r17
    4fee:	10 f9       	bld	r17, 0
    4ff0:	ef 84       	ldd	r14, Y+15	; 0x0f
    4ff2:	f8 88       	ldd	r15, Y+16	; 0x10
    4ff4:	61 2f       	mov	r22, r17
    4ff6:	c7 01       	movw	r24, r14
    4ff8:	23 df       	rcall	.-442    	; 0x4e40 <NWK_RouteNextHop>
    4ffa:	01 96       	adiw	r24, 0x01	; 1
    4ffc:	59 f0       	breq	.+22     	; 0x5014 <nwkRouteFrame+0x38>
    4ffe:	fe 01       	movw	r30, r28
    5000:	e9 57       	subi	r30, 0x79	; 121
    5002:	ff 4f       	sbci	r31, 0xFF	; 255
    5004:	11 82       	std	Z+1, r1	; 0x01
    5006:	10 82       	st	Z, r1
    5008:	31 97       	sbiw	r30, 0x01	; 1
    500a:	82 e0       	ldi	r24, 0x02	; 2
    500c:	80 83       	st	Z, r24
    500e:	ce 01       	movw	r24, r28
    5010:	34 d3       	rcall	.+1640   	; 0x567a <nwkTxFrame>
    5012:	07 c0       	rjmp	.+14     	; 0x5022 <nwkRouteFrame+0x46>
    5014:	41 2f       	mov	r20, r17
    5016:	b7 01       	movw	r22, r14
    5018:	8d 85       	ldd	r24, Y+13	; 0x0d
    501a:	9e 85       	ldd	r25, Y+14	; 0x0e
    501c:	64 de       	rcall	.-824    	; 0x4ce6 <nwkRouteSendRouteError>
    501e:	ce 01       	movw	r24, r28
    5020:	15 de       	rcall	.-982    	; 0x4c4c <nwkFrameFree>
    5022:	df 91       	pop	r29
    5024:	cf 91       	pop	r28
    5026:	1f 91       	pop	r17
    5028:	ff 90       	pop	r15
    502a:	ef 90       	pop	r14
    502c:	08 95       	ret

0000502e <nwkRouteErrorReceived>:
    502e:	dc 01       	movw	r26, r24
    5030:	17 96       	adiw	r26, 0x07	; 7
    5032:	ed 91       	ld	r30, X+
    5034:	fc 91       	ld	r31, X
    5036:	18 97       	sbiw	r26, 0x08	; 8
    5038:	19 96       	adiw	r26, 0x09	; 9
    503a:	8c 91       	ld	r24, X
    503c:	86 30       	cpi	r24, 0x06	; 6
    503e:	31 f4       	brne	.+12     	; 0x504c <nwkRouteErrorReceived+0x1e>
    5040:	65 81       	ldd	r22, Z+5	; 0x05
    5042:	83 81       	ldd	r24, Z+3	; 0x03
    5044:	94 81       	ldd	r25, Z+4	; 0x04
    5046:	06 df       	rcall	.-500    	; 0x4e54 <nwkRouteRemove>
    5048:	81 e0       	ldi	r24, 0x01	; 1
    504a:	08 95       	ret
    504c:	80 e0       	ldi	r24, 0x00	; 0
    504e:	08 95       	ret

00005050 <nwkRxIndicateFrame>:
    5050:	ef 92       	push	r14
    5052:	ff 92       	push	r15
    5054:	0f 93       	push	r16
    5056:	1f 93       	push	r17
    5058:	cf 93       	push	r28
    505a:	df 93       	push	r29
    505c:	cd b7       	in	r28, 0x3d	; 61
    505e:	de b7       	in	r29, 0x3e	; 62
    5060:	2c 97       	sbiw	r28, 0x0c	; 12
    5062:	0f b6       	in	r0, 0x3f	; 63
    5064:	f8 94       	cli
    5066:	de bf       	out	0x3e, r29	; 62
    5068:	0f be       	out	0x3f, r0	; 63
    506a:	cd bf       	out	0x3d, r28	; 61
    506c:	dc 01       	movw	r26, r24
    506e:	51 96       	adiw	r26, 0x11	; 17
    5070:	8c 91       	ld	r24, X
    5072:	51 97       	sbiw	r26, 0x11	; 17
    5074:	82 95       	swap	r24
    5076:	8f 70       	andi	r24, 0x0F	; 15
    5078:	e8 2f       	mov	r30, r24
    507a:	f0 e0       	ldi	r31, 0x00	; 0
    507c:	33 96       	adiw	r30, 0x03	; 3
    507e:	ee 0f       	add	r30, r30
    5080:	ff 1f       	adc	r31, r31
    5082:	e3 57       	subi	r30, 0x73	; 115
    5084:	f3 4e       	sbci	r31, 0xE3	; 227
    5086:	e0 80       	ld	r14, Z
    5088:	f1 80       	ldd	r15, Z+1	; 0x01
    508a:	e1 14       	cp	r14, r1
    508c:	f1 04       	cpc	r15, r1
    508e:	09 f4       	brne	.+2      	; 0x5092 <nwkRxIndicateFrame+0x42>
    5090:	67 c0       	rjmp	.+206    	; 0x5160 <nwkRxIndicateFrame+0x110>
    5092:	1d 96       	adiw	r26, 0x0d	; 13
    5094:	4d 91       	ld	r20, X+
    5096:	5c 91       	ld	r21, X
    5098:	1e 97       	sbiw	r26, 0x0e	; 14
    509a:	5a 83       	std	Y+2, r21	; 0x02
    509c:	49 83       	std	Y+1, r20	; 0x01
    509e:	1f 96       	adiw	r26, 0x0f	; 15
    50a0:	6d 91       	ld	r22, X+
    50a2:	7c 91       	ld	r23, X
    50a4:	50 97       	sbiw	r26, 0x10	; 16
    50a6:	7c 83       	std	Y+4, r23	; 0x04
    50a8:	6b 83       	std	Y+3, r22	; 0x03
    50aa:	51 96       	adiw	r26, 0x11	; 17
    50ac:	9c 91       	ld	r25, X
    50ae:	51 97       	sbiw	r26, 0x11	; 17
    50b0:	9f 70       	andi	r25, 0x0F	; 15
    50b2:	9d 83       	std	Y+5, r25	; 0x05
    50b4:	8e 83       	std	Y+6, r24	; 0x06
    50b6:	cd 01       	movw	r24, r26
    50b8:	8f 57       	subi	r24, 0x7F	; 127
    50ba:	9f 4f       	sbci	r25, 0xFF	; 255
    50bc:	fc 01       	movw	r30, r24
    50be:	80 81       	ld	r24, Z
    50c0:	91 81       	ldd	r25, Z+1	; 0x01
    50c2:	99 87       	std	Y+9, r25	; 0x09
    50c4:	88 87       	std	Y+8, r24	; 0x08
    50c6:	11 96       	adiw	r26, 0x01	; 1
    50c8:	2c 91       	ld	r18, X
    50ca:	11 97       	sbiw	r26, 0x01	; 1
    50cc:	8d 01       	movw	r16, r26
    50ce:	0e 5f       	subi	r16, 0xFE	; 254
    50d0:	1f 4f       	sbci	r17, 0xFF	; 255
    50d2:	80 1b       	sub	r24, r16
    50d4:	91 0b       	sbc	r25, r17
    50d6:	28 1b       	sub	r18, r24
    50d8:	2a 87       	std	Y+10, r18	; 0x0a
    50da:	cd 01       	movw	r24, r26
    50dc:	8d 57       	subi	r24, 0x7D	; 125
    50de:	9f 4f       	sbci	r25, 0xFF	; 255
    50e0:	fc 01       	movw	r30, r24
    50e2:	80 81       	ld	r24, Z
    50e4:	8b 87       	std	Y+11, r24	; 0x0b
    50e6:	cd 01       	movw	r24, r26
    50e8:	8c 57       	subi	r24, 0x7C	; 124
    50ea:	9f 4f       	sbci	r25, 0xFF	; 255
    50ec:	fc 01       	movw	r30, r24
    50ee:	80 81       	ld	r24, Z
    50f0:	8c 87       	std	Y+12, r24	; 0x0c
    50f2:	1b 96       	adiw	r26, 0x0b	; 11
    50f4:	2c 91       	ld	r18, X
    50f6:	1b 97       	sbiw	r26, 0x0b	; 11
    50f8:	92 2f       	mov	r25, r18
    50fa:	91 70       	andi	r25, 0x01	; 1
    50fc:	82 2f       	mov	r24, r18
    50fe:	82 70       	andi	r24, 0x02	; 2
    5100:	98 2b       	or	r25, r24
    5102:	22 ff       	sbrs	r18, 2
    5104:	02 c0       	rjmp	.+4      	; 0x510a <nwkRxIndicateFrame+0xba>
    5106:	80 e2       	ldi	r24, 0x20	; 32
    5108:	01 c0       	rjmp	.+2      	; 0x510c <nwkRxIndicateFrame+0xbc>
    510a:	80 e0       	ldi	r24, 0x00	; 0
    510c:	98 2b       	or	r25, r24
    510e:	23 ff       	sbrs	r18, 3
    5110:	02 c0       	rjmp	.+4      	; 0x5116 <nwkRxIndicateFrame+0xc6>
    5112:	80 e4       	ldi	r24, 0x40	; 64
    5114:	01 c0       	rjmp	.+2      	; 0x5118 <nwkRxIndicateFrame+0xc8>
    5116:	80 e0       	ldi	r24, 0x00	; 0
    5118:	98 2b       	or	r25, r24
    511a:	6f 3f       	cpi	r22, 0xFF	; 255
    511c:	7f 4f       	sbci	r23, 0xFF	; 255
    511e:	11 f4       	brne	.+4      	; 0x5124 <nwkRxIndicateFrame+0xd4>
    5120:	84 e0       	ldi	r24, 0x04	; 4
    5122:	01 c0       	rjmp	.+2      	; 0x5126 <nwkRxIndicateFrame+0xd6>
    5124:	80 e0       	ldi	r24, 0x00	; 0
    5126:	98 2b       	or	r25, r24
    5128:	19 96       	adiw	r26, 0x09	; 9
    512a:	2d 91       	ld	r18, X+
    512c:	3c 91       	ld	r19, X
    512e:	1a 97       	sbiw	r26, 0x0a	; 10
    5130:	42 17       	cp	r20, r18
    5132:	53 07       	cpc	r21, r19
    5134:	11 f4       	brne	.+4      	; 0x513a <nwkRxIndicateFrame+0xea>
    5136:	88 e0       	ldi	r24, 0x08	; 8
    5138:	01 c0       	rjmp	.+2      	; 0x513c <nwkRxIndicateFrame+0xec>
    513a:	80 e0       	ldi	r24, 0x00	; 0
    513c:	98 2b       	or	r25, r24
    513e:	15 96       	adiw	r26, 0x05	; 5
    5140:	2d 91       	ld	r18, X+
    5142:	3c 91       	ld	r19, X
    5144:	16 97       	sbiw	r26, 0x06	; 6
    5146:	2f 3f       	cpi	r18, 0xFF	; 255
    5148:	3f 4f       	sbci	r19, 0xFF	; 255
    514a:	11 f4       	brne	.+4      	; 0x5150 <nwkRxIndicateFrame+0x100>
    514c:	80 e1       	ldi	r24, 0x10	; 16
    514e:	01 c0       	rjmp	.+2      	; 0x5152 <nwkRxIndicateFrame+0x102>
    5150:	80 e0       	ldi	r24, 0x00	; 0
    5152:	89 2b       	or	r24, r25
    5154:	8f 83       	std	Y+7, r24	; 0x07
    5156:	ce 01       	movw	r24, r28
    5158:	01 96       	adiw	r24, 0x01	; 1
    515a:	f7 01       	movw	r30, r14
    515c:	19 95       	eicall
    515e:	01 c0       	rjmp	.+2      	; 0x5162 <nwkRxIndicateFrame+0x112>
    5160:	80 e0       	ldi	r24, 0x00	; 0
    5162:	2c 96       	adiw	r28, 0x0c	; 12
    5164:	0f b6       	in	r0, 0x3f	; 63
    5166:	f8 94       	cli
    5168:	de bf       	out	0x3e, r29	; 62
    516a:	0f be       	out	0x3f, r0	; 63
    516c:	cd bf       	out	0x3d, r28	; 61
    516e:	df 91       	pop	r29
    5170:	cf 91       	pop	r28
    5172:	1f 91       	pop	r17
    5174:	0f 91       	pop	r16
    5176:	ff 90       	pop	r15
    5178:	ef 90       	pop	r14
    517a:	08 95       	ret

0000517c <nwkRxServiceDataInd>:
    517c:	dc 01       	movw	r26, r24
    517e:	19 96       	adiw	r26, 0x09	; 9
    5180:	2c 91       	ld	r18, X
    5182:	19 97       	sbiw	r26, 0x09	; 9
    5184:	22 23       	and	r18, r18
    5186:	71 f0       	breq	.+28     	; 0x51a4 <nwkRxServiceDataInd+0x28>
    5188:	17 96       	adiw	r26, 0x07	; 7
    518a:	ed 91       	ld	r30, X+
    518c:	fc 91       	ld	r31, X
    518e:	18 97       	sbiw	r26, 0x08	; 8
    5190:	20 81       	ld	r18, Z
    5192:	22 23       	and	r18, r18
    5194:	19 f0       	breq	.+6      	; 0x519c <nwkRxServiceDataInd+0x20>
    5196:	21 30       	cpi	r18, 0x01	; 1
    5198:	19 f0       	breq	.+6      	; 0x51a0 <nwkRxServiceDataInd+0x24>
    519a:	06 c0       	rjmp	.+12     	; 0x51a8 <nwkRxServiceDataInd+0x2c>
    519c:	04 c3       	rjmp	.+1544   	; 0x57a6 <nwkTxAckReceived>
    519e:	08 95       	ret
    51a0:	46 cf       	rjmp	.-372    	; 0x502e <nwkRouteErrorReceived>
    51a2:	08 95       	ret
    51a4:	80 e0       	ldi	r24, 0x00	; 0
    51a6:	08 95       	ret
    51a8:	80 e0       	ldi	r24, 0x00	; 0
    51aa:	08 95       	ret

000051ac <nwkRxDuplicateRejectionTimerHandler>:
    51ac:	bc 01       	movw	r22, r24
    51ae:	90 e0       	ldi	r25, 0x00	; 0
    51b0:	80 e0       	ldi	r24, 0x00	; 0
    51b2:	1c c0       	rjmp	.+56     	; 0x51ec <nwkRxDuplicateRejectionTimerHandler+0x40>
    51b4:	29 2f       	mov	r18, r25
    51b6:	30 e0       	ldi	r19, 0x00	; 0
    51b8:	f9 01       	movw	r30, r18
    51ba:	ee 0f       	add	r30, r30
    51bc:	ff 1f       	adc	r31, r31
    51be:	ee 0f       	add	r30, r30
    51c0:	ff 1f       	adc	r31, r31
    51c2:	e2 0f       	add	r30, r18
    51c4:	f3 1f       	adc	r31, r19
    51c6:	ee 54       	subi	r30, 0x4E	; 78
    51c8:	f8 4e       	sbci	r31, 0xE8	; 232
    51ca:	44 81       	ldd	r20, Z+4	; 0x04
    51cc:	44 23       	and	r20, r20
    51ce:	69 f0       	breq	.+26     	; 0x51ea <nwkRxDuplicateRejectionTimerHandler+0x3e>
    51d0:	f9 01       	movw	r30, r18
    51d2:	ee 0f       	add	r30, r30
    51d4:	ff 1f       	adc	r31, r31
    51d6:	ee 0f       	add	r30, r30
    51d8:	ff 1f       	adc	r31, r31
    51da:	2e 0f       	add	r18, r30
    51dc:	3f 1f       	adc	r19, r31
    51de:	f9 01       	movw	r30, r18
    51e0:	ee 54       	subi	r30, 0x4E	; 78
    51e2:	f8 4e       	sbci	r31, 0xE8	; 232
    51e4:	41 50       	subi	r20, 0x01	; 1
    51e6:	44 83       	std	Z+4, r20	; 0x04
    51e8:	81 e0       	ldi	r24, 0x01	; 1
    51ea:	9f 5f       	subi	r25, 0xFF	; 255
    51ec:	9a 30       	cpi	r25, 0x0A	; 10
    51ee:	10 f3       	brcs	.-60     	; 0x51b4 <nwkRxDuplicateRejectionTimerHandler+0x8>
    51f0:	88 23       	and	r24, r24
    51f2:	11 f0       	breq	.+4      	; 0x51f8 <nwkRxDuplicateRejectionTimerHandler+0x4c>
    51f4:	cb 01       	movw	r24, r22
    51f6:	93 c5       	rjmp	.+2854   	; 0x5d1e <SYS_TimerStart>
    51f8:	08 95       	ret

000051fa <nwkRxRejectDuplicate>:
    51fa:	0f 93       	push	r16
    51fc:	1f 93       	push	r17
    51fe:	cf 93       	push	r28
    5200:	df 93       	push	r29
    5202:	ec 01       	movw	r28, r24
    5204:	90 e0       	ldi	r25, 0x00	; 0
    5206:	60 e0       	ldi	r22, 0x00	; 0
    5208:	70 e0       	ldi	r23, 0x00	; 0
    520a:	80 c0       	rjmp	.+256    	; 0x530c <nwkRxRejectDuplicate+0x112>
    520c:	29 2f       	mov	r18, r25
    520e:	30 e0       	ldi	r19, 0x00	; 0
    5210:	f9 01       	movw	r30, r18
    5212:	ee 0f       	add	r30, r30
    5214:	ff 1f       	adc	r31, r31
    5216:	ee 0f       	add	r30, r30
    5218:	ff 1f       	adc	r31, r31
    521a:	e2 0f       	add	r30, r18
    521c:	f3 1f       	adc	r31, r19
    521e:	ee 54       	subi	r30, 0x4E	; 78
    5220:	f8 4e       	sbci	r31, 0xE8	; 232
    5222:	44 81       	ldd	r20, Z+4	; 0x04
    5224:	44 23       	and	r20, r20
    5226:	09 f4       	brne	.+2      	; 0x522a <nwkRxRejectDuplicate+0x30>
    5228:	6d c0       	rjmp	.+218    	; 0x5304 <nwkRxRejectDuplicate+0x10a>
    522a:	0b 85       	ldd	r16, Y+11	; 0x0b
    522c:	1c 85       	ldd	r17, Y+12	; 0x0c
    522e:	a0 81       	ld	r26, Z
    5230:	b1 81       	ldd	r27, Z+1	; 0x01
    5232:	0a 17       	cp	r16, r26
    5234:	1b 07       	cpc	r17, r27
    5236:	09 f0       	breq	.+2      	; 0x523a <nwkRxRejectDuplicate+0x40>
    5238:	65 c0       	rjmp	.+202    	; 0x5304 <nwkRxRejectDuplicate+0x10a>
    523a:	f9 01       	movw	r30, r18
    523c:	ee 0f       	add	r30, r30
    523e:	ff 1f       	adc	r31, r31
    5240:	ee 0f       	add	r30, r30
    5242:	ff 1f       	adc	r31, r31
    5244:	e2 0f       	add	r30, r18
    5246:	f3 1f       	adc	r31, r19
    5248:	ee 54       	subi	r30, 0x4E	; 78
    524a:	f8 4e       	sbci	r31, 0xE8	; 232
    524c:	82 81       	ldd	r24, Z+2	; 0x02
    524e:	9a 85       	ldd	r25, Y+10	; 0x0a
    5250:	89 1b       	sub	r24, r25
    5252:	88 30       	cpi	r24, 0x08	; 8
    5254:	e0 f5       	brcc	.+120    	; 0x52ce <nwkRxRejectDuplicate+0xd4>
    5256:	f9 01       	movw	r30, r18
    5258:	ee 0f       	add	r30, r30
    525a:	ff 1f       	adc	r31, r31
    525c:	ee 0f       	add	r30, r30
    525e:	ff 1f       	adc	r31, r31
    5260:	e2 0f       	add	r30, r18
    5262:	f3 1f       	adc	r31, r19
    5264:	ee 54       	subi	r30, 0x4E	; 78
    5266:	f8 4e       	sbci	r31, 0xE8	; 232
    5268:	93 81       	ldd	r25, Z+3	; 0x03
    526a:	49 2f       	mov	r20, r25
    526c:	50 e0       	ldi	r21, 0x00	; 0
    526e:	08 2e       	mov	r0, r24
    5270:	02 c0       	rjmp	.+4      	; 0x5276 <nwkRxRejectDuplicate+0x7c>
    5272:	55 95       	asr	r21
    5274:	47 95       	ror	r20
    5276:	0a 94       	dec	r0
    5278:	e2 f7       	brpl	.-8      	; 0x5272 <nwkRxRejectDuplicate+0x78>
    527a:	40 ff       	sbrs	r20, 0
    527c:	13 c0       	rjmp	.+38     	; 0x52a4 <nwkRxRejectDuplicate+0xaa>
    527e:	20 91 8d 1c 	lds	r18, 0x1C8D	; 0x801c8d <nwkIb>
    5282:	30 91 8e 1c 	lds	r19, 0x1C8E	; 0x801c8e <nwkIb+0x1>
    5286:	8d 81       	ldd	r24, Y+5	; 0x05
    5288:	9e 81       	ldd	r25, Y+6	; 0x06
    528a:	28 17       	cp	r18, r24
    528c:	39 07       	cpc	r19, r25
    528e:	09 f0       	breq	.+2      	; 0x5292 <nwkRxRejectDuplicate+0x98>
    5290:	53 c0       	rjmp	.+166    	; 0x5338 <nwkRxRejectDuplicate+0x13e>
    5292:	69 85       	ldd	r22, Y+9	; 0x09
    5294:	63 fb       	bst	r22, 3
    5296:	66 27       	eor	r22, r22
    5298:	60 f9       	bld	r22, 0
    529a:	8d 85       	ldd	r24, Y+13	; 0x0d
    529c:	9e 85       	ldd	r25, Y+14	; 0x0e
    529e:	da dd       	rcall	.-1100   	; 0x4e54 <nwkRouteRemove>
    52a0:	81 e0       	ldi	r24, 0x01	; 1
    52a2:	4d c0       	rjmp	.+154    	; 0x533e <nwkRxRejectDuplicate+0x144>
    52a4:	41 e0       	ldi	r20, 0x01	; 1
    52a6:	50 e0       	ldi	r21, 0x00	; 0
    52a8:	02 c0       	rjmp	.+4      	; 0x52ae <nwkRxRejectDuplicate+0xb4>
    52aa:	44 0f       	add	r20, r20
    52ac:	55 1f       	adc	r21, r21
    52ae:	8a 95       	dec	r24
    52b0:	e2 f7       	brpl	.-8      	; 0x52aa <nwkRxRejectDuplicate+0xb0>
    52b2:	f9 01       	movw	r30, r18
    52b4:	ee 0f       	add	r30, r30
    52b6:	ff 1f       	adc	r31, r31
    52b8:	ee 0f       	add	r30, r30
    52ba:	ff 1f       	adc	r31, r31
    52bc:	2e 0f       	add	r18, r30
    52be:	3f 1f       	adc	r19, r31
    52c0:	f9 01       	movw	r30, r18
    52c2:	ee 54       	subi	r30, 0x4E	; 78
    52c4:	f8 4e       	sbci	r31, 0xE8	; 232
    52c6:	94 2b       	or	r25, r20
    52c8:	93 83       	std	Z+3, r25	; 0x03
    52ca:	80 e0       	ldi	r24, 0x00	; 0
    52cc:	38 c0       	rjmp	.+112    	; 0x533e <nwkRxRejectDuplicate+0x144>
    52ce:	81 95       	neg	r24
    52d0:	f9 01       	movw	r30, r18
    52d2:	ee 0f       	add	r30, r30
    52d4:	ff 1f       	adc	r31, r31
    52d6:	ee 0f       	add	r30, r30
    52d8:	ff 1f       	adc	r31, r31
    52da:	2e 0f       	add	r18, r30
    52dc:	3f 1f       	adc	r19, r31
    52de:	f9 01       	movw	r30, r18
    52e0:	ee 54       	subi	r30, 0x4E	; 78
    52e2:	f8 4e       	sbci	r31, 0xE8	; 232
    52e4:	92 83       	std	Z+2, r25	; 0x02
    52e6:	23 81       	ldd	r18, Z+3	; 0x03
    52e8:	30 e0       	ldi	r19, 0x00	; 0
    52ea:	a9 01       	movw	r20, r18
    52ec:	02 c0       	rjmp	.+4      	; 0x52f2 <nwkRxRejectDuplicate+0xf8>
    52ee:	44 0f       	add	r20, r20
    52f0:	55 1f       	adc	r21, r21
    52f2:	8a 95       	dec	r24
    52f4:	e2 f7       	brpl	.-8      	; 0x52ee <nwkRxRejectDuplicate+0xf4>
    52f6:	ca 01       	movw	r24, r20
    52f8:	81 60       	ori	r24, 0x01	; 1
    52fa:	83 83       	std	Z+3, r24	; 0x03
    52fc:	8f e1       	ldi	r24, 0x1F	; 31
    52fe:	84 83       	std	Z+4, r24	; 0x04
    5300:	80 e0       	ldi	r24, 0x00	; 0
    5302:	1d c0       	rjmp	.+58     	; 0x533e <nwkRxRejectDuplicate+0x144>
    5304:	41 11       	cpse	r20, r1
    5306:	01 c0       	rjmp	.+2      	; 0x530a <nwkRxRejectDuplicate+0x110>
    5308:	bf 01       	movw	r22, r30
    530a:	9f 5f       	subi	r25, 0xFF	; 255
    530c:	9a 30       	cpi	r25, 0x0A	; 10
    530e:	08 f4       	brcc	.+2      	; 0x5312 <nwkRxRejectDuplicate+0x118>
    5310:	7d cf       	rjmp	.-262    	; 0x520c <nwkRxRejectDuplicate+0x12>
    5312:	61 15       	cp	r22, r1
    5314:	71 05       	cpc	r23, r1
    5316:	91 f0       	breq	.+36     	; 0x533c <nwkRxRejectDuplicate+0x142>
    5318:	8b 85       	ldd	r24, Y+11	; 0x0b
    531a:	9c 85       	ldd	r25, Y+12	; 0x0c
    531c:	fb 01       	movw	r30, r22
    531e:	91 83       	std	Z+1, r25	; 0x01
    5320:	80 83       	st	Z, r24
    5322:	8a 85       	ldd	r24, Y+10	; 0x0a
    5324:	82 83       	std	Z+2, r24	; 0x02
    5326:	81 e0       	ldi	r24, 0x01	; 1
    5328:	83 83       	std	Z+3, r24	; 0x03
    532a:	8f e1       	ldi	r24, 0x1F	; 31
    532c:	84 83       	std	Z+4, r24	; 0x04
    532e:	84 ea       	ldi	r24, 0xA4	; 164
    5330:	97 e1       	ldi	r25, 0x17	; 23
    5332:	f5 d4       	rcall	.+2538   	; 0x5d1e <SYS_TimerStart>
    5334:	80 e0       	ldi	r24, 0x00	; 0
    5336:	03 c0       	rjmp	.+6      	; 0x533e <nwkRxRejectDuplicate+0x144>
    5338:	81 e0       	ldi	r24, 0x01	; 1
    533a:	01 c0       	rjmp	.+2      	; 0x533e <nwkRxRejectDuplicate+0x144>
    533c:	81 e0       	ldi	r24, 0x01	; 1
    533e:	df 91       	pop	r29
    5340:	cf 91       	pop	r28
    5342:	1f 91       	pop	r17
    5344:	0f 91       	pop	r16
    5346:	08 95       	ret

00005348 <nwkRxHandleReceivedFrame>:
    5348:	0f 93       	push	r16
    534a:	1f 93       	push	r17
    534c:	cf 93       	push	r28
    534e:	df 93       	push	r29
    5350:	fc 01       	movw	r30, r24
    5352:	8c 01       	movw	r16, r24
    5354:	0e 5f       	subi	r16, 0xFE	; 254
    5356:	1f 4f       	sbci	r17, 0xFF	; 255
    5358:	84 e2       	ldi	r24, 0x24	; 36
    535a:	80 83       	st	Z, r24
    535c:	83 85       	ldd	r24, Z+11	; 0x0b
    535e:	81 fd       	sbrc	r24, 1
    5360:	54 c0       	rjmp	.+168    	; 0x540a <nwkRxHandleReceivedFrame+0xc2>
    5362:	83 fd       	sbrc	r24, 3
    5364:	52 c0       	rjmp	.+164    	; 0x540a <nwkRxHandleReceivedFrame+0xc2>
    5366:	25 81       	ldd	r18, Z+5	; 0x05
    5368:	36 81       	ldd	r19, Z+6	; 0x06
    536a:	2f 3f       	cpi	r18, 0xFF	; 255
    536c:	3f 4f       	sbci	r19, 0xFF	; 255
    536e:	79 f4       	brne	.+30     	; 0x538e <nwkRxHandleReceivedFrame+0x46>
    5370:	20 91 8d 1c 	lds	r18, 0x1C8D	; 0x801c8d <nwkIb>
    5374:	30 91 8e 1c 	lds	r19, 0x1C8E	; 0x801c8e <nwkIb+0x1>
    5378:	87 85       	ldd	r24, Z+15	; 0x0f
    537a:	90 89       	ldd	r25, Z+16	; 0x10
    537c:	28 17       	cp	r18, r24
    537e:	39 07       	cpc	r19, r25
    5380:	19 f0       	breq	.+6      	; 0x5388 <nwkRxHandleReceivedFrame+0x40>
    5382:	01 96       	adiw	r24, 0x01	; 1
    5384:	09 f0       	breq	.+2      	; 0x5388 <nwkRxHandleReceivedFrame+0x40>
    5386:	41 c0       	rjmp	.+130    	; 0x540a <nwkRxHandleReceivedFrame+0xc2>
    5388:	82 e2       	ldi	r24, 0x22	; 34
    538a:	80 83       	st	Z, r24
    538c:	3e c0       	rjmp	.+124    	; 0x540a <nwkRxHandleReceivedFrame+0xc2>
    538e:	27 85       	ldd	r18, Z+15	; 0x0f
    5390:	30 89       	ldd	r19, Z+16	; 0x10
    5392:	2f 3f       	cpi	r18, 0xFF	; 255
    5394:	3f 4f       	sbci	r19, 0xFF	; 255
    5396:	11 f4       	brne	.+4      	; 0x539c <nwkRxHandleReceivedFrame+0x54>
    5398:	80 fd       	sbrc	r24, 0
    539a:	37 c0       	rjmp	.+110    	; 0x540a <nwkRxHandleReceivedFrame+0xc2>
    539c:	20 91 8d 1c 	lds	r18, 0x1C8D	; 0x801c8d <nwkIb>
    53a0:	30 91 8e 1c 	lds	r19, 0x1C8E	; 0x801c8e <nwkIb+0x1>
    53a4:	85 85       	ldd	r24, Z+13	; 0x0d
    53a6:	96 85       	ldd	r25, Z+14	; 0x0e
    53a8:	28 17       	cp	r18, r24
    53aa:	39 07       	cpc	r19, r25
    53ac:	71 f1       	breq	.+92     	; 0x540a <nwkRxHandleReceivedFrame+0xc2>
    53ae:	ef 01       	movw	r28, r30
    53b0:	cf 01       	movw	r24, r30
    53b2:	55 dd       	rcall	.-1366   	; 0x4e5e <nwkRouteFrameReceived>
    53b4:	c8 01       	movw	r24, r16
    53b6:	21 df       	rcall	.-446    	; 0x51fa <nwkRxRejectDuplicate>
    53b8:	81 11       	cpse	r24, r1
    53ba:	27 c0       	rjmp	.+78     	; 0x540a <nwkRxHandleReceivedFrame+0xc2>
    53bc:	8f 81       	ldd	r24, Y+7	; 0x07
    53be:	98 85       	ldd	r25, Y+8	; 0x08
    53c0:	01 96       	adiw	r24, 0x01	; 1
    53c2:	71 f4       	brne	.+28     	; 0x53e0 <nwkRxHandleReceivedFrame+0x98>
    53c4:	20 91 8d 1c 	lds	r18, 0x1C8D	; 0x801c8d <nwkIb>
    53c8:	30 91 8e 1c 	lds	r19, 0x1C8E	; 0x801c8e <nwkIb+0x1>
    53cc:	8f 85       	ldd	r24, Y+15	; 0x0f
    53ce:	98 89       	ldd	r25, Y+16	; 0x10
    53d0:	28 17       	cp	r18, r24
    53d2:	39 07       	cpc	r19, r25
    53d4:	29 f0       	breq	.+10     	; 0x53e0 <nwkRxHandleReceivedFrame+0x98>
    53d6:	8b 85       	ldd	r24, Y+11	; 0x0b
    53d8:	82 fd       	sbrc	r24, 2
    53da:	02 c0       	rjmp	.+4      	; 0x53e0 <nwkRxHandleReceivedFrame+0x98>
    53dc:	ce 01       	movw	r24, r28
    53de:	9f d1       	rcall	.+830    	; 0x571e <nwkTxBroadcastFrame>
    53e0:	20 91 8d 1c 	lds	r18, 0x1C8D	; 0x801c8d <nwkIb>
    53e4:	30 91 8e 1c 	lds	r19, 0x1C8E	; 0x801c8e <nwkIb+0x1>
    53e8:	8f 85       	ldd	r24, Y+15	; 0x0f
    53ea:	98 89       	ldd	r25, Y+16	; 0x10
    53ec:	28 17       	cp	r18, r24
    53ee:	39 07       	cpc	r19, r25
    53f0:	11 f0       	breq	.+4      	; 0x53f6 <nwkRxHandleReceivedFrame+0xae>
    53f2:	01 96       	adiw	r24, 0x01	; 1
    53f4:	19 f4       	brne	.+6      	; 0x53fc <nwkRxHandleReceivedFrame+0xb4>
    53f6:	82 e2       	ldi	r24, 0x22	; 34
    53f8:	88 83       	st	Y, r24
    53fa:	07 c0       	rjmp	.+14     	; 0x540a <nwkRxHandleReceivedFrame+0xc2>
    53fc:	8f 81       	ldd	r24, Y+7	; 0x07
    53fe:	98 85       	ldd	r25, Y+8	; 0x08
    5400:	28 17       	cp	r18, r24
    5402:	39 07       	cpc	r19, r25
    5404:	11 f4       	brne	.+4      	; 0x540a <nwkRxHandleReceivedFrame+0xc2>
    5406:	83 e2       	ldi	r24, 0x23	; 35
    5408:	88 83       	st	Y, r24
    540a:	df 91       	pop	r29
    540c:	cf 91       	pop	r28
    540e:	1f 91       	pop	r17
    5410:	0f 91       	pop	r16
    5412:	08 95       	ret

00005414 <nwkRxSendAck>:
    5414:	0f 93       	push	r16
    5416:	1f 93       	push	r17
    5418:	cf 93       	push	r28
    541a:	df 93       	push	r29
    541c:	8c 01       	movw	r16, r24
    541e:	e5 db       	rcall	.-2102   	; 0x4bea <nwkFrameAlloc>
    5420:	ec 01       	movw	r28, r24
    5422:	00 97       	sbiw	r24, 0x00	; 0
    5424:	31 f1       	breq	.+76     	; 0x5472 <nwkRxSendAck+0x5e>
    5426:	34 dc       	rcall	.-1944   	; 0x4c90 <nwkFrameCommandInit>
    5428:	89 81       	ldd	r24, Y+1	; 0x01
    542a:	8d 5f       	subi	r24, 0xFD	; 253
    542c:	89 83       	std	Y+1, r24	; 0x01
    542e:	fe 01       	movw	r30, r28
    5430:	e9 57       	subi	r30, 0x79	; 121
    5432:	ff 4f       	sbci	r31, 0xFF	; 255
    5434:	11 82       	std	Z+1, r1	; 0x01
    5436:	10 82       	st	Z, r1
    5438:	d8 01       	movw	r26, r16
    543a:	1b 96       	adiw	r26, 0x0b	; 11
    543c:	8c 91       	ld	r24, X
    543e:	1b 97       	sbiw	r26, 0x0b	; 11
    5440:	86 95       	lsr	r24
    5442:	81 70       	andi	r24, 0x01	; 1
    5444:	9b 85       	ldd	r25, Y+11	; 0x0b
    5446:	80 fb       	bst	r24, 0
    5448:	91 f9       	bld	r25, 1
    544a:	9b 87       	std	Y+11, r25	; 0x0b
    544c:	1d 96       	adiw	r26, 0x0d	; 13
    544e:	8d 91       	ld	r24, X+
    5450:	9c 91       	ld	r25, X
    5452:	1e 97       	sbiw	r26, 0x0e	; 14
    5454:	98 8b       	std	Y+16, r25	; 0x10
    5456:	8f 87       	std	Y+15, r24	; 0x0f
    5458:	36 97       	sbiw	r30, 0x06	; 6
    545a:	01 90       	ld	r0, Z+
    545c:	f0 81       	ld	r31, Z
    545e:	e0 2d       	mov	r30, r0
    5460:	10 82       	st	Z, r1
    5462:	80 91 b1 17 	lds	r24, 0x17B1	; 0x8017b1 <nwkRxAckControl>
    5466:	82 83       	std	Z+2, r24	; 0x02
    5468:	1c 96       	adiw	r26, 0x0c	; 12
    546a:	8c 91       	ld	r24, X
    546c:	81 83       	std	Z+1, r24	; 0x01
    546e:	ce 01       	movw	r24, r28
    5470:	04 d1       	rcall	.+520    	; 0x567a <nwkTxFrame>
    5472:	df 91       	pop	r29
    5474:	cf 91       	pop	r28
    5476:	1f 91       	pop	r17
    5478:	0f 91       	pop	r16
    547a:	08 95       	ret

0000547c <nwkRxHandleIndication>:
    547c:	cf 93       	push	r28
    547e:	df 93       	push	r29
    5480:	ec 01       	movw	r28, r24
    5482:	10 92 b1 17 	sts	0x17B1, r1	; 0x8017b1 <nwkRxAckControl>
    5486:	e4 dd       	rcall	.-1080   	; 0x5050 <nwkRxIndicateFrame>
    5488:	9b 85       	ldd	r25, Y+11	; 0x0b
    548a:	90 ff       	sbrs	r25, 0
    548c:	80 e0       	ldi	r24, 0x00	; 0
    548e:	2f 81       	ldd	r18, Y+7	; 0x07
    5490:	38 85       	ldd	r19, Y+8	; 0x08
    5492:	2f 3f       	cpi	r18, 0xFF	; 255
    5494:	3f 4f       	sbci	r19, 0xFF	; 255
    5496:	59 f4       	brne	.+22     	; 0x54ae <nwkRxHandleIndication+0x32>
    5498:	40 91 8d 1c 	lds	r20, 0x1C8D	; 0x801c8d <nwkIb>
    549c:	50 91 8e 1c 	lds	r21, 0x1C8E	; 0x801c8e <nwkIb+0x1>
    54a0:	2f 85       	ldd	r18, Y+15	; 0x0f
    54a2:	38 89       	ldd	r19, Y+16	; 0x10
    54a4:	42 17       	cp	r20, r18
    54a6:	53 07       	cpc	r21, r19
    54a8:	11 f4       	brne	.+4      	; 0x54ae <nwkRxHandleIndication+0x32>
    54aa:	93 ff       	sbrs	r25, 3
    54ac:	81 e0       	ldi	r24, 0x01	; 1
    54ae:	2d 81       	ldd	r18, Y+5	; 0x05
    54b0:	3e 81       	ldd	r19, Y+6	; 0x06
    54b2:	2f 3f       	cpi	r18, 0xFF	; 255
    54b4:	3f 4f       	sbci	r19, 0xFF	; 255
    54b6:	09 f4       	brne	.+2      	; 0x54ba <nwkRxHandleIndication+0x3e>
    54b8:	80 e0       	ldi	r24, 0x00	; 0
    54ba:	20 91 8d 1c 	lds	r18, 0x1C8D	; 0x801c8d <nwkIb>
    54be:	30 91 8e 1c 	lds	r19, 0x1C8E	; 0x801c8e <nwkIb+0x1>
    54c2:	2f 3f       	cpi	r18, 0xFF	; 255
    54c4:	3f 4f       	sbci	r19, 0xFF	; 255
    54c6:	09 f4       	brne	.+2      	; 0x54ca <nwkRxHandleIndication+0x4e>
    54c8:	80 e0       	ldi	r24, 0x00	; 0
    54ca:	88 23       	and	r24, r24
    54cc:	11 f0       	breq	.+4      	; 0x54d2 <nwkRxHandleIndication+0x56>
    54ce:	ce 01       	movw	r24, r28
    54d0:	a1 df       	rcall	.-190    	; 0x5414 <nwkRxSendAck>
    54d2:	84 e2       	ldi	r24, 0x24	; 36
    54d4:	88 83       	st	Y, r24
    54d6:	df 91       	pop	r29
    54d8:	cf 91       	pop	r28
    54da:	08 95       	ret

000054dc <nwkRxInit>:
    54dc:	20 e0       	ldi	r18, 0x00	; 0
    54de:	0e c0       	rjmp	.+28     	; 0x54fc <nwkRxInit+0x20>
    54e0:	82 2f       	mov	r24, r18
    54e2:	90 e0       	ldi	r25, 0x00	; 0
    54e4:	fc 01       	movw	r30, r24
    54e6:	ee 0f       	add	r30, r30
    54e8:	ff 1f       	adc	r31, r31
    54ea:	ee 0f       	add	r30, r30
    54ec:	ff 1f       	adc	r31, r31
    54ee:	8e 0f       	add	r24, r30
    54f0:	9f 1f       	adc	r25, r31
    54f2:	fc 01       	movw	r30, r24
    54f4:	ee 54       	subi	r30, 0x4E	; 78
    54f6:	f8 4e       	sbci	r31, 0xE8	; 232
    54f8:	14 82       	std	Z+4, r1	; 0x04
    54fa:	2f 5f       	subi	r18, 0xFF	; 255
    54fc:	2a 30       	cpi	r18, 0x0A	; 10
    54fe:	80 f3       	brcs	.-32     	; 0x54e0 <nwkRxInit+0x4>
    5500:	e4 ea       	ldi	r30, 0xA4	; 164
    5502:	f7 e1       	ldi	r31, 0x17	; 23
    5504:	84 e6       	ldi	r24, 0x64	; 100
    5506:	90 e0       	ldi	r25, 0x00	; 0
    5508:	a0 e0       	ldi	r26, 0x00	; 0
    550a:	b0 e0       	ldi	r27, 0x00	; 0
    550c:	86 83       	std	Z+6, r24	; 0x06
    550e:	97 83       	std	Z+7, r25	; 0x07
    5510:	a0 87       	std	Z+8, r26	; 0x08
    5512:	b1 87       	std	Z+9, r27	; 0x09
    5514:	12 86       	std	Z+10, r1	; 0x0a
    5516:	86 ed       	ldi	r24, 0xD6	; 214
    5518:	98 e2       	ldi	r25, 0x28	; 40
    551a:	94 87       	std	Z+12, r25	; 0x0c
    551c:	83 87       	std	Z+11, r24	; 0x0b
    551e:	6e eb       	ldi	r22, 0xBE	; 190
    5520:	78 e2       	ldi	r23, 0x28	; 40
    5522:	80 e0       	ldi	r24, 0x00	; 0
    5524:	60 ca       	rjmp	.-2880   	; 0x49e6 <NWK_OpenEndpoint>
    5526:	08 95       	ret

00005528 <PHY_DataInd>:
    5528:	cf 93       	push	r28
    552a:	df 93       	push	r29
    552c:	dc 01       	movw	r26, r24
    552e:	ed 91       	ld	r30, X+
    5530:	fc 91       	ld	r31, X
    5532:	21 81       	ldd	r18, Z+1	; 0x01
    5534:	28 38       	cpi	r18, 0x88	; 136
    5536:	11 f5       	brne	.+68     	; 0x557c <PHY_DataInd+0x54>
    5538:	20 81       	ld	r18, Z
    553a:	21 36       	cpi	r18, 0x61	; 97
    553c:	11 f0       	breq	.+4      	; 0x5542 <PHY_DataInd+0x1a>
    553e:	21 34       	cpi	r18, 0x41	; 65
    5540:	e9 f4       	brne	.+58     	; 0x557c <PHY_DataInd+0x54>
    5542:	fc 01       	movw	r30, r24
    5544:	22 81       	ldd	r18, Z+2	; 0x02
    5546:	20 31       	cpi	r18, 0x10	; 16
    5548:	c8 f0       	brcs	.+50     	; 0x557c <PHY_DataInd+0x54>
    554a:	ec 01       	movw	r28, r24
    554c:	4e db       	rcall	.-2404   	; 0x4bea <nwkFrameAlloc>
    554e:	00 97       	sbiw	r24, 0x00	; 0
    5550:	a9 f0       	breq	.+42     	; 0x557c <PHY_DataInd+0x54>
    5552:	20 e2       	ldi	r18, 0x20	; 32
    5554:	dc 01       	movw	r26, r24
    5556:	2c 93       	st	X, r18
    5558:	2a 81       	ldd	r18, Y+2	; 0x02
    555a:	11 96       	adiw	r26, 0x01	; 1
    555c:	2c 93       	st	X, r18
    555e:	2b 81       	ldd	r18, Y+3	; 0x03
    5560:	fc 01       	movw	r30, r24
    5562:	ed 57       	subi	r30, 0x7D	; 125
    5564:	ff 4f       	sbci	r31, 0xFF	; 255
    5566:	20 83       	st	Z, r18
    5568:	2c 81       	ldd	r18, Y+4	; 0x04
    556a:	31 96       	adiw	r30, 0x01	; 1
    556c:	20 83       	st	Z, r18
    556e:	4a 81       	ldd	r20, Y+2	; 0x02
    5570:	68 81       	ld	r22, Y
    5572:	79 81       	ldd	r23, Y+1	; 0x01
    5574:	50 e0       	ldi	r21, 0x00	; 0
    5576:	02 96       	adiw	r24, 0x02	; 2
    5578:	0e 94 3a 34 	call	0x6874	; 0x6874 <memcpy>
    557c:	df 91       	pop	r29
    557e:	cf 91       	pop	r28
    5580:	08 95       	ret

00005582 <nwkRxTaskHandler>:
    5582:	cf 93       	push	r28
    5584:	df 93       	push	r29
    5586:	c0 e0       	ldi	r28, 0x00	; 0
    5588:	d0 e0       	ldi	r29, 0x00	; 0
    558a:	17 c0       	rjmp	.+46     	; 0x55ba <nwkRxTaskHandler+0x38>
    558c:	88 81       	ld	r24, Y
    558e:	82 32       	cpi	r24, 0x22	; 34
    5590:	61 f0       	breq	.+24     	; 0x55aa <nwkRxTaskHandler+0x28>
    5592:	18 f4       	brcc	.+6      	; 0x559a <nwkRxTaskHandler+0x18>
    5594:	80 32       	cpi	r24, 0x20	; 32
    5596:	31 f0       	breq	.+12     	; 0x55a4 <nwkRxTaskHandler+0x22>
    5598:	10 c0       	rjmp	.+32     	; 0x55ba <nwkRxTaskHandler+0x38>
    559a:	83 32       	cpi	r24, 0x23	; 35
    559c:	49 f0       	breq	.+18     	; 0x55b0 <nwkRxTaskHandler+0x2e>
    559e:	84 32       	cpi	r24, 0x24	; 36
    55a0:	51 f0       	breq	.+20     	; 0x55b6 <nwkRxTaskHandler+0x34>
    55a2:	0b c0       	rjmp	.+22     	; 0x55ba <nwkRxTaskHandler+0x38>
    55a4:	ce 01       	movw	r24, r28
    55a6:	d0 de       	rcall	.-608    	; 0x5348 <nwkRxHandleReceivedFrame>
    55a8:	08 c0       	rjmp	.+16     	; 0x55ba <nwkRxTaskHandler+0x38>
    55aa:	ce 01       	movw	r24, r28
    55ac:	67 df       	rcall	.-306    	; 0x547c <nwkRxHandleIndication>
    55ae:	05 c0       	rjmp	.+10     	; 0x55ba <nwkRxTaskHandler+0x38>
    55b0:	ce 01       	movw	r24, r28
    55b2:	14 dd       	rcall	.-1496   	; 0x4fdc <nwkRouteFrame>
    55b4:	02 c0       	rjmp	.+4      	; 0x55ba <nwkRxTaskHandler+0x38>
    55b6:	ce 01       	movw	r24, r28
    55b8:	49 db       	rcall	.-2414   	; 0x4c4c <nwkFrameFree>
    55ba:	ce 01       	movw	r24, r28
    55bc:	51 db       	rcall	.-2398   	; 0x4c60 <nwkFrameNext>
    55be:	ec 01       	movw	r28, r24
    55c0:	89 2b       	or	r24, r25
    55c2:	21 f7       	brne	.-56     	; 0x558c <nwkRxTaskHandler+0xa>
    55c4:	df 91       	pop	r29
    55c6:	cf 91       	pop	r28
    55c8:	08 95       	ret

000055ca <nwkTxConvertPhyStatus>:
    55ca:	81 30       	cpi	r24, 0x01	; 1
    55cc:	51 f0       	breq	.+20     	; 0x55e2 <nwkTxConvertPhyStatus+0x18>
    55ce:	18 f0       	brcs	.+6      	; 0x55d6 <nwkTxConvertPhyStatus+0xc>
    55d0:	82 30       	cpi	r24, 0x02	; 2
    55d2:	19 f0       	breq	.+6      	; 0x55da <nwkTxConvertPhyStatus+0x10>
    55d4:	04 c0       	rjmp	.+8      	; 0x55de <nwkTxConvertPhyStatus+0x14>
    55d6:	80 e0       	ldi	r24, 0x00	; 0
    55d8:	08 95       	ret
    55da:	81 e2       	ldi	r24, 0x21	; 33
    55dc:	08 95       	ret
    55de:	81 e0       	ldi	r24, 0x01	; 1
    55e0:	08 95       	ret
    55e2:	80 e2       	ldi	r24, 0x20	; 32
    55e4:	08 95       	ret

000055e6 <nwkTxDelayTimerHandler>:
    55e6:	1f 93       	push	r17
    55e8:	cf 93       	push	r28
    55ea:	df 93       	push	r29
    55ec:	ec 01       	movw	r28, r24
    55ee:	10 e0       	ldi	r17, 0x00	; 0
    55f0:	80 e0       	ldi	r24, 0x00	; 0
    55f2:	90 e0       	ldi	r25, 0x00	; 0
    55f4:	14 c0       	rjmp	.+40     	; 0x561e <nwkTxDelayTimerHandler+0x38>
    55f6:	fc 01       	movw	r30, r24
    55f8:	20 81       	ld	r18, Z
    55fa:	21 31       	cpi	r18, 0x11	; 17
    55fc:	81 f4       	brne	.+32     	; 0x561e <nwkTxDelayTimerHandler+0x38>
    55fe:	ec 57       	subi	r30, 0x7C	; 124
    5600:	ff 4f       	sbci	r31, 0xFF	; 255
    5602:	20 81       	ld	r18, Z
    5604:	31 81       	ldd	r19, Z+1	; 0x01
    5606:	21 50       	subi	r18, 0x01	; 1
    5608:	31 09       	sbc	r19, r1
    560a:	31 83       	std	Z+1, r19	; 0x01
    560c:	20 83       	st	Z, r18
    560e:	23 2b       	or	r18, r19
    5610:	29 f4       	brne	.+10     	; 0x561c <nwkTxDelayTimerHandler+0x36>
    5612:	23 e1       	ldi	r18, 0x13	; 19
    5614:	fc 01       	movw	r30, r24
    5616:	20 83       	st	Z, r18
    5618:	11 e0       	ldi	r17, 0x01	; 1
    561a:	01 c0       	rjmp	.+2      	; 0x561e <nwkTxDelayTimerHandler+0x38>
    561c:	11 e0       	ldi	r17, 0x01	; 1
    561e:	20 db       	rcall	.-2496   	; 0x4c60 <nwkFrameNext>
    5620:	00 97       	sbiw	r24, 0x00	; 0
    5622:	49 f7       	brne	.-46     	; 0x55f6 <nwkTxDelayTimerHandler+0x10>
    5624:	11 23       	and	r17, r17
    5626:	11 f0       	breq	.+4      	; 0x562c <nwkTxDelayTimerHandler+0x46>
    5628:	ce 01       	movw	r24, r28
    562a:	79 d3       	rcall	.+1778   	; 0x5d1e <SYS_TimerStart>
    562c:	df 91       	pop	r29
    562e:	cf 91       	pop	r28
    5630:	1f 91       	pop	r17
    5632:	08 95       	ret

00005634 <nwkTxInit>:
    5634:	10 92 ff 17 	sts	0x17FF, r1	; 0x8017ff <nwkTxPhyActiveFrame+0x1>
    5638:	10 92 fe 17 	sts	0x17FE, r1	; 0x8017fe <nwkTxPhyActiveFrame>
    563c:	e1 ef       	ldi	r30, 0xF1	; 241
    563e:	f7 e1       	ldi	r31, 0x17	; 23
    5640:	82 e3       	ldi	r24, 0x32	; 50
    5642:	90 e0       	ldi	r25, 0x00	; 0
    5644:	a0 e0       	ldi	r26, 0x00	; 0
    5646:	b0 e0       	ldi	r27, 0x00	; 0
    5648:	86 83       	std	Z+6, r24	; 0x06
    564a:	97 83       	std	Z+7, r25	; 0x07
    564c:	a0 87       	std	Z+8, r26	; 0x08
    564e:	b1 87       	std	Z+9, r27	; 0x09
    5650:	12 86       	std	Z+10, r1	; 0x0a
    5652:	8e ef       	ldi	r24, 0xFE	; 254
    5654:	9b e2       	ldi	r25, 0x2B	; 43
    5656:	94 87       	std	Z+12, r25	; 0x0c
    5658:	83 87       	std	Z+11, r24	; 0x0b
    565a:	e4 ee       	ldi	r30, 0xE4	; 228
    565c:	f7 e1       	ldi	r31, 0x17	; 23
    565e:	8a e0       	ldi	r24, 0x0A	; 10
    5660:	90 e0       	ldi	r25, 0x00	; 0
    5662:	a0 e0       	ldi	r26, 0x00	; 0
    5664:	b0 e0       	ldi	r27, 0x00	; 0
    5666:	86 83       	std	Z+6, r24	; 0x06
    5668:	97 83       	std	Z+7, r25	; 0x07
    566a:	a0 87       	std	Z+8, r26	; 0x08
    566c:	b1 87       	std	Z+9, r27	; 0x09
    566e:	12 86       	std	Z+10, r1	; 0x0a
    5670:	83 ef       	ldi	r24, 0xF3	; 243
    5672:	9a e2       	ldi	r25, 0x2A	; 42
    5674:	94 87       	std	Z+12, r25	; 0x0c
    5676:	83 87       	std	Z+11, r24	; 0x0b
    5678:	08 95       	ret

0000567a <nwkTxFrame>:
    567a:	cf 93       	push	r28
    567c:	df 93       	push	r29
    567e:	ec 01       	movw	r28, r24
    5680:	fc 01       	movw	r30, r24
    5682:	ea 57       	subi	r30, 0x7A	; 122
    5684:	ff 4f       	sbci	r31, 0xFF	; 255
    5686:	80 81       	ld	r24, Z
    5688:	81 ff       	sbrs	r24, 1
    568a:	03 c0       	rjmp	.+6      	; 0x5692 <nwkTxFrame+0x18>
    568c:	92 e1       	ldi	r25, 0x12	; 18
    568e:	98 83       	st	Y, r25
    5690:	02 c0       	rjmp	.+4      	; 0x5696 <nwkTxFrame+0x1c>
    5692:	92 e1       	ldi	r25, 0x12	; 18
    5694:	98 83       	st	Y, r25
    5696:	fe 01       	movw	r30, r28
    5698:	ed 57       	subi	r30, 0x7D	; 125
    569a:	ff 4f       	sbci	r31, 0xFF	; 255
    569c:	10 82       	st	Z, r1
    569e:	98 2f       	mov	r25, r24
    56a0:	91 70       	andi	r25, 0x01	; 1
    56a2:	80 ff       	sbrs	r24, 0
    56a4:	05 c0       	rjmp	.+10     	; 0x56b0 <nwkTxFrame+0x36>
    56a6:	2f ef       	ldi	r18, 0xFF	; 255
    56a8:	3f ef       	ldi	r19, 0xFF	; 255
    56aa:	3e 83       	std	Y+6, r19	; 0x06
    56ac:	2d 83       	std	Y+5, r18	; 0x05
    56ae:	06 c0       	rjmp	.+12     	; 0x56bc <nwkTxFrame+0x42>
    56b0:	20 91 8f 1c 	lds	r18, 0x1C8F	; 0x801c8f <nwkIb+0x2>
    56b4:	30 91 90 1c 	lds	r19, 0x1C90	; 0x801c90 <nwkIb+0x3>
    56b8:	3e 83       	std	Y+6, r19	; 0x06
    56ba:	2d 83       	std	Y+5, r18	; 0x05
    56bc:	82 fd       	sbrc	r24, 2
    56be:	05 c0       	rjmp	.+10     	; 0x56ca <nwkTxFrame+0x50>
    56c0:	91 11       	cpse	r25, r1
    56c2:	03 c0       	rjmp	.+6      	; 0x56ca <nwkTxFrame+0x50>
    56c4:	ce 01       	movw	r24, r28
    56c6:	6b dc       	rcall	.-1834   	; 0x4f9e <nwkRoutePrepareTx>
    56c8:	04 c0       	rjmp	.+8      	; 0x56d2 <nwkTxFrame+0x58>
    56ca:	8f 85       	ldd	r24, Y+15	; 0x0f
    56cc:	98 89       	ldd	r25, Y+16	; 0x10
    56ce:	98 87       	std	Y+8, r25	; 0x08
    56d0:	8f 83       	std	Y+7, r24	; 0x07
    56d2:	ed e8       	ldi	r30, 0x8D	; 141
    56d4:	fc e1       	ldi	r31, 0x1C	; 28
    56d6:	80 81       	ld	r24, Z
    56d8:	91 81       	ldd	r25, Z+1	; 0x01
    56da:	9a 87       	std	Y+10, r25	; 0x0a
    56dc:	89 87       	std	Y+9, r24	; 0x09
    56de:	85 81       	ldd	r24, Z+5	; 0x05
    56e0:	8f 5f       	subi	r24, 0xFF	; 255
    56e2:	85 83       	std	Z+5, r24	; 0x05
    56e4:	8c 83       	std	Y+4, r24	; 0x04
    56e6:	8f 81       	ldd	r24, Y+7	; 0x07
    56e8:	98 85       	ldd	r25, Y+8	; 0x08
    56ea:	01 96       	adiw	r24, 0x01	; 1
    56ec:	69 f4       	brne	.+26     	; 0x5708 <nwkTxFrame+0x8e>
    56ee:	81 e4       	ldi	r24, 0x41	; 65
    56f0:	98 e8       	ldi	r25, 0x88	; 136
    56f2:	9b 83       	std	Y+3, r25	; 0x03
    56f4:	8a 83       	std	Y+2, r24	; 0x02
    56f6:	cd d7       	rcall	.+3994   	; 0x6692 <rand>
    56f8:	87 70       	andi	r24, 0x07	; 7
    56fa:	99 27       	eor	r25, r25
    56fc:	01 96       	adiw	r24, 0x01	; 1
    56fe:	cc 57       	subi	r28, 0x7C	; 124
    5700:	df 4f       	sbci	r29, 0xFF	; 255
    5702:	99 83       	std	Y+1, r25	; 0x01
    5704:	88 83       	st	Y, r24
    5706:	08 c0       	rjmp	.+16     	; 0x5718 <nwkTxFrame+0x9e>
    5708:	81 e6       	ldi	r24, 0x61	; 97
    570a:	98 e8       	ldi	r25, 0x88	; 136
    570c:	9b 83       	std	Y+3, r25	; 0x03
    570e:	8a 83       	std	Y+2, r24	; 0x02
    5710:	cc 57       	subi	r28, 0x7C	; 124
    5712:	df 4f       	sbci	r29, 0xFF	; 255
    5714:	19 82       	std	Y+1, r1	; 0x01
    5716:	18 82       	st	Y, r1
    5718:	df 91       	pop	r29
    571a:	cf 91       	pop	r28
    571c:	08 95       	ret

0000571e <nwkTxBroadcastFrame>:
    571e:	0f 93       	push	r16
    5720:	1f 93       	push	r17
    5722:	cf 93       	push	r28
    5724:	df 93       	push	r29
    5726:	8c 01       	movw	r16, r24
    5728:	60 da       	rcall	.-2880   	; 0x4bea <nwkFrameAlloc>
    572a:	ec 01       	movw	r28, r24
    572c:	89 2b       	or	r24, r25
    572e:	b1 f1       	breq	.+108    	; 0x579c <nwkTxBroadcastFrame+0x7e>
    5730:	82 e1       	ldi	r24, 0x12	; 18
    5732:	88 83       	st	Y, r24
    5734:	f8 01       	movw	r30, r16
    5736:	81 81       	ldd	r24, Z+1	; 0x01
    5738:	89 83       	std	Y+1, r24	; 0x01
    573a:	fe 01       	movw	r30, r28
    573c:	ed 57       	subi	r30, 0x7D	; 125
    573e:	ff 4f       	sbci	r31, 0xFF	; 255
    5740:	10 82       	st	Z, r1
    5742:	a7 d7       	rcall	.+3918   	; 0x6692 <rand>
    5744:	87 70       	andi	r24, 0x07	; 7
    5746:	99 27       	eor	r25, r25
    5748:	01 96       	adiw	r24, 0x01	; 1
    574a:	fe 01       	movw	r30, r28
    574c:	ec 57       	subi	r30, 0x7C	; 124
    574e:	ff 4f       	sbci	r31, 0xFF	; 255
    5750:	91 83       	std	Z+1, r25	; 0x01
    5752:	80 83       	st	Z, r24
    5754:	33 96       	adiw	r30, 0x03	; 3
    5756:	11 82       	std	Z+1, r1	; 0x01
    5758:	10 82       	st	Z, r1
    575a:	f8 01       	movw	r30, r16
    575c:	41 81       	ldd	r20, Z+1	; 0x01
    575e:	b8 01       	movw	r22, r16
    5760:	6e 5f       	subi	r22, 0xFE	; 254
    5762:	7f 4f       	sbci	r23, 0xFF	; 255
    5764:	50 e0       	ldi	r21, 0x00	; 0
    5766:	ce 01       	movw	r24, r28
    5768:	02 96       	adiw	r24, 0x02	; 2
    576a:	0e 94 3a 34 	call	0x6874	; 0x6874 <memcpy>
    576e:	81 e4       	ldi	r24, 0x41	; 65
    5770:	98 e8       	ldi	r25, 0x88	; 136
    5772:	9b 83       	std	Y+3, r25	; 0x03
    5774:	8a 83       	std	Y+2, r24	; 0x02
    5776:	8f ef       	ldi	r24, 0xFF	; 255
    5778:	9f ef       	ldi	r25, 0xFF	; 255
    577a:	98 87       	std	Y+8, r25	; 0x08
    577c:	8f 83       	std	Y+7, r24	; 0x07
    577e:	f8 01       	movw	r30, r16
    5780:	85 81       	ldd	r24, Z+5	; 0x05
    5782:	96 81       	ldd	r25, Z+6	; 0x06
    5784:	9e 83       	std	Y+6, r25	; 0x06
    5786:	8d 83       	std	Y+5, r24	; 0x05
    5788:	ed e8       	ldi	r30, 0x8D	; 141
    578a:	fc e1       	ldi	r31, 0x1C	; 28
    578c:	80 81       	ld	r24, Z
    578e:	91 81       	ldd	r25, Z+1	; 0x01
    5790:	9a 87       	std	Y+10, r25	; 0x0a
    5792:	89 87       	std	Y+9, r24	; 0x09
    5794:	85 81       	ldd	r24, Z+5	; 0x05
    5796:	8f 5f       	subi	r24, 0xFF	; 255
    5798:	85 83       	std	Z+5, r24	; 0x05
    579a:	8c 83       	std	Y+4, r24	; 0x04
    579c:	df 91       	pop	r29
    579e:	cf 91       	pop	r28
    57a0:	1f 91       	pop	r17
    57a2:	0f 91       	pop	r16
    57a4:	08 95       	ret

000057a6 <nwkTxAckReceived>:
    57a6:	cf 93       	push	r28
    57a8:	df 93       	push	r29
    57aa:	fc 01       	movw	r30, r24
    57ac:	c7 81       	ldd	r28, Z+7	; 0x07
    57ae:	d0 85       	ldd	r29, Z+8	; 0x08
    57b0:	81 85       	ldd	r24, Z+9	; 0x09
    57b2:	83 30       	cpi	r24, 0x03	; 3
    57b4:	c1 f4       	brne	.+48     	; 0x57e6 <nwkTxAckReceived+0x40>
    57b6:	80 e0       	ldi	r24, 0x00	; 0
    57b8:	90 e0       	ldi	r25, 0x00	; 0
    57ba:	10 c0       	rjmp	.+32     	; 0x57dc <nwkTxAckReceived+0x36>
    57bc:	fc 01       	movw	r30, r24
    57be:	20 81       	ld	r18, Z
    57c0:	26 31       	cpi	r18, 0x16	; 22
    57c2:	61 f4       	brne	.+24     	; 0x57dc <nwkTxAckReceived+0x36>
    57c4:	34 85       	ldd	r19, Z+12	; 0x0c
    57c6:	29 81       	ldd	r18, Y+1	; 0x01
    57c8:	32 13       	cpse	r19, r18
    57ca:	08 c0       	rjmp	.+16     	; 0x57dc <nwkTxAckReceived+0x36>
    57cc:	27 e1       	ldi	r18, 0x17	; 23
    57ce:	20 83       	st	Z, r18
    57d0:	2a 81       	ldd	r18, Y+2	; 0x02
    57d2:	ea 57       	subi	r30, 0x7A	; 122
    57d4:	ff 4f       	sbci	r31, 0xFF	; 255
    57d6:	20 83       	st	Z, r18
    57d8:	81 e0       	ldi	r24, 0x01	; 1
    57da:	06 c0       	rjmp	.+12     	; 0x57e8 <nwkTxAckReceived+0x42>
    57dc:	41 da       	rcall	.-2942   	; 0x4c60 <nwkFrameNext>
    57de:	00 97       	sbiw	r24, 0x00	; 0
    57e0:	69 f7       	brne	.-38     	; 0x57bc <nwkTxAckReceived+0x16>
    57e2:	80 e0       	ldi	r24, 0x00	; 0
    57e4:	01 c0       	rjmp	.+2      	; 0x57e8 <nwkTxAckReceived+0x42>
    57e6:	80 e0       	ldi	r24, 0x00	; 0
    57e8:	df 91       	pop	r29
    57ea:	cf 91       	pop	r28
    57ec:	08 95       	ret

000057ee <nwkTxConfirm>:
    57ee:	27 e1       	ldi	r18, 0x17	; 23
    57f0:	fc 01       	movw	r30, r24
    57f2:	20 83       	st	Z, r18
    57f4:	ed 57       	subi	r30, 0x7D	; 125
    57f6:	ff 4f       	sbci	r31, 0xFF	; 255
    57f8:	60 83       	st	Z, r22
    57fa:	08 95       	ret

000057fc <nwkTxAckWaitTimerHandler>:
    57fc:	ef 92       	push	r14
    57fe:	ff 92       	push	r15
    5800:	1f 93       	push	r17
    5802:	cf 93       	push	r28
    5804:	df 93       	push	r29
    5806:	7c 01       	movw	r14, r24
    5808:	10 e0       	ldi	r17, 0x00	; 0
    580a:	c0 e0       	ldi	r28, 0x00	; 0
    580c:	d0 e0       	ldi	r29, 0x00	; 0
    580e:	13 c0       	rjmp	.+38     	; 0x5836 <nwkTxAckWaitTimerHandler+0x3a>
    5810:	88 81       	ld	r24, Y
    5812:	86 31       	cpi	r24, 0x16	; 22
    5814:	81 f4       	brne	.+32     	; 0x5836 <nwkTxAckWaitTimerHandler+0x3a>
    5816:	fe 01       	movw	r30, r28
    5818:	ec 57       	subi	r30, 0x7C	; 124
    581a:	ff 4f       	sbci	r31, 0xFF	; 255
    581c:	80 81       	ld	r24, Z
    581e:	91 81       	ldd	r25, Z+1	; 0x01
    5820:	01 97       	sbiw	r24, 0x01	; 1
    5822:	91 83       	std	Z+1, r25	; 0x01
    5824:	80 83       	st	Z, r24
    5826:	89 2b       	or	r24, r25
    5828:	29 f4       	brne	.+10     	; 0x5834 <nwkTxAckWaitTimerHandler+0x38>
    582a:	60 e1       	ldi	r22, 0x10	; 16
    582c:	ce 01       	movw	r24, r28
    582e:	df df       	rcall	.-66     	; 0x57ee <nwkTxConfirm>
    5830:	11 e0       	ldi	r17, 0x01	; 1
    5832:	01 c0       	rjmp	.+2      	; 0x5836 <nwkTxAckWaitTimerHandler+0x3a>
    5834:	11 e0       	ldi	r17, 0x01	; 1
    5836:	ce 01       	movw	r24, r28
    5838:	13 da       	rcall	.-3034   	; 0x4c60 <nwkFrameNext>
    583a:	ec 01       	movw	r28, r24
    583c:	89 2b       	or	r24, r25
    583e:	41 f7       	brne	.-48     	; 0x5810 <nwkTxAckWaitTimerHandler+0x14>
    5840:	11 23       	and	r17, r17
    5842:	11 f0       	breq	.+4      	; 0x5848 <nwkTxAckWaitTimerHandler+0x4c>
    5844:	c7 01       	movw	r24, r14
    5846:	6b d2       	rcall	.+1238   	; 0x5d1e <SYS_TimerStart>
    5848:	df 91       	pop	r29
    584a:	cf 91       	pop	r28
    584c:	1f 91       	pop	r17
    584e:	ff 90       	pop	r15
    5850:	ef 90       	pop	r14
    5852:	08 95       	ret

00005854 <PHY_DataConf>:
    5854:	cf 93       	push	r28
    5856:	df 93       	push	r29
    5858:	c0 91 fe 17 	lds	r28, 0x17FE	; 0x8017fe <nwkTxPhyActiveFrame>
    585c:	d0 91 ff 17 	lds	r29, 0x17FF	; 0x8017ff <nwkTxPhyActiveFrame+0x1>
    5860:	b4 de       	rcall	.-664    	; 0x55ca <nwkTxConvertPhyStatus>
    5862:	fe 01       	movw	r30, r28
    5864:	ed 57       	subi	r30, 0x7D	; 125
    5866:	ff 4f       	sbci	r31, 0xFF	; 255
    5868:	80 83       	st	Z, r24
    586a:	85 e1       	ldi	r24, 0x15	; 21
    586c:	88 83       	st	Y, r24
    586e:	10 92 ff 17 	sts	0x17FF, r1	; 0x8017ff <nwkTxPhyActiveFrame+0x1>
    5872:	10 92 fe 17 	sts	0x17FE, r1	; 0x8017fe <nwkTxPhyActiveFrame>
    5876:	ed e8       	ldi	r30, 0x8D	; 141
    5878:	fc e1       	ldi	r31, 0x1C	; 28
    587a:	86 a1       	ldd	r24, Z+38	; 0x26
    587c:	97 a1       	ldd	r25, Z+39	; 0x27
    587e:	01 97       	sbiw	r24, 0x01	; 1
    5880:	97 a3       	std	Z+39, r25	; 0x27
    5882:	86 a3       	std	Z+38, r24	; 0x26
    5884:	df 91       	pop	r29
    5886:	cf 91       	pop	r28
    5888:	08 95       	ret

0000588a <nwkTxTaskHandler>:
    588a:	cf 93       	push	r28
    588c:	df 93       	push	r29
    588e:	c0 e0       	ldi	r28, 0x00	; 0
    5890:	d0 e0       	ldi	r29, 0x00	; 0
    5892:	68 c0       	rjmp	.+208    	; 0x5964 <nwkTxTaskHandler+0xda>
    5894:	88 81       	ld	r24, Y
    5896:	83 31       	cpi	r24, 0x13	; 19
    5898:	d1 f0       	breq	.+52     	; 0x58ce <nwkTxTaskHandler+0x44>
    589a:	18 f4       	brcc	.+6      	; 0x58a2 <nwkTxTaskHandler+0x18>
    589c:	82 31       	cpi	r24, 0x12	; 18
    589e:	39 f0       	breq	.+14     	; 0x58ae <nwkTxTaskHandler+0x24>
    58a0:	61 c0       	rjmp	.+194    	; 0x5964 <nwkTxTaskHandler+0xda>
    58a2:	85 31       	cpi	r24, 0x15	; 21
    58a4:	69 f1       	breq	.+90     	; 0x5900 <nwkTxTaskHandler+0x76>
    58a6:	87 31       	cpi	r24, 0x17	; 23
    58a8:	09 f4       	brne	.+2      	; 0x58ac <nwkTxTaskHandler+0x22>
    58aa:	4d c0       	rjmp	.+154    	; 0x5946 <nwkTxTaskHandler+0xbc>
    58ac:	5b c0       	rjmp	.+182    	; 0x5964 <nwkTxTaskHandler+0xda>
    58ae:	fe 01       	movw	r30, r28
    58b0:	ec 57       	subi	r30, 0x7C	; 124
    58b2:	ff 4f       	sbci	r31, 0xFF	; 255
    58b4:	80 81       	ld	r24, Z
    58b6:	91 81       	ldd	r25, Z+1	; 0x01
    58b8:	89 2b       	or	r24, r25
    58ba:	31 f0       	breq	.+12     	; 0x58c8 <nwkTxTaskHandler+0x3e>
    58bc:	81 e1       	ldi	r24, 0x11	; 17
    58be:	88 83       	st	Y, r24
    58c0:	84 ee       	ldi	r24, 0xE4	; 228
    58c2:	97 e1       	ldi	r25, 0x17	; 23
    58c4:	2c d2       	rcall	.+1112   	; 0x5d1e <SYS_TimerStart>
    58c6:	4e c0       	rjmp	.+156    	; 0x5964 <nwkTxTaskHandler+0xda>
    58c8:	83 e1       	ldi	r24, 0x13	; 19
    58ca:	88 83       	st	Y, r24
    58cc:	4b c0       	rjmp	.+150    	; 0x5964 <nwkTxTaskHandler+0xda>
    58ce:	80 91 fe 17 	lds	r24, 0x17FE	; 0x8017fe <nwkTxPhyActiveFrame>
    58d2:	90 91 ff 17 	lds	r25, 0x17FF	; 0x8017ff <nwkTxPhyActiveFrame+0x1>
    58d6:	89 2b       	or	r24, r25
    58d8:	09 f0       	breq	.+2      	; 0x58dc <nwkTxTaskHandler+0x52>
    58da:	44 c0       	rjmp	.+136    	; 0x5964 <nwkTxTaskHandler+0xda>
    58dc:	d0 93 ff 17 	sts	0x17FF, r29	; 0x8017ff <nwkTxPhyActiveFrame+0x1>
    58e0:	c0 93 fe 17 	sts	0x17FE, r28	; 0x8017fe <nwkTxPhyActiveFrame>
    58e4:	84 e1       	ldi	r24, 0x14	; 20
    58e6:	88 83       	st	Y, r24
    58e8:	69 81       	ldd	r22, Y+1	; 0x01
    58ea:	ce 01       	movw	r24, r28
    58ec:	02 96       	adiw	r24, 0x02	; 2
    58ee:	c5 d0       	rcall	.+394    	; 0x5a7a <PHY_DataReq>
    58f0:	ed e8       	ldi	r30, 0x8D	; 141
    58f2:	fc e1       	ldi	r31, 0x1C	; 28
    58f4:	86 a1       	ldd	r24, Z+38	; 0x26
    58f6:	97 a1       	ldd	r25, Z+39	; 0x27
    58f8:	01 96       	adiw	r24, 0x01	; 1
    58fa:	97 a3       	std	Z+39, r25	; 0x27
    58fc:	86 a3       	std	Z+38, r24	; 0x26
    58fe:	32 c0       	rjmp	.+100    	; 0x5964 <nwkTxTaskHandler+0xda>
    5900:	fe 01       	movw	r30, r28
    5902:	ed 57       	subi	r30, 0x7D	; 125
    5904:	ff 4f       	sbci	r31, 0xFF	; 255
    5906:	80 81       	ld	r24, Z
    5908:	81 11       	cpse	r24, r1
    590a:	1a c0       	rjmp	.+52     	; 0x5940 <nwkTxTaskHandler+0xb6>
    590c:	2d 85       	ldd	r18, Y+13	; 0x0d
    590e:	3e 85       	ldd	r19, Y+14	; 0x0e
    5910:	80 91 8d 1c 	lds	r24, 0x1C8D	; 0x801c8d <nwkIb>
    5914:	90 91 8e 1c 	lds	r25, 0x1C8E	; 0x801c8e <nwkIb+0x1>
    5918:	28 17       	cp	r18, r24
    591a:	39 07       	cpc	r19, r25
    591c:	71 f4       	brne	.+28     	; 0x593a <nwkTxTaskHandler+0xb0>
    591e:	8b 85       	ldd	r24, Y+11	; 0x0b
    5920:	80 ff       	sbrs	r24, 0
    5922:	0b c0       	rjmp	.+22     	; 0x593a <nwkTxTaskHandler+0xb0>
    5924:	86 e1       	ldi	r24, 0x16	; 22
    5926:	88 83       	st	Y, r24
    5928:	89 e2       	ldi	r24, 0x29	; 41
    592a:	90 e0       	ldi	r25, 0x00	; 0
    592c:	31 96       	adiw	r30, 0x01	; 1
    592e:	91 83       	std	Z+1, r25	; 0x01
    5930:	80 83       	st	Z, r24
    5932:	81 ef       	ldi	r24, 0xF1	; 241
    5934:	97 e1       	ldi	r25, 0x17	; 23
    5936:	f3 d1       	rcall	.+998    	; 0x5d1e <SYS_TimerStart>
    5938:	15 c0       	rjmp	.+42     	; 0x5964 <nwkTxTaskHandler+0xda>
    593a:	87 e1       	ldi	r24, 0x17	; 23
    593c:	88 83       	st	Y, r24
    593e:	12 c0       	rjmp	.+36     	; 0x5964 <nwkTxTaskHandler+0xda>
    5940:	87 e1       	ldi	r24, 0x17	; 23
    5942:	88 83       	st	Y, r24
    5944:	0f c0       	rjmp	.+30     	; 0x5964 <nwkTxTaskHandler+0xda>
    5946:	ce 01       	movw	r24, r28
    5948:	ee da       	rcall	.-2596   	; 0x4f26 <nwkRouteFrameSent>
    594a:	fe 01       	movw	r30, r28
    594c:	e9 57       	subi	r30, 0x79	; 121
    594e:	ff 4f       	sbci	r31, 0xFF	; 255
    5950:	01 90       	ld	r0, Z+
    5952:	f0 81       	ld	r31, Z
    5954:	e0 2d       	mov	r30, r0
    5956:	30 97       	sbiw	r30, 0x00	; 0
    5958:	19 f4       	brne	.+6      	; 0x5960 <nwkTxTaskHandler+0xd6>
    595a:	ce 01       	movw	r24, r28
    595c:	77 d9       	rcall	.-3346   	; 0x4c4c <nwkFrameFree>
    595e:	02 c0       	rjmp	.+4      	; 0x5964 <nwkTxTaskHandler+0xda>
    5960:	ce 01       	movw	r24, r28
    5962:	19 95       	eicall
    5964:	ce 01       	movw	r24, r28
    5966:	7c d9       	rcall	.-3336   	; 0x4c60 <nwkFrameNext>
    5968:	ec 01       	movw	r28, r24
    596a:	89 2b       	or	r24, r25
    596c:	09 f0       	breq	.+2      	; 0x5970 <nwkTxTaskHandler+0xe6>
    596e:	92 cf       	rjmp	.-220    	; 0x5894 <nwkTxTaskHandler+0xa>
    5970:	df 91       	pop	r29
    5972:	cf 91       	pop	r28
    5974:	08 95       	ret

00005976 <phySetChannel>:
    5976:	80 91 00 18 	lds	r24, 0x1800	; 0x801800 <phyBand>
    597a:	98 2f       	mov	r25, r24
    597c:	9f 70       	andi	r25, 0x0F	; 15
    597e:	e4 e5       	ldi	r30, 0x54	; 84
    5980:	f1 e0       	ldi	r31, 0x01	; 1
    5982:	80 81       	ld	r24, Z
    5984:	80 7f       	andi	r24, 0xF0	; 240
    5986:	89 2b       	or	r24, r25
    5988:	80 83       	st	Z, r24
    598a:	80 91 00 18 	lds	r24, 0x1800	; 0x801800 <phyBand>
    598e:	88 23       	and	r24, r24
    5990:	29 f0       	breq	.+10     	; 0x599c <phySetChannel+0x26>
    5992:	80 91 01 18 	lds	r24, 0x1801	; 0x801801 <phyChannel>
    5996:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x7c0153>
    599a:	08 95       	ret
    599c:	80 91 01 18 	lds	r24, 0x1801	; 0x801801 <phyChannel>
    59a0:	98 2f       	mov	r25, r24
    59a2:	9f 71       	andi	r25, 0x1F	; 31
    59a4:	e8 e4       	ldi	r30, 0x48	; 72
    59a6:	f1 e0       	ldi	r31, 0x01	; 1
    59a8:	80 81       	ld	r24, Z
    59aa:	80 7e       	andi	r24, 0xE0	; 224
    59ac:	89 2b       	or	r24, r25
    59ae:	80 83       	st	Z, r24
    59b0:	08 95       	ret

000059b2 <phyTrxSetState>:
    59b2:	93 e0       	ldi	r25, 0x03	; 3
    59b4:	90 93 42 01 	sts	0x0142, r25	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    59b8:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7c0141>
    59bc:	9f 71       	andi	r25, 0x1F	; 31
    59be:	98 30       	cpi	r25, 0x08	; 8
    59c0:	d9 f7       	brne	.-10     	; 0x59b8 <phyTrxSetState+0x6>
    59c2:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    59c6:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7c0141>
    59ca:	9f 71       	andi	r25, 0x1F	; 31
    59cc:	89 13       	cpse	r24, r25
    59ce:	fb cf       	rjmp	.-10     	; 0x59c6 <phyTrxSetState+0x14>
    59d0:	08 95       	ret

000059d2 <phySetRxState>:
    59d2:	88 e0       	ldi	r24, 0x08	; 8
    59d4:	ee df       	rcall	.-36     	; 0x59b2 <phyTrxSetState>
    59d6:	8f ef       	ldi	r24, 0xFF	; 255
    59d8:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <__TEXT_REGION_LENGTH__+0x7c014f>
    59dc:	80 91 02 18 	lds	r24, 0x1802	; 0x801802 <phyRxState>
    59e0:	88 23       	and	r24, r24
    59e2:	11 f0       	breq	.+4      	; 0x59e8 <phySetRxState+0x16>
    59e4:	86 e1       	ldi	r24, 0x16	; 22
    59e6:	e5 cf       	rjmp	.-54     	; 0x59b2 <phyTrxSetState>
    59e8:	08 95       	ret

000059ea <PHY_Init>:
    59ea:	e9 e3       	ldi	r30, 0x39	; 57
    59ec:	f1 e0       	ldi	r31, 0x01	; 1
    59ee:	80 81       	ld	r24, Z
    59f0:	81 60       	ori	r24, 0x01	; 1
    59f2:	80 83       	st	Z, r24
    59f4:	10 92 02 18 	sts	0x1802, r1	; 0x801802 <phyRxState>
    59f8:	10 92 00 18 	sts	0x1800, r1	; 0x801800 <phyBand>
    59fc:	81 e0       	ldi	r24, 0x01	; 1
    59fe:	80 93 83 18 	sts	0x1883, r24	; 0x801883 <phyState>
    5a02:	88 e0       	ldi	r24, 0x08	; 8
    5a04:	d6 df       	rcall	.-84     	; 0x59b2 <phyTrxSetState>
    5a06:	8b ee       	ldi	r24, 0xEB	; 235
    5a08:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <__TEXT_REGION_LENGTH__+0x7c0156>
    5a0c:	ec e4       	ldi	r30, 0x4C	; 76
    5a0e:	f1 e0       	ldi	r31, 0x01	; 1
    5a10:	80 81       	ld	r24, Z
    5a12:	80 68       	ori	r24, 0x80	; 128
    5a14:	80 83       	st	Z, r24
    5a16:	08 95       	ret

00005a18 <PHY_SetRxState>:
    5a18:	80 93 02 18 	sts	0x1802, r24	; 0x801802 <phyRxState>
    5a1c:	da cf       	rjmp	.-76     	; 0x59d2 <phySetRxState>
    5a1e:	08 95       	ret

00005a20 <PHY_SetChannel>:
    5a20:	80 93 01 18 	sts	0x1801, r24	; 0x801801 <phyChannel>
    5a24:	a8 cf       	rjmp	.-176    	; 0x5976 <phySetChannel>
    5a26:	08 95       	ret

00005a28 <PHY_SetPanId>:
    5a28:	cf 93       	push	r28
    5a2a:	df 93       	push	r29
    5a2c:	1f 92       	push	r1
    5a2e:	1f 92       	push	r1
    5a30:	cd b7       	in	r28, 0x3d	; 61
    5a32:	de b7       	in	r29, 0x3e	; 62
    5a34:	9a 83       	std	Y+2, r25	; 0x02
    5a36:	89 83       	std	Y+1, r24	; 0x01
    5a38:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <__TEXT_REGION_LENGTH__+0x7c0162>
    5a3c:	8a 81       	ldd	r24, Y+2	; 0x02
    5a3e:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <__TEXT_REGION_LENGTH__+0x7c0163>
    5a42:	0f 90       	pop	r0
    5a44:	0f 90       	pop	r0
    5a46:	df 91       	pop	r29
    5a48:	cf 91       	pop	r28
    5a4a:	08 95       	ret

00005a4c <PHY_SetShortAddr>:
    5a4c:	cf 93       	push	r28
    5a4e:	df 93       	push	r29
    5a50:	1f 92       	push	r1
    5a52:	1f 92       	push	r1
    5a54:	cd b7       	in	r28, 0x3d	; 61
    5a56:	de b7       	in	r29, 0x3e	; 62
    5a58:	9a 83       	std	Y+2, r25	; 0x02
    5a5a:	89 83       	std	Y+1, r24	; 0x01
    5a5c:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__TEXT_REGION_LENGTH__+0x7c0160>
    5a60:	8a 81       	ldd	r24, Y+2	; 0x02
    5a62:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__TEXT_REGION_LENGTH__+0x7c0161>
    5a66:	99 81       	ldd	r25, Y+1	; 0x01
    5a68:	8a 81       	ldd	r24, Y+2	; 0x02
    5a6a:	89 0f       	add	r24, r25
    5a6c:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <__TEXT_REGION_LENGTH__+0x7c016d>
    5a70:	0f 90       	pop	r0
    5a72:	0f 90       	pop	r0
    5a74:	df 91       	pop	r29
    5a76:	cf 91       	pop	r28
    5a78:	08 95       	ret

00005a7a <PHY_DataReq>:
    5a7a:	0f 93       	push	r16
    5a7c:	1f 93       	push	r17
    5a7e:	cf 93       	push	r28
    5a80:	8c 01       	movw	r16, r24
    5a82:	c6 2f       	mov	r28, r22
    5a84:	89 e1       	ldi	r24, 0x19	; 25
    5a86:	95 df       	rcall	.-214    	; 0x59b2 <phyTrxSetState>
    5a88:	8f ef       	ldi	r24, 0xFF	; 255
    5a8a:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <__TEXT_REGION_LENGTH__+0x7c014f>
    5a8e:	82 e0       	ldi	r24, 0x02	; 2
    5a90:	8c 0f       	add	r24, r28
    5a92:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <__TEXT_REGION_LENGTH__+0x7c0180>
    5a96:	20 e0       	ldi	r18, 0x00	; 0
    5a98:	0b c0       	rjmp	.+22     	; 0x5ab0 <PHY_DataReq+0x36>
    5a9a:	82 2f       	mov	r24, r18
    5a9c:	90 e0       	ldi	r25, 0x00	; 0
    5a9e:	fc 01       	movw	r30, r24
    5aa0:	ef 57       	subi	r30, 0x7F	; 127
    5aa2:	fe 4f       	sbci	r31, 0xFE	; 254
    5aa4:	d8 01       	movw	r26, r16
    5aa6:	a8 0f       	add	r26, r24
    5aa8:	b9 1f       	adc	r27, r25
    5aaa:	8c 91       	ld	r24, X
    5aac:	80 83       	st	Z, r24
    5aae:	2f 5f       	subi	r18, 0xFF	; 255
    5ab0:	2c 17       	cp	r18, r28
    5ab2:	98 f3       	brcs	.-26     	; 0x5a9a <PHY_DataReq+0x20>
    5ab4:	83 e0       	ldi	r24, 0x03	; 3
    5ab6:	80 93 83 18 	sts	0x1883, r24	; 0x801883 <phyState>
    5aba:	82 e0       	ldi	r24, 0x02	; 2
    5abc:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    5ac0:	cf 91       	pop	r28
    5ac2:	1f 91       	pop	r17
    5ac4:	0f 91       	pop	r16
    5ac6:	08 95       	ret

00005ac8 <PHY_TaskHandler>:
    5ac8:	1f 93       	push	r17
    5aca:	cf 93       	push	r28
    5acc:	df 93       	push	r29
    5ace:	00 d0       	rcall	.+0      	; 0x5ad0 <PHY_TaskHandler+0x8>
    5ad0:	1f 92       	push	r1
    5ad2:	1f 92       	push	r1
    5ad4:	cd b7       	in	r28, 0x3d	; 61
    5ad6:	de b7       	in	r29, 0x3e	; 62
    5ad8:	80 91 83 18 	lds	r24, 0x1883	; 0x801883 <phyState>
    5adc:	82 30       	cpi	r24, 0x02	; 2
    5ade:	09 f4       	brne	.+2      	; 0x5ae2 <PHY_TaskHandler+0x1a>
    5ae0:	63 c0       	rjmp	.+198    	; 0x5ba8 <PHY_TaskHandler+0xe0>
    5ae2:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <__TEXT_REGION_LENGTH__+0x7c014f>
    5ae6:	83 ff       	sbrs	r24, 3
    5ae8:	3c c0       	rjmp	.+120    	; 0x5b62 <PHY_TaskHandler+0x9a>
    5aea:	a0 91 7b 01 	lds	r26, 0x017B	; 0x80017b <__TEXT_REGION_LENGTH__+0x7c017b>
    5aee:	20 e0       	ldi	r18, 0x00	; 0
    5af0:	09 c0       	rjmp	.+18     	; 0x5b04 <PHY_TaskHandler+0x3c>
    5af2:	fc 01       	movw	r30, r24
    5af4:	e0 58       	subi	r30, 0x80	; 128
    5af6:	fe 4f       	sbci	r31, 0xFE	; 254
    5af8:	30 81       	ld	r19, Z
    5afa:	fc 01       	movw	r30, r24
    5afc:	ed 5f       	subi	r30, 0xFD	; 253
    5afe:	f7 4e       	sbci	r31, 0xE7	; 231
    5b00:	30 83       	st	Z, r19
    5b02:	2f 5f       	subi	r18, 0xFF	; 255
    5b04:	82 2f       	mov	r24, r18
    5b06:	90 e0       	ldi	r25, 0x00	; 0
    5b08:	4a 2f       	mov	r20, r26
    5b0a:	50 e0       	ldi	r21, 0x00	; 0
    5b0c:	ba 01       	movw	r22, r20
    5b0e:	6f 5f       	subi	r22, 0xFF	; 255
    5b10:	7f 4f       	sbci	r23, 0xFF	; 255
    5b12:	86 17       	cp	r24, r22
    5b14:	97 07       	cpc	r25, r23
    5b16:	6c f3       	brlt	.-38     	; 0x5af2 <PHY_TaskHandler+0x2a>
    5b18:	83 e0       	ldi	r24, 0x03	; 3
    5b1a:	98 e1       	ldi	r25, 0x18	; 24
    5b1c:	9a 83       	std	Y+2, r25	; 0x02
    5b1e:	89 83       	std	Y+1, r24	; 0x01
    5b20:	a2 50       	subi	r26, 0x02	; 2
    5b22:	ab 83       	std	Y+3, r26	; 0x03
    5b24:	fa 01       	movw	r30, r20
    5b26:	ed 5f       	subi	r30, 0xFD	; 253
    5b28:	f7 4e       	sbci	r31, 0xE7	; 231
    5b2a:	80 81       	ld	r24, Z
    5b2c:	8c 83       	std	Y+4, r24	; 0x04
    5b2e:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <__TEXT_REGION_LENGTH__+0x7c0147>
    5b32:	8a 55       	subi	r24, 0x5A	; 90
    5b34:	8d 83       	std	Y+5, r24	; 0x05
    5b36:	ce 01       	movw	r24, r28
    5b38:	01 96       	adiw	r24, 0x01	; 1
    5b3a:	f6 dc       	rcall	.-1556   	; 0x5528 <PHY_DataInd>
    5b3c:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7c0141>
    5b40:	8f 71       	andi	r24, 0x1F	; 31
    5b42:	86 31       	cpi	r24, 0x16	; 22
    5b44:	d9 f7       	brne	.-10     	; 0x5b3c <PHY_TaskHandler+0x74>
    5b46:	ef e4       	ldi	r30, 0x4F	; 79
    5b48:	f1 e0       	ldi	r31, 0x01	; 1
    5b4a:	80 81       	ld	r24, Z
    5b4c:	88 60       	ori	r24, 0x08	; 8
    5b4e:	80 83       	st	Z, r24
    5b50:	ec e4       	ldi	r30, 0x4C	; 76
    5b52:	f1 e0       	ldi	r31, 0x01	; 1
    5b54:	80 81       	ld	r24, Z
    5b56:	8f 77       	andi	r24, 0x7F	; 127
    5b58:	80 83       	st	Z, r24
    5b5a:	80 81       	ld	r24, Z
    5b5c:	80 68       	ori	r24, 0x80	; 128
    5b5e:	80 83       	st	Z, r24
    5b60:	23 c0       	rjmp	.+70     	; 0x5ba8 <PHY_TaskHandler+0xe0>
    5b62:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <__TEXT_REGION_LENGTH__+0x7c014f>
    5b66:	86 ff       	sbrs	r24, 6
    5b68:	1f c0       	rjmp	.+62     	; 0x5ba8 <PHY_TaskHandler+0xe0>
    5b6a:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7c0141>
    5b6e:	8f 71       	andi	r24, 0x1F	; 31
    5b70:	89 31       	cpi	r24, 0x19	; 25
    5b72:	a9 f4       	brne	.+42     	; 0x5b9e <PHY_TaskHandler+0xd6>
    5b74:	10 91 42 01 	lds	r17, 0x0142	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    5b78:	12 95       	swap	r17
    5b7a:	16 95       	lsr	r17
    5b7c:	17 70       	andi	r17, 0x07	; 7
    5b7e:	49 f0       	breq	.+18     	; 0x5b92 <PHY_TaskHandler+0xca>
    5b80:	13 30       	cpi	r17, 0x03	; 3
    5b82:	21 f0       	breq	.+8      	; 0x5b8c <PHY_TaskHandler+0xc4>
    5b84:	15 30       	cpi	r17, 0x05	; 5
    5b86:	21 f4       	brne	.+8      	; 0x5b90 <PHY_TaskHandler+0xc8>
    5b88:	12 e0       	ldi	r17, 0x02	; 2
    5b8a:	03 c0       	rjmp	.+6      	; 0x5b92 <PHY_TaskHandler+0xca>
    5b8c:	11 e0       	ldi	r17, 0x01	; 1
    5b8e:	01 c0       	rjmp	.+2      	; 0x5b92 <PHY_TaskHandler+0xca>
    5b90:	13 e0       	ldi	r17, 0x03	; 3
    5b92:	1f df       	rcall	.-450    	; 0x59d2 <phySetRxState>
    5b94:	81 e0       	ldi	r24, 0x01	; 1
    5b96:	80 93 83 18 	sts	0x1883, r24	; 0x801883 <phyState>
    5b9a:	81 2f       	mov	r24, r17
    5b9c:	5b de       	rcall	.-842    	; 0x5854 <PHY_DataConf>
    5b9e:	ef e4       	ldi	r30, 0x4F	; 79
    5ba0:	f1 e0       	ldi	r31, 0x01	; 1
    5ba2:	80 81       	ld	r24, Z
    5ba4:	80 64       	ori	r24, 0x40	; 64
    5ba6:	80 83       	st	Z, r24
    5ba8:	0f 90       	pop	r0
    5baa:	0f 90       	pop	r0
    5bac:	0f 90       	pop	r0
    5bae:	0f 90       	pop	r0
    5bb0:	0f 90       	pop	r0
    5bb2:	df 91       	pop	r29
    5bb4:	cf 91       	pop	r28
    5bb6:	1f 91       	pop	r17
    5bb8:	08 95       	ret

00005bba <SYS_Init>:
    5bba:	0e 94 7d 23 	call	0x46fa	; 0x46fa <HAL_Init>
    5bbe:	60 d0       	rcall	.+192    	; 0x5c80 <SYS_TimerInit>
    5bc0:	14 df       	rcall	.-472    	; 0x59ea <PHY_Init>
    5bc2:	0c 94 c9 24 	jmp	0x4992	; 0x4992 <NWK_Init>
    5bc6:	08 95       	ret

00005bc8 <SYS_TaskHandler>:
    5bc8:	7f df       	rcall	.-258    	; 0x5ac8 <PHY_TaskHandler>
    5bca:	0e 94 fd 24 	call	0x49fa	; 0x49fa <NWK_TaskHandler>
    5bce:	b2 c0       	rjmp	.+356    	; 0x5d34 <SYS_TimerTaskHandler>
    5bd0:	08 95       	ret

00005bd2 <placeTimer>:
    5bd2:	0f 93       	push	r16
    5bd4:	1f 93       	push	r17
    5bd6:	cf 93       	push	r28
    5bd8:	df 93       	push	r29
    5bda:	ec 01       	movw	r28, r24
    5bdc:	80 91 84 18 	lds	r24, 0x1884	; 0x801884 <timers>
    5be0:	90 91 85 18 	lds	r25, 0x1885	; 0x801885 <timers+0x1>
    5be4:	00 97       	sbiw	r24, 0x00	; 0
    5be6:	c9 f1       	breq	.+114    	; 0x5c5a <placeTimer+0x88>
    5be8:	4e 81       	ldd	r20, Y+6	; 0x06
    5bea:	5f 81       	ldd	r21, Y+7	; 0x07
    5bec:	68 85       	ldd	r22, Y+8	; 0x08
    5bee:	79 85       	ldd	r23, Y+9	; 0x09
    5bf0:	fc 01       	movw	r30, r24
    5bf2:	a0 e0       	ldi	r26, 0x00	; 0
    5bf4:	b0 e0       	ldi	r27, 0x00	; 0
    5bf6:	1a c0       	rjmp	.+52     	; 0x5c2c <placeTimer+0x5a>
    5bf8:	02 81       	ldd	r16, Z+2	; 0x02
    5bfa:	13 81       	ldd	r17, Z+3	; 0x03
    5bfc:	24 81       	ldd	r18, Z+4	; 0x04
    5bfe:	35 81       	ldd	r19, Z+5	; 0x05
    5c00:	40 17       	cp	r20, r16
    5c02:	51 07       	cpc	r21, r17
    5c04:	62 07       	cpc	r22, r18
    5c06:	73 07       	cpc	r23, r19
    5c08:	48 f4       	brcc	.+18     	; 0x5c1c <placeTimer+0x4a>
    5c0a:	04 1b       	sub	r16, r20
    5c0c:	15 0b       	sbc	r17, r21
    5c0e:	26 0b       	sbc	r18, r22
    5c10:	37 0b       	sbc	r19, r23
    5c12:	02 83       	std	Z+2, r16	; 0x02
    5c14:	13 83       	std	Z+3, r17	; 0x03
    5c16:	24 83       	std	Z+4, r18	; 0x04
    5c18:	35 83       	std	Z+5, r19	; 0x05
    5c1a:	0a c0       	rjmp	.+20     	; 0x5c30 <placeTimer+0x5e>
    5c1c:	40 1b       	sub	r20, r16
    5c1e:	51 0b       	sbc	r21, r17
    5c20:	62 0b       	sbc	r22, r18
    5c22:	73 0b       	sbc	r23, r19
    5c24:	df 01       	movw	r26, r30
    5c26:	01 90       	ld	r0, Z+
    5c28:	f0 81       	ld	r31, Z
    5c2a:	e0 2d       	mov	r30, r0
    5c2c:	30 97       	sbiw	r30, 0x00	; 0
    5c2e:	21 f7       	brne	.-56     	; 0x5bf8 <placeTimer+0x26>
    5c30:	4a 83       	std	Y+2, r20	; 0x02
    5c32:	5b 83       	std	Y+3, r21	; 0x03
    5c34:	6c 83       	std	Y+4, r22	; 0x04
    5c36:	7d 83       	std	Y+5, r23	; 0x05
    5c38:	10 97       	sbiw	r26, 0x00	; 0
    5c3a:	41 f0       	breq	.+16     	; 0x5c4c <placeTimer+0x7a>
    5c3c:	8d 91       	ld	r24, X+
    5c3e:	9c 91       	ld	r25, X
    5c40:	11 97       	sbiw	r26, 0x01	; 1
    5c42:	99 83       	std	Y+1, r25	; 0x01
    5c44:	88 83       	st	Y, r24
    5c46:	cd 93       	st	X+, r28
    5c48:	dc 93       	st	X, r29
    5c4a:	15 c0       	rjmp	.+42     	; 0x5c76 <placeTimer+0xa4>
    5c4c:	99 83       	std	Y+1, r25	; 0x01
    5c4e:	88 83       	st	Y, r24
    5c50:	d0 93 85 18 	sts	0x1885, r29	; 0x801885 <timers+0x1>
    5c54:	c0 93 84 18 	sts	0x1884, r28	; 0x801884 <timers>
    5c58:	0e c0       	rjmp	.+28     	; 0x5c76 <placeTimer+0xa4>
    5c5a:	19 82       	std	Y+1, r1	; 0x01
    5c5c:	18 82       	st	Y, r1
    5c5e:	8e 81       	ldd	r24, Y+6	; 0x06
    5c60:	9f 81       	ldd	r25, Y+7	; 0x07
    5c62:	a8 85       	ldd	r26, Y+8	; 0x08
    5c64:	b9 85       	ldd	r27, Y+9	; 0x09
    5c66:	8a 83       	std	Y+2, r24	; 0x02
    5c68:	9b 83       	std	Y+3, r25	; 0x03
    5c6a:	ac 83       	std	Y+4, r26	; 0x04
    5c6c:	bd 83       	std	Y+5, r27	; 0x05
    5c6e:	d0 93 85 18 	sts	0x1885, r29	; 0x801885 <timers+0x1>
    5c72:	c0 93 84 18 	sts	0x1884, r28	; 0x801884 <timers>
    5c76:	df 91       	pop	r29
    5c78:	cf 91       	pop	r28
    5c7a:	1f 91       	pop	r17
    5c7c:	0f 91       	pop	r16
    5c7e:	08 95       	ret

00005c80 <SYS_TimerInit>:
    5c80:	10 92 85 18 	sts	0x1885, r1	; 0x801885 <timers+0x1>
    5c84:	10 92 84 18 	sts	0x1884, r1	; 0x801884 <timers>
    5c88:	08 95       	ret

00005c8a <SYS_TimerStop>:
    5c8a:	cf 93       	push	r28
    5c8c:	df 93       	push	r29
    5c8e:	e0 91 84 18 	lds	r30, 0x1884	; 0x801884 <timers>
    5c92:	f0 91 85 18 	lds	r31, 0x1885	; 0x801885 <timers+0x1>
    5c96:	a0 e0       	ldi	r26, 0x00	; 0
    5c98:	b0 e0       	ldi	r27, 0x00	; 0
    5c9a:	2b c0       	rjmp	.+86     	; 0x5cf2 <SYS_TimerStop+0x68>
    5c9c:	e8 17       	cp	r30, r24
    5c9e:	f9 07       	cpc	r31, r25
    5ca0:	21 f5       	brne	.+72     	; 0x5cea <SYS_TimerStop+0x60>
    5ca2:	10 97       	sbiw	r26, 0x00	; 0
    5ca4:	29 f0       	breq	.+10     	; 0x5cb0 <SYS_TimerStop+0x26>
    5ca6:	20 81       	ld	r18, Z
    5ca8:	31 81       	ldd	r19, Z+1	; 0x01
    5caa:	2d 93       	st	X+, r18
    5cac:	3c 93       	st	X, r19
    5cae:	06 c0       	rjmp	.+12     	; 0x5cbc <SYS_TimerStop+0x32>
    5cb0:	20 81       	ld	r18, Z
    5cb2:	31 81       	ldd	r19, Z+1	; 0x01
    5cb4:	30 93 85 18 	sts	0x1885, r19	; 0x801885 <timers+0x1>
    5cb8:	20 93 84 18 	sts	0x1884, r18	; 0x801884 <timers>
    5cbc:	01 90       	ld	r0, Z+
    5cbe:	f0 81       	ld	r31, Z
    5cc0:	e0 2d       	mov	r30, r0
    5cc2:	30 97       	sbiw	r30, 0x00	; 0
    5cc4:	c1 f0       	breq	.+48     	; 0x5cf6 <SYS_TimerStop+0x6c>
    5cc6:	ec 01       	movw	r28, r24
    5cc8:	8a 81       	ldd	r24, Y+2	; 0x02
    5cca:	9b 81       	ldd	r25, Y+3	; 0x03
    5ccc:	ac 81       	ldd	r26, Y+4	; 0x04
    5cce:	bd 81       	ldd	r27, Y+5	; 0x05
    5cd0:	42 81       	ldd	r20, Z+2	; 0x02
    5cd2:	53 81       	ldd	r21, Z+3	; 0x03
    5cd4:	64 81       	ldd	r22, Z+4	; 0x04
    5cd6:	75 81       	ldd	r23, Z+5	; 0x05
    5cd8:	84 0f       	add	r24, r20
    5cda:	95 1f       	adc	r25, r21
    5cdc:	a6 1f       	adc	r26, r22
    5cde:	b7 1f       	adc	r27, r23
    5ce0:	82 83       	std	Z+2, r24	; 0x02
    5ce2:	93 83       	std	Z+3, r25	; 0x03
    5ce4:	a4 83       	std	Z+4, r26	; 0x04
    5ce6:	b5 83       	std	Z+5, r27	; 0x05
    5ce8:	06 c0       	rjmp	.+12     	; 0x5cf6 <SYS_TimerStop+0x6c>
    5cea:	df 01       	movw	r26, r30
    5cec:	01 90       	ld	r0, Z+
    5cee:	f0 81       	ld	r31, Z
    5cf0:	e0 2d       	mov	r30, r0
    5cf2:	30 97       	sbiw	r30, 0x00	; 0
    5cf4:	99 f6       	brne	.-90     	; 0x5c9c <SYS_TimerStop+0x12>
    5cf6:	df 91       	pop	r29
    5cf8:	cf 91       	pop	r28
    5cfa:	08 95       	ret

00005cfc <SYS_TimerStarted>:
    5cfc:	e0 91 84 18 	lds	r30, 0x1884	; 0x801884 <timers>
    5d00:	f0 91 85 18 	lds	r31, 0x1885	; 0x801885 <timers+0x1>
    5d04:	06 c0       	rjmp	.+12     	; 0x5d12 <SYS_TimerStarted+0x16>
    5d06:	e8 17       	cp	r30, r24
    5d08:	f9 07       	cpc	r31, r25
    5d0a:	39 f0       	breq	.+14     	; 0x5d1a <SYS_TimerStarted+0x1e>
    5d0c:	01 90       	ld	r0, Z+
    5d0e:	f0 81       	ld	r31, Z
    5d10:	e0 2d       	mov	r30, r0
    5d12:	30 97       	sbiw	r30, 0x00	; 0
    5d14:	c1 f7       	brne	.-16     	; 0x5d06 <SYS_TimerStarted+0xa>
    5d16:	80 e0       	ldi	r24, 0x00	; 0
    5d18:	08 95       	ret
    5d1a:	81 e0       	ldi	r24, 0x01	; 1
    5d1c:	08 95       	ret

00005d1e <SYS_TimerStart>:
    5d1e:	cf 93       	push	r28
    5d20:	df 93       	push	r29
    5d22:	ec 01       	movw	r28, r24
    5d24:	eb df       	rcall	.-42     	; 0x5cfc <SYS_TimerStarted>
    5d26:	81 11       	cpse	r24, r1
    5d28:	02 c0       	rjmp	.+4      	; 0x5d2e <SYS_TimerStart+0x10>
    5d2a:	ce 01       	movw	r24, r28
    5d2c:	52 df       	rcall	.-348    	; 0x5bd2 <placeTimer>
    5d2e:	df 91       	pop	r29
    5d30:	cf 91       	pop	r28
    5d32:	08 95       	ret

00005d34 <SYS_TimerTaskHandler>:
    5d34:	cf 92       	push	r12
    5d36:	df 92       	push	r13
    5d38:	ef 92       	push	r14
    5d3a:	ff 92       	push	r15
    5d3c:	cf 93       	push	r28
    5d3e:	df 93       	push	r29
    5d40:	80 91 8c 1c 	lds	r24, 0x1C8C	; 0x801c8c <halTimerIrqCount>
    5d44:	88 23       	and	r24, r24
    5d46:	09 f4       	brne	.+2      	; 0x5d4a <SYS_TimerTaskHandler+0x16>
    5d48:	4d c0       	rjmp	.+154    	; 0x5de4 <SYS_TimerTaskHandler+0xb0>
    5d4a:	8f b7       	in	r24, 0x3f	; 63
    5d4c:	f8 94       	cli
    5d4e:	c0 90 8c 1c 	lds	r12, 0x1C8C	; 0x801c8c <halTimerIrqCount>
    5d52:	10 92 8c 1c 	sts	0x1C8C, r1	; 0x801c8c <halTimerIrqCount>
    5d56:	8f bf       	out	0x3f, r24	; 63
    5d58:	d1 2c       	mov	r13, r1
    5d5a:	e1 2c       	mov	r14, r1
    5d5c:	f1 2c       	mov	r15, r1
    5d5e:	cc 0c       	add	r12, r12
    5d60:	dd 1c       	adc	r13, r13
    5d62:	ee 1c       	adc	r14, r14
    5d64:	ff 1c       	adc	r15, r15
    5d66:	d7 01       	movw	r26, r14
    5d68:	c6 01       	movw	r24, r12
    5d6a:	88 0f       	add	r24, r24
    5d6c:	99 1f       	adc	r25, r25
    5d6e:	aa 1f       	adc	r26, r26
    5d70:	bb 1f       	adc	r27, r27
    5d72:	88 0f       	add	r24, r24
    5d74:	99 1f       	adc	r25, r25
    5d76:	aa 1f       	adc	r26, r26
    5d78:	bb 1f       	adc	r27, r27
    5d7a:	c8 0e       	add	r12, r24
    5d7c:	d9 1e       	adc	r13, r25
    5d7e:	ea 1e       	adc	r14, r26
    5d80:	fb 1e       	adc	r15, r27
    5d82:	13 c0       	rjmp	.+38     	; 0x5daa <SYS_TimerTaskHandler+0x76>
    5d84:	c8 1a       	sub	r12, r24
    5d86:	d9 0a       	sbc	r13, r25
    5d88:	ea 0a       	sbc	r14, r26
    5d8a:	fb 0a       	sbc	r15, r27
    5d8c:	88 81       	ld	r24, Y
    5d8e:	99 81       	ldd	r25, Y+1	; 0x01
    5d90:	90 93 85 18 	sts	0x1885, r25	; 0x801885 <timers+0x1>
    5d94:	80 93 84 18 	sts	0x1884, r24	; 0x801884 <timers>
    5d98:	8a 85       	ldd	r24, Y+10	; 0x0a
    5d9a:	81 30       	cpi	r24, 0x01	; 1
    5d9c:	11 f4       	brne	.+4      	; 0x5da2 <SYS_TimerTaskHandler+0x6e>
    5d9e:	ce 01       	movw	r24, r28
    5da0:	18 df       	rcall	.-464    	; 0x5bd2 <placeTimer>
    5da2:	eb 85       	ldd	r30, Y+11	; 0x0b
    5da4:	fc 85       	ldd	r31, Y+12	; 0x0c
    5da6:	ce 01       	movw	r24, r28
    5da8:	19 95       	eicall
    5daa:	c0 91 84 18 	lds	r28, 0x1884	; 0x801884 <timers>
    5dae:	d0 91 85 18 	lds	r29, 0x1885	; 0x801885 <timers+0x1>
    5db2:	20 97       	sbiw	r28, 0x00	; 0
    5db4:	49 f0       	breq	.+18     	; 0x5dc8 <SYS_TimerTaskHandler+0x94>
    5db6:	8a 81       	ldd	r24, Y+2	; 0x02
    5db8:	9b 81       	ldd	r25, Y+3	; 0x03
    5dba:	ac 81       	ldd	r26, Y+4	; 0x04
    5dbc:	bd 81       	ldd	r27, Y+5	; 0x05
    5dbe:	c8 16       	cp	r12, r24
    5dc0:	d9 06       	cpc	r13, r25
    5dc2:	ea 06       	cpc	r14, r26
    5dc4:	fb 06       	cpc	r15, r27
    5dc6:	f0 f6       	brcc	.-68     	; 0x5d84 <SYS_TimerTaskHandler+0x50>
    5dc8:	20 97       	sbiw	r28, 0x00	; 0
    5dca:	61 f0       	breq	.+24     	; 0x5de4 <SYS_TimerTaskHandler+0xb0>
    5dcc:	8a 81       	ldd	r24, Y+2	; 0x02
    5dce:	9b 81       	ldd	r25, Y+3	; 0x03
    5dd0:	ac 81       	ldd	r26, Y+4	; 0x04
    5dd2:	bd 81       	ldd	r27, Y+5	; 0x05
    5dd4:	8c 19       	sub	r24, r12
    5dd6:	9d 09       	sbc	r25, r13
    5dd8:	ae 09       	sbc	r26, r14
    5dda:	bf 09       	sbc	r27, r15
    5ddc:	8a 83       	std	Y+2, r24	; 0x02
    5dde:	9b 83       	std	Y+3, r25	; 0x03
    5de0:	ac 83       	std	Y+4, r26	; 0x04
    5de2:	bd 83       	std	Y+5, r27	; 0x05
    5de4:	df 91       	pop	r29
    5de6:	cf 91       	pop	r28
    5de8:	ff 90       	pop	r15
    5dea:	ef 90       	pop	r14
    5dec:	df 90       	pop	r13
    5dee:	cf 90       	pop	r12
    5df0:	08 95       	ret

00005df2 <UART_init>:
    5df2:	9c 01       	movw	r18, r24
    5df4:	40 e0       	ldi	r20, 0x00	; 0
    5df6:	50 e0       	ldi	r21, 0x00	; 0
    5df8:	60 e2       	ldi	r22, 0x20	; 32
    5dfa:	71 ea       	ldi	r23, 0xA1	; 161
    5dfc:	87 e0       	ldi	r24, 0x07	; 7
    5dfe:	90 e0       	ldi	r25, 0x00	; 0
    5e00:	c4 d3       	rcall	.+1928   	; 0x658a <__divmodsi4>
    5e02:	21 50       	subi	r18, 0x01	; 1
    5e04:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7c00cd>
    5e08:	20 93 cc 00 	sts	0x00CC, r18	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7c00cc>
    5e0c:	e9 ec       	ldi	r30, 0xC9	; 201
    5e0e:	f0 e0       	ldi	r31, 0x00	; 0
    5e10:	88 e1       	ldi	r24, 0x18	; 24
    5e12:	80 83       	st	Z, r24
    5e14:	86 e0       	ldi	r24, 0x06	; 6
    5e16:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
    5e1a:	80 81       	ld	r24, Z
    5e1c:	80 68       	ori	r24, 0x80	; 128
    5e1e:	80 83       	st	Z, r24
    5e20:	08 95       	ret

00005e22 <printCHAR>:
    5e22:	90 91 c8 00 	lds	r25, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7c00c8>
    5e26:	95 ff       	sbrs	r25, 5
    5e28:	fc cf       	rjmp	.-8      	; 0x5e22 <printCHAR>
    5e2a:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    5e2e:	80 e0       	ldi	r24, 0x00	; 0
    5e30:	90 e0       	ldi	r25, 0x00	; 0
    5e32:	08 95       	ret

00005e34 <vfprintf>:
    5e34:	2f 92       	push	r2
    5e36:	3f 92       	push	r3
    5e38:	4f 92       	push	r4
    5e3a:	5f 92       	push	r5
    5e3c:	6f 92       	push	r6
    5e3e:	7f 92       	push	r7
    5e40:	8f 92       	push	r8
    5e42:	9f 92       	push	r9
    5e44:	af 92       	push	r10
    5e46:	bf 92       	push	r11
    5e48:	cf 92       	push	r12
    5e4a:	df 92       	push	r13
    5e4c:	ef 92       	push	r14
    5e4e:	ff 92       	push	r15
    5e50:	0f 93       	push	r16
    5e52:	1f 93       	push	r17
    5e54:	cf 93       	push	r28
    5e56:	df 93       	push	r29
    5e58:	cd b7       	in	r28, 0x3d	; 61
    5e5a:	de b7       	in	r29, 0x3e	; 62
    5e5c:	60 97       	sbiw	r28, 0x10	; 16
    5e5e:	0f b6       	in	r0, 0x3f	; 63
    5e60:	f8 94       	cli
    5e62:	de bf       	out	0x3e, r29	; 62
    5e64:	0f be       	out	0x3f, r0	; 63
    5e66:	cd bf       	out	0x3d, r28	; 61
    5e68:	7c 01       	movw	r14, r24
    5e6a:	1b 01       	movw	r2, r22
    5e6c:	6a 01       	movw	r12, r20
    5e6e:	fc 01       	movw	r30, r24
    5e70:	17 82       	std	Z+7, r1	; 0x07
    5e72:	16 82       	std	Z+6, r1	; 0x06
    5e74:	83 81       	ldd	r24, Z+3	; 0x03
    5e76:	81 ff       	sbrs	r24, 1
    5e78:	2a c3       	rjmp	.+1620   	; 0x64ce <vfprintf+0x69a>
    5e7a:	9e 01       	movw	r18, r28
    5e7c:	2f 5f       	subi	r18, 0xFF	; 255
    5e7e:	3f 4f       	sbci	r19, 0xFF	; 255
    5e80:	39 01       	movw	r6, r18
    5e82:	f7 01       	movw	r30, r14
    5e84:	93 81       	ldd	r25, Z+3	; 0x03
    5e86:	f1 01       	movw	r30, r2
    5e88:	93 fd       	sbrc	r25, 3
    5e8a:	85 91       	lpm	r24, Z+
    5e8c:	93 ff       	sbrs	r25, 3
    5e8e:	81 91       	ld	r24, Z+
    5e90:	1f 01       	movw	r2, r30
    5e92:	88 23       	and	r24, r24
    5e94:	09 f4       	brne	.+2      	; 0x5e98 <vfprintf+0x64>
    5e96:	17 c3       	rjmp	.+1582   	; 0x64c6 <vfprintf+0x692>
    5e98:	85 32       	cpi	r24, 0x25	; 37
    5e9a:	39 f4       	brne	.+14     	; 0x5eaa <vfprintf+0x76>
    5e9c:	93 fd       	sbrc	r25, 3
    5e9e:	85 91       	lpm	r24, Z+
    5ea0:	93 ff       	sbrs	r25, 3
    5ea2:	81 91       	ld	r24, Z+
    5ea4:	1f 01       	movw	r2, r30
    5ea6:	85 32       	cpi	r24, 0x25	; 37
    5ea8:	31 f4       	brne	.+12     	; 0x5eb6 <vfprintf+0x82>
    5eaa:	b7 01       	movw	r22, r14
    5eac:	90 e0       	ldi	r25, 0x00	; 0
    5eae:	13 d5       	rcall	.+2598   	; 0x68d6 <fputc>
    5eb0:	56 01       	movw	r10, r12
    5eb2:	65 01       	movw	r12, r10
    5eb4:	e6 cf       	rjmp	.-52     	; 0x5e82 <vfprintf+0x4e>
    5eb6:	10 e0       	ldi	r17, 0x00	; 0
    5eb8:	51 2c       	mov	r5, r1
    5eba:	91 2c       	mov	r9, r1
    5ebc:	ff e1       	ldi	r31, 0x1F	; 31
    5ebe:	f9 15       	cp	r31, r9
    5ec0:	d8 f0       	brcs	.+54     	; 0x5ef8 <vfprintf+0xc4>
    5ec2:	8b 32       	cpi	r24, 0x2B	; 43
    5ec4:	79 f0       	breq	.+30     	; 0x5ee4 <vfprintf+0xb0>
    5ec6:	38 f4       	brcc	.+14     	; 0x5ed6 <vfprintf+0xa2>
    5ec8:	80 32       	cpi	r24, 0x20	; 32
    5eca:	79 f0       	breq	.+30     	; 0x5eea <vfprintf+0xb6>
    5ecc:	83 32       	cpi	r24, 0x23	; 35
    5ece:	a1 f4       	brne	.+40     	; 0x5ef8 <vfprintf+0xc4>
    5ed0:	f9 2d       	mov	r31, r9
    5ed2:	f0 61       	ori	r31, 0x10	; 16
    5ed4:	2e c0       	rjmp	.+92     	; 0x5f32 <vfprintf+0xfe>
    5ed6:	8d 32       	cpi	r24, 0x2D	; 45
    5ed8:	61 f0       	breq	.+24     	; 0x5ef2 <vfprintf+0xbe>
    5eda:	80 33       	cpi	r24, 0x30	; 48
    5edc:	69 f4       	brne	.+26     	; 0x5ef8 <vfprintf+0xc4>
    5ede:	29 2d       	mov	r18, r9
    5ee0:	21 60       	ori	r18, 0x01	; 1
    5ee2:	2d c0       	rjmp	.+90     	; 0x5f3e <vfprintf+0x10a>
    5ee4:	39 2d       	mov	r19, r9
    5ee6:	32 60       	ori	r19, 0x02	; 2
    5ee8:	93 2e       	mov	r9, r19
    5eea:	89 2d       	mov	r24, r9
    5eec:	84 60       	ori	r24, 0x04	; 4
    5eee:	98 2e       	mov	r9, r24
    5ef0:	2a c0       	rjmp	.+84     	; 0x5f46 <vfprintf+0x112>
    5ef2:	e9 2d       	mov	r30, r9
    5ef4:	e8 60       	ori	r30, 0x08	; 8
    5ef6:	15 c0       	rjmp	.+42     	; 0x5f22 <vfprintf+0xee>
    5ef8:	97 fc       	sbrc	r9, 7
    5efa:	2d c0       	rjmp	.+90     	; 0x5f56 <vfprintf+0x122>
    5efc:	20 ed       	ldi	r18, 0xD0	; 208
    5efe:	28 0f       	add	r18, r24
    5f00:	2a 30       	cpi	r18, 0x0A	; 10
    5f02:	88 f4       	brcc	.+34     	; 0x5f26 <vfprintf+0xf2>
    5f04:	96 fe       	sbrs	r9, 6
    5f06:	06 c0       	rjmp	.+12     	; 0x5f14 <vfprintf+0xe0>
    5f08:	3a e0       	ldi	r19, 0x0A	; 10
    5f0a:	13 9f       	mul	r17, r19
    5f0c:	20 0d       	add	r18, r0
    5f0e:	11 24       	eor	r1, r1
    5f10:	12 2f       	mov	r17, r18
    5f12:	19 c0       	rjmp	.+50     	; 0x5f46 <vfprintf+0x112>
    5f14:	8a e0       	ldi	r24, 0x0A	; 10
    5f16:	58 9e       	mul	r5, r24
    5f18:	20 0d       	add	r18, r0
    5f1a:	11 24       	eor	r1, r1
    5f1c:	52 2e       	mov	r5, r18
    5f1e:	e9 2d       	mov	r30, r9
    5f20:	e0 62       	ori	r30, 0x20	; 32
    5f22:	9e 2e       	mov	r9, r30
    5f24:	10 c0       	rjmp	.+32     	; 0x5f46 <vfprintf+0x112>
    5f26:	8e 32       	cpi	r24, 0x2E	; 46
    5f28:	31 f4       	brne	.+12     	; 0x5f36 <vfprintf+0x102>
    5f2a:	96 fc       	sbrc	r9, 6
    5f2c:	cc c2       	rjmp	.+1432   	; 0x64c6 <vfprintf+0x692>
    5f2e:	f9 2d       	mov	r31, r9
    5f30:	f0 64       	ori	r31, 0x40	; 64
    5f32:	9f 2e       	mov	r9, r31
    5f34:	08 c0       	rjmp	.+16     	; 0x5f46 <vfprintf+0x112>
    5f36:	8c 36       	cpi	r24, 0x6C	; 108
    5f38:	21 f4       	brne	.+8      	; 0x5f42 <vfprintf+0x10e>
    5f3a:	29 2d       	mov	r18, r9
    5f3c:	20 68       	ori	r18, 0x80	; 128
    5f3e:	92 2e       	mov	r9, r18
    5f40:	02 c0       	rjmp	.+4      	; 0x5f46 <vfprintf+0x112>
    5f42:	88 36       	cpi	r24, 0x68	; 104
    5f44:	41 f4       	brne	.+16     	; 0x5f56 <vfprintf+0x122>
    5f46:	f1 01       	movw	r30, r2
    5f48:	93 fd       	sbrc	r25, 3
    5f4a:	85 91       	lpm	r24, Z+
    5f4c:	93 ff       	sbrs	r25, 3
    5f4e:	81 91       	ld	r24, Z+
    5f50:	1f 01       	movw	r2, r30
    5f52:	81 11       	cpse	r24, r1
    5f54:	b3 cf       	rjmp	.-154    	; 0x5ebc <vfprintf+0x88>
    5f56:	9b eb       	ldi	r25, 0xBB	; 187
    5f58:	98 0f       	add	r25, r24
    5f5a:	93 30       	cpi	r25, 0x03	; 3
    5f5c:	20 f4       	brcc	.+8      	; 0x5f66 <vfprintf+0x132>
    5f5e:	99 2d       	mov	r25, r9
    5f60:	90 61       	ori	r25, 0x10	; 16
    5f62:	80 5e       	subi	r24, 0xE0	; 224
    5f64:	07 c0       	rjmp	.+14     	; 0x5f74 <vfprintf+0x140>
    5f66:	9b e9       	ldi	r25, 0x9B	; 155
    5f68:	98 0f       	add	r25, r24
    5f6a:	93 30       	cpi	r25, 0x03	; 3
    5f6c:	08 f0       	brcs	.+2      	; 0x5f70 <vfprintf+0x13c>
    5f6e:	59 c1       	rjmp	.+690    	; 0x6222 <vfprintf+0x3ee>
    5f70:	99 2d       	mov	r25, r9
    5f72:	9f 7e       	andi	r25, 0xEF	; 239
    5f74:	96 ff       	sbrs	r25, 6
    5f76:	16 e0       	ldi	r17, 0x06	; 6
    5f78:	9f 73       	andi	r25, 0x3F	; 63
    5f7a:	99 2e       	mov	r9, r25
    5f7c:	85 36       	cpi	r24, 0x65	; 101
    5f7e:	19 f4       	brne	.+6      	; 0x5f86 <vfprintf+0x152>
    5f80:	90 64       	ori	r25, 0x40	; 64
    5f82:	99 2e       	mov	r9, r25
    5f84:	08 c0       	rjmp	.+16     	; 0x5f96 <vfprintf+0x162>
    5f86:	86 36       	cpi	r24, 0x66	; 102
    5f88:	21 f4       	brne	.+8      	; 0x5f92 <vfprintf+0x15e>
    5f8a:	39 2f       	mov	r19, r25
    5f8c:	30 68       	ori	r19, 0x80	; 128
    5f8e:	93 2e       	mov	r9, r19
    5f90:	02 c0       	rjmp	.+4      	; 0x5f96 <vfprintf+0x162>
    5f92:	11 11       	cpse	r17, r1
    5f94:	11 50       	subi	r17, 0x01	; 1
    5f96:	97 fe       	sbrs	r9, 7
    5f98:	07 c0       	rjmp	.+14     	; 0x5fa8 <vfprintf+0x174>
    5f9a:	1c 33       	cpi	r17, 0x3C	; 60
    5f9c:	50 f4       	brcc	.+20     	; 0x5fb2 <vfprintf+0x17e>
    5f9e:	44 24       	eor	r4, r4
    5fa0:	43 94       	inc	r4
    5fa2:	41 0e       	add	r4, r17
    5fa4:	27 e0       	ldi	r18, 0x07	; 7
    5fa6:	0b c0       	rjmp	.+22     	; 0x5fbe <vfprintf+0x18a>
    5fa8:	18 30       	cpi	r17, 0x08	; 8
    5faa:	38 f0       	brcs	.+14     	; 0x5fba <vfprintf+0x186>
    5fac:	27 e0       	ldi	r18, 0x07	; 7
    5fae:	17 e0       	ldi	r17, 0x07	; 7
    5fb0:	05 c0       	rjmp	.+10     	; 0x5fbc <vfprintf+0x188>
    5fb2:	27 e0       	ldi	r18, 0x07	; 7
    5fb4:	9c e3       	ldi	r25, 0x3C	; 60
    5fb6:	49 2e       	mov	r4, r25
    5fb8:	02 c0       	rjmp	.+4      	; 0x5fbe <vfprintf+0x18a>
    5fba:	21 2f       	mov	r18, r17
    5fbc:	41 2c       	mov	r4, r1
    5fbe:	56 01       	movw	r10, r12
    5fc0:	84 e0       	ldi	r24, 0x04	; 4
    5fc2:	a8 0e       	add	r10, r24
    5fc4:	b1 1c       	adc	r11, r1
    5fc6:	f6 01       	movw	r30, r12
    5fc8:	60 81       	ld	r22, Z
    5fca:	71 81       	ldd	r23, Z+1	; 0x01
    5fcc:	82 81       	ldd	r24, Z+2	; 0x02
    5fce:	93 81       	ldd	r25, Z+3	; 0x03
    5fd0:	04 2d       	mov	r16, r4
    5fd2:	a3 01       	movw	r20, r6
    5fd4:	6c d3       	rcall	.+1752   	; 0x66ae <__ftoa_engine>
    5fd6:	6c 01       	movw	r12, r24
    5fd8:	f9 81       	ldd	r31, Y+1	; 0x01
    5fda:	fc 87       	std	Y+12, r31	; 0x0c
    5fdc:	f0 ff       	sbrs	r31, 0
    5fde:	02 c0       	rjmp	.+4      	; 0x5fe4 <vfprintf+0x1b0>
    5fe0:	f3 ff       	sbrs	r31, 3
    5fe2:	06 c0       	rjmp	.+12     	; 0x5ff0 <vfprintf+0x1bc>
    5fe4:	91 fc       	sbrc	r9, 1
    5fe6:	06 c0       	rjmp	.+12     	; 0x5ff4 <vfprintf+0x1c0>
    5fe8:	92 fe       	sbrs	r9, 2
    5fea:	06 c0       	rjmp	.+12     	; 0x5ff8 <vfprintf+0x1c4>
    5fec:	00 e2       	ldi	r16, 0x20	; 32
    5fee:	05 c0       	rjmp	.+10     	; 0x5ffa <vfprintf+0x1c6>
    5ff0:	0d e2       	ldi	r16, 0x2D	; 45
    5ff2:	03 c0       	rjmp	.+6      	; 0x5ffa <vfprintf+0x1c6>
    5ff4:	0b e2       	ldi	r16, 0x2B	; 43
    5ff6:	01 c0       	rjmp	.+2      	; 0x5ffa <vfprintf+0x1c6>
    5ff8:	00 e0       	ldi	r16, 0x00	; 0
    5ffa:	8c 85       	ldd	r24, Y+12	; 0x0c
    5ffc:	8c 70       	andi	r24, 0x0C	; 12
    5ffe:	19 f0       	breq	.+6      	; 0x6006 <vfprintf+0x1d2>
    6000:	01 11       	cpse	r16, r1
    6002:	43 c2       	rjmp	.+1158   	; 0x648a <vfprintf+0x656>
    6004:	80 c2       	rjmp	.+1280   	; 0x6506 <vfprintf+0x6d2>
    6006:	97 fe       	sbrs	r9, 7
    6008:	10 c0       	rjmp	.+32     	; 0x602a <vfprintf+0x1f6>
    600a:	4c 0c       	add	r4, r12
    600c:	fc 85       	ldd	r31, Y+12	; 0x0c
    600e:	f4 ff       	sbrs	r31, 4
    6010:	04 c0       	rjmp	.+8      	; 0x601a <vfprintf+0x1e6>
    6012:	8a 81       	ldd	r24, Y+2	; 0x02
    6014:	81 33       	cpi	r24, 0x31	; 49
    6016:	09 f4       	brne	.+2      	; 0x601a <vfprintf+0x1e6>
    6018:	4a 94       	dec	r4
    601a:	14 14       	cp	r1, r4
    601c:	74 f5       	brge	.+92     	; 0x607a <vfprintf+0x246>
    601e:	28 e0       	ldi	r18, 0x08	; 8
    6020:	24 15       	cp	r18, r4
    6022:	78 f5       	brcc	.+94     	; 0x6082 <vfprintf+0x24e>
    6024:	88 e0       	ldi	r24, 0x08	; 8
    6026:	48 2e       	mov	r4, r24
    6028:	2c c0       	rjmp	.+88     	; 0x6082 <vfprintf+0x24e>
    602a:	96 fc       	sbrc	r9, 6
    602c:	2a c0       	rjmp	.+84     	; 0x6082 <vfprintf+0x24e>
    602e:	81 2f       	mov	r24, r17
    6030:	90 e0       	ldi	r25, 0x00	; 0
    6032:	8c 15       	cp	r24, r12
    6034:	9d 05       	cpc	r25, r13
    6036:	9c f0       	brlt	.+38     	; 0x605e <vfprintf+0x22a>
    6038:	3c ef       	ldi	r19, 0xFC	; 252
    603a:	c3 16       	cp	r12, r19
    603c:	3f ef       	ldi	r19, 0xFF	; 255
    603e:	d3 06       	cpc	r13, r19
    6040:	74 f0       	brlt	.+28     	; 0x605e <vfprintf+0x22a>
    6042:	89 2d       	mov	r24, r9
    6044:	80 68       	ori	r24, 0x80	; 128
    6046:	98 2e       	mov	r9, r24
    6048:	0a c0       	rjmp	.+20     	; 0x605e <vfprintf+0x22a>
    604a:	e2 e0       	ldi	r30, 0x02	; 2
    604c:	f0 e0       	ldi	r31, 0x00	; 0
    604e:	ec 0f       	add	r30, r28
    6050:	fd 1f       	adc	r31, r29
    6052:	e1 0f       	add	r30, r17
    6054:	f1 1d       	adc	r31, r1
    6056:	80 81       	ld	r24, Z
    6058:	80 33       	cpi	r24, 0x30	; 48
    605a:	19 f4       	brne	.+6      	; 0x6062 <vfprintf+0x22e>
    605c:	11 50       	subi	r17, 0x01	; 1
    605e:	11 11       	cpse	r17, r1
    6060:	f4 cf       	rjmp	.-24     	; 0x604a <vfprintf+0x216>
    6062:	97 fe       	sbrs	r9, 7
    6064:	0e c0       	rjmp	.+28     	; 0x6082 <vfprintf+0x24e>
    6066:	44 24       	eor	r4, r4
    6068:	43 94       	inc	r4
    606a:	41 0e       	add	r4, r17
    606c:	81 2f       	mov	r24, r17
    606e:	90 e0       	ldi	r25, 0x00	; 0
    6070:	c8 16       	cp	r12, r24
    6072:	d9 06       	cpc	r13, r25
    6074:	2c f4       	brge	.+10     	; 0x6080 <vfprintf+0x24c>
    6076:	1c 19       	sub	r17, r12
    6078:	04 c0       	rjmp	.+8      	; 0x6082 <vfprintf+0x24e>
    607a:	44 24       	eor	r4, r4
    607c:	43 94       	inc	r4
    607e:	01 c0       	rjmp	.+2      	; 0x6082 <vfprintf+0x24e>
    6080:	10 e0       	ldi	r17, 0x00	; 0
    6082:	97 fe       	sbrs	r9, 7
    6084:	06 c0       	rjmp	.+12     	; 0x6092 <vfprintf+0x25e>
    6086:	1c 14       	cp	r1, r12
    6088:	1d 04       	cpc	r1, r13
    608a:	34 f4       	brge	.+12     	; 0x6098 <vfprintf+0x264>
    608c:	c6 01       	movw	r24, r12
    608e:	01 96       	adiw	r24, 0x01	; 1
    6090:	05 c0       	rjmp	.+10     	; 0x609c <vfprintf+0x268>
    6092:	85 e0       	ldi	r24, 0x05	; 5
    6094:	90 e0       	ldi	r25, 0x00	; 0
    6096:	02 c0       	rjmp	.+4      	; 0x609c <vfprintf+0x268>
    6098:	81 e0       	ldi	r24, 0x01	; 1
    609a:	90 e0       	ldi	r25, 0x00	; 0
    609c:	01 11       	cpse	r16, r1
    609e:	01 96       	adiw	r24, 0x01	; 1
    60a0:	11 23       	and	r17, r17
    60a2:	31 f0       	breq	.+12     	; 0x60b0 <vfprintf+0x27c>
    60a4:	21 2f       	mov	r18, r17
    60a6:	30 e0       	ldi	r19, 0x00	; 0
    60a8:	2f 5f       	subi	r18, 0xFF	; 255
    60aa:	3f 4f       	sbci	r19, 0xFF	; 255
    60ac:	82 0f       	add	r24, r18
    60ae:	93 1f       	adc	r25, r19
    60b0:	25 2d       	mov	r18, r5
    60b2:	30 e0       	ldi	r19, 0x00	; 0
    60b4:	82 17       	cp	r24, r18
    60b6:	93 07       	cpc	r25, r19
    60b8:	14 f4       	brge	.+4      	; 0x60be <vfprintf+0x28a>
    60ba:	58 1a       	sub	r5, r24
    60bc:	01 c0       	rjmp	.+2      	; 0x60c0 <vfprintf+0x28c>
    60be:	51 2c       	mov	r5, r1
    60c0:	89 2d       	mov	r24, r9
    60c2:	89 70       	andi	r24, 0x09	; 9
    60c4:	41 f4       	brne	.+16     	; 0x60d6 <vfprintf+0x2a2>
    60c6:	55 20       	and	r5, r5
    60c8:	31 f0       	breq	.+12     	; 0x60d6 <vfprintf+0x2a2>
    60ca:	b7 01       	movw	r22, r14
    60cc:	80 e2       	ldi	r24, 0x20	; 32
    60ce:	90 e0       	ldi	r25, 0x00	; 0
    60d0:	02 d4       	rcall	.+2052   	; 0x68d6 <fputc>
    60d2:	5a 94       	dec	r5
    60d4:	f8 cf       	rjmp	.-16     	; 0x60c6 <vfprintf+0x292>
    60d6:	00 23       	and	r16, r16
    60d8:	21 f0       	breq	.+8      	; 0x60e2 <vfprintf+0x2ae>
    60da:	b7 01       	movw	r22, r14
    60dc:	80 2f       	mov	r24, r16
    60de:	90 e0       	ldi	r25, 0x00	; 0
    60e0:	fa d3       	rcall	.+2036   	; 0x68d6 <fputc>
    60e2:	93 fc       	sbrc	r9, 3
    60e4:	08 c0       	rjmp	.+16     	; 0x60f6 <vfprintf+0x2c2>
    60e6:	55 20       	and	r5, r5
    60e8:	31 f0       	breq	.+12     	; 0x60f6 <vfprintf+0x2c2>
    60ea:	b7 01       	movw	r22, r14
    60ec:	80 e3       	ldi	r24, 0x30	; 48
    60ee:	90 e0       	ldi	r25, 0x00	; 0
    60f0:	f2 d3       	rcall	.+2020   	; 0x68d6 <fputc>
    60f2:	5a 94       	dec	r5
    60f4:	f8 cf       	rjmp	.-16     	; 0x60e6 <vfprintf+0x2b2>
    60f6:	97 fe       	sbrs	r9, 7
    60f8:	4a c0       	rjmp	.+148    	; 0x618e <vfprintf+0x35a>
    60fa:	46 01       	movw	r8, r12
    60fc:	d7 fe       	sbrs	r13, 7
    60fe:	02 c0       	rjmp	.+4      	; 0x6104 <vfprintf+0x2d0>
    6100:	81 2c       	mov	r8, r1
    6102:	91 2c       	mov	r9, r1
    6104:	c6 01       	movw	r24, r12
    6106:	88 19       	sub	r24, r8
    6108:	99 09       	sbc	r25, r9
    610a:	f3 01       	movw	r30, r6
    610c:	e8 0f       	add	r30, r24
    610e:	f9 1f       	adc	r31, r25
    6110:	fe 87       	std	Y+14, r31	; 0x0e
    6112:	ed 87       	std	Y+13, r30	; 0x0d
    6114:	96 01       	movw	r18, r12
    6116:	24 19       	sub	r18, r4
    6118:	31 09       	sbc	r19, r1
    611a:	38 8b       	std	Y+16, r19	; 0x10
    611c:	2f 87       	std	Y+15, r18	; 0x0f
    611e:	01 2f       	mov	r16, r17
    6120:	10 e0       	ldi	r17, 0x00	; 0
    6122:	11 95       	neg	r17
    6124:	01 95       	neg	r16
    6126:	11 09       	sbc	r17, r1
    6128:	3f ef       	ldi	r19, 0xFF	; 255
    612a:	83 16       	cp	r8, r19
    612c:	93 06       	cpc	r9, r19
    612e:	21 f4       	brne	.+8      	; 0x6138 <vfprintf+0x304>
    6130:	b7 01       	movw	r22, r14
    6132:	8e e2       	ldi	r24, 0x2E	; 46
    6134:	90 e0       	ldi	r25, 0x00	; 0
    6136:	cf d3       	rcall	.+1950   	; 0x68d6 <fputc>
    6138:	c8 14       	cp	r12, r8
    613a:	d9 04       	cpc	r13, r9
    613c:	4c f0       	brlt	.+18     	; 0x6150 <vfprintf+0x31c>
    613e:	8f 85       	ldd	r24, Y+15	; 0x0f
    6140:	98 89       	ldd	r25, Y+16	; 0x10
    6142:	88 15       	cp	r24, r8
    6144:	99 05       	cpc	r25, r9
    6146:	24 f4       	brge	.+8      	; 0x6150 <vfprintf+0x31c>
    6148:	ed 85       	ldd	r30, Y+13	; 0x0d
    614a:	fe 85       	ldd	r31, Y+14	; 0x0e
    614c:	81 81       	ldd	r24, Z+1	; 0x01
    614e:	01 c0       	rjmp	.+2      	; 0x6152 <vfprintf+0x31e>
    6150:	80 e3       	ldi	r24, 0x30	; 48
    6152:	f1 e0       	ldi	r31, 0x01	; 1
    6154:	8f 1a       	sub	r8, r31
    6156:	91 08       	sbc	r9, r1
    6158:	2d 85       	ldd	r18, Y+13	; 0x0d
    615a:	3e 85       	ldd	r19, Y+14	; 0x0e
    615c:	2f 5f       	subi	r18, 0xFF	; 255
    615e:	3f 4f       	sbci	r19, 0xFF	; 255
    6160:	3e 87       	std	Y+14, r19	; 0x0e
    6162:	2d 87       	std	Y+13, r18	; 0x0d
    6164:	80 16       	cp	r8, r16
    6166:	91 06       	cpc	r9, r17
    6168:	24 f0       	brlt	.+8      	; 0x6172 <vfprintf+0x33e>
    616a:	b7 01       	movw	r22, r14
    616c:	90 e0       	ldi	r25, 0x00	; 0
    616e:	b3 d3       	rcall	.+1894   	; 0x68d6 <fputc>
    6170:	db cf       	rjmp	.-74     	; 0x6128 <vfprintf+0x2f4>
    6172:	c8 14       	cp	r12, r8
    6174:	d9 04       	cpc	r13, r9
    6176:	41 f4       	brne	.+16     	; 0x6188 <vfprintf+0x354>
    6178:	9a 81       	ldd	r25, Y+2	; 0x02
    617a:	96 33       	cpi	r25, 0x36	; 54
    617c:	20 f4       	brcc	.+8      	; 0x6186 <vfprintf+0x352>
    617e:	95 33       	cpi	r25, 0x35	; 53
    6180:	19 f4       	brne	.+6      	; 0x6188 <vfprintf+0x354>
    6182:	3c 85       	ldd	r19, Y+12	; 0x0c
    6184:	34 ff       	sbrs	r19, 4
    6186:	81 e3       	ldi	r24, 0x31	; 49
    6188:	b7 01       	movw	r22, r14
    618a:	90 e0       	ldi	r25, 0x00	; 0
    618c:	48 c0       	rjmp	.+144    	; 0x621e <vfprintf+0x3ea>
    618e:	8a 81       	ldd	r24, Y+2	; 0x02
    6190:	81 33       	cpi	r24, 0x31	; 49
    6192:	19 f0       	breq	.+6      	; 0x619a <vfprintf+0x366>
    6194:	9c 85       	ldd	r25, Y+12	; 0x0c
    6196:	9f 7e       	andi	r25, 0xEF	; 239
    6198:	9c 87       	std	Y+12, r25	; 0x0c
    619a:	b7 01       	movw	r22, r14
    619c:	90 e0       	ldi	r25, 0x00	; 0
    619e:	9b d3       	rcall	.+1846   	; 0x68d6 <fputc>
    61a0:	11 11       	cpse	r17, r1
    61a2:	05 c0       	rjmp	.+10     	; 0x61ae <vfprintf+0x37a>
    61a4:	94 fc       	sbrc	r9, 4
    61a6:	16 c0       	rjmp	.+44     	; 0x61d4 <vfprintf+0x3a0>
    61a8:	85 e6       	ldi	r24, 0x65	; 101
    61aa:	90 e0       	ldi	r25, 0x00	; 0
    61ac:	15 c0       	rjmp	.+42     	; 0x61d8 <vfprintf+0x3a4>
    61ae:	b7 01       	movw	r22, r14
    61b0:	8e e2       	ldi	r24, 0x2E	; 46
    61b2:	90 e0       	ldi	r25, 0x00	; 0
    61b4:	90 d3       	rcall	.+1824   	; 0x68d6 <fputc>
    61b6:	1e 5f       	subi	r17, 0xFE	; 254
    61b8:	82 e0       	ldi	r24, 0x02	; 2
    61ba:	01 e0       	ldi	r16, 0x01	; 1
    61bc:	08 0f       	add	r16, r24
    61be:	f3 01       	movw	r30, r6
    61c0:	e8 0f       	add	r30, r24
    61c2:	f1 1d       	adc	r31, r1
    61c4:	80 81       	ld	r24, Z
    61c6:	b7 01       	movw	r22, r14
    61c8:	90 e0       	ldi	r25, 0x00	; 0
    61ca:	85 d3       	rcall	.+1802   	; 0x68d6 <fputc>
    61cc:	80 2f       	mov	r24, r16
    61ce:	01 13       	cpse	r16, r17
    61d0:	f4 cf       	rjmp	.-24     	; 0x61ba <vfprintf+0x386>
    61d2:	e8 cf       	rjmp	.-48     	; 0x61a4 <vfprintf+0x370>
    61d4:	85 e4       	ldi	r24, 0x45	; 69
    61d6:	90 e0       	ldi	r25, 0x00	; 0
    61d8:	b7 01       	movw	r22, r14
    61da:	7d d3       	rcall	.+1786   	; 0x68d6 <fputc>
    61dc:	d7 fc       	sbrc	r13, 7
    61de:	06 c0       	rjmp	.+12     	; 0x61ec <vfprintf+0x3b8>
    61e0:	c1 14       	cp	r12, r1
    61e2:	d1 04       	cpc	r13, r1
    61e4:	41 f4       	brne	.+16     	; 0x61f6 <vfprintf+0x3c2>
    61e6:	ec 85       	ldd	r30, Y+12	; 0x0c
    61e8:	e4 ff       	sbrs	r30, 4
    61ea:	05 c0       	rjmp	.+10     	; 0x61f6 <vfprintf+0x3c2>
    61ec:	d1 94       	neg	r13
    61ee:	c1 94       	neg	r12
    61f0:	d1 08       	sbc	r13, r1
    61f2:	8d e2       	ldi	r24, 0x2D	; 45
    61f4:	01 c0       	rjmp	.+2      	; 0x61f8 <vfprintf+0x3c4>
    61f6:	8b e2       	ldi	r24, 0x2B	; 43
    61f8:	b7 01       	movw	r22, r14
    61fa:	90 e0       	ldi	r25, 0x00	; 0
    61fc:	6c d3       	rcall	.+1752   	; 0x68d6 <fputc>
    61fe:	80 e3       	ldi	r24, 0x30	; 48
    6200:	2a e0       	ldi	r18, 0x0A	; 10
    6202:	c2 16       	cp	r12, r18
    6204:	d1 04       	cpc	r13, r1
    6206:	2c f0       	brlt	.+10     	; 0x6212 <vfprintf+0x3de>
    6208:	8f 5f       	subi	r24, 0xFF	; 255
    620a:	fa e0       	ldi	r31, 0x0A	; 10
    620c:	cf 1a       	sub	r12, r31
    620e:	d1 08       	sbc	r13, r1
    6210:	f7 cf       	rjmp	.-18     	; 0x6200 <vfprintf+0x3cc>
    6212:	b7 01       	movw	r22, r14
    6214:	90 e0       	ldi	r25, 0x00	; 0
    6216:	5f d3       	rcall	.+1726   	; 0x68d6 <fputc>
    6218:	b7 01       	movw	r22, r14
    621a:	c6 01       	movw	r24, r12
    621c:	c0 96       	adiw	r24, 0x30	; 48
    621e:	5b d3       	rcall	.+1718   	; 0x68d6 <fputc>
    6220:	49 c1       	rjmp	.+658    	; 0x64b4 <vfprintf+0x680>
    6222:	83 36       	cpi	r24, 0x63	; 99
    6224:	31 f0       	breq	.+12     	; 0x6232 <vfprintf+0x3fe>
    6226:	83 37       	cpi	r24, 0x73	; 115
    6228:	79 f0       	breq	.+30     	; 0x6248 <vfprintf+0x414>
    622a:	83 35       	cpi	r24, 0x53	; 83
    622c:	09 f0       	breq	.+2      	; 0x6230 <vfprintf+0x3fc>
    622e:	52 c0       	rjmp	.+164    	; 0x62d4 <vfprintf+0x4a0>
    6230:	1f c0       	rjmp	.+62     	; 0x6270 <vfprintf+0x43c>
    6232:	56 01       	movw	r10, r12
    6234:	32 e0       	ldi	r19, 0x02	; 2
    6236:	a3 0e       	add	r10, r19
    6238:	b1 1c       	adc	r11, r1
    623a:	f6 01       	movw	r30, r12
    623c:	80 81       	ld	r24, Z
    623e:	89 83       	std	Y+1, r24	; 0x01
    6240:	01 e0       	ldi	r16, 0x01	; 1
    6242:	10 e0       	ldi	r17, 0x00	; 0
    6244:	63 01       	movw	r12, r6
    6246:	11 c0       	rjmp	.+34     	; 0x626a <vfprintf+0x436>
    6248:	56 01       	movw	r10, r12
    624a:	f2 e0       	ldi	r31, 0x02	; 2
    624c:	af 0e       	add	r10, r31
    624e:	b1 1c       	adc	r11, r1
    6250:	f6 01       	movw	r30, r12
    6252:	c0 80       	ld	r12, Z
    6254:	d1 80       	ldd	r13, Z+1	; 0x01
    6256:	96 fe       	sbrs	r9, 6
    6258:	03 c0       	rjmp	.+6      	; 0x6260 <vfprintf+0x42c>
    625a:	61 2f       	mov	r22, r17
    625c:	70 e0       	ldi	r23, 0x00	; 0
    625e:	02 c0       	rjmp	.+4      	; 0x6264 <vfprintf+0x430>
    6260:	6f ef       	ldi	r22, 0xFF	; 255
    6262:	7f ef       	ldi	r23, 0xFF	; 255
    6264:	c6 01       	movw	r24, r12
    6266:	2c d3       	rcall	.+1624   	; 0x68c0 <strnlen>
    6268:	8c 01       	movw	r16, r24
    626a:	f9 2d       	mov	r31, r9
    626c:	ff 77       	andi	r31, 0x7F	; 127
    626e:	13 c0       	rjmp	.+38     	; 0x6296 <vfprintf+0x462>
    6270:	56 01       	movw	r10, r12
    6272:	22 e0       	ldi	r18, 0x02	; 2
    6274:	a2 0e       	add	r10, r18
    6276:	b1 1c       	adc	r11, r1
    6278:	f6 01       	movw	r30, r12
    627a:	c0 80       	ld	r12, Z
    627c:	d1 80       	ldd	r13, Z+1	; 0x01
    627e:	96 fe       	sbrs	r9, 6
    6280:	03 c0       	rjmp	.+6      	; 0x6288 <vfprintf+0x454>
    6282:	61 2f       	mov	r22, r17
    6284:	70 e0       	ldi	r23, 0x00	; 0
    6286:	02 c0       	rjmp	.+4      	; 0x628c <vfprintf+0x458>
    6288:	6f ef       	ldi	r22, 0xFF	; 255
    628a:	7f ef       	ldi	r23, 0xFF	; 255
    628c:	c6 01       	movw	r24, r12
    628e:	e7 d2       	rcall	.+1486   	; 0x685e <strnlen_P>
    6290:	8c 01       	movw	r16, r24
    6292:	f9 2d       	mov	r31, r9
    6294:	f0 68       	ori	r31, 0x80	; 128
    6296:	9f 2e       	mov	r9, r31
    6298:	f3 fd       	sbrc	r31, 3
    629a:	18 c0       	rjmp	.+48     	; 0x62cc <vfprintf+0x498>
    629c:	85 2d       	mov	r24, r5
    629e:	90 e0       	ldi	r25, 0x00	; 0
    62a0:	08 17       	cp	r16, r24
    62a2:	19 07       	cpc	r17, r25
    62a4:	98 f4       	brcc	.+38     	; 0x62cc <vfprintf+0x498>
    62a6:	b7 01       	movw	r22, r14
    62a8:	80 e2       	ldi	r24, 0x20	; 32
    62aa:	90 e0       	ldi	r25, 0x00	; 0
    62ac:	14 d3       	rcall	.+1576   	; 0x68d6 <fputc>
    62ae:	5a 94       	dec	r5
    62b0:	f5 cf       	rjmp	.-22     	; 0x629c <vfprintf+0x468>
    62b2:	f6 01       	movw	r30, r12
    62b4:	97 fc       	sbrc	r9, 7
    62b6:	85 91       	lpm	r24, Z+
    62b8:	97 fe       	sbrs	r9, 7
    62ba:	81 91       	ld	r24, Z+
    62bc:	6f 01       	movw	r12, r30
    62be:	b7 01       	movw	r22, r14
    62c0:	90 e0       	ldi	r25, 0x00	; 0
    62c2:	09 d3       	rcall	.+1554   	; 0x68d6 <fputc>
    62c4:	51 10       	cpse	r5, r1
    62c6:	5a 94       	dec	r5
    62c8:	01 50       	subi	r16, 0x01	; 1
    62ca:	11 09       	sbc	r17, r1
    62cc:	01 15       	cp	r16, r1
    62ce:	11 05       	cpc	r17, r1
    62d0:	81 f7       	brne	.-32     	; 0x62b2 <vfprintf+0x47e>
    62d2:	f0 c0       	rjmp	.+480    	; 0x64b4 <vfprintf+0x680>
    62d4:	84 36       	cpi	r24, 0x64	; 100
    62d6:	11 f0       	breq	.+4      	; 0x62dc <vfprintf+0x4a8>
    62d8:	89 36       	cpi	r24, 0x69	; 105
    62da:	59 f5       	brne	.+86     	; 0x6332 <vfprintf+0x4fe>
    62dc:	56 01       	movw	r10, r12
    62de:	97 fe       	sbrs	r9, 7
    62e0:	09 c0       	rjmp	.+18     	; 0x62f4 <vfprintf+0x4c0>
    62e2:	24 e0       	ldi	r18, 0x04	; 4
    62e4:	a2 0e       	add	r10, r18
    62e6:	b1 1c       	adc	r11, r1
    62e8:	f6 01       	movw	r30, r12
    62ea:	60 81       	ld	r22, Z
    62ec:	71 81       	ldd	r23, Z+1	; 0x01
    62ee:	82 81       	ldd	r24, Z+2	; 0x02
    62f0:	93 81       	ldd	r25, Z+3	; 0x03
    62f2:	0a c0       	rjmp	.+20     	; 0x6308 <vfprintf+0x4d4>
    62f4:	f2 e0       	ldi	r31, 0x02	; 2
    62f6:	af 0e       	add	r10, r31
    62f8:	b1 1c       	adc	r11, r1
    62fa:	f6 01       	movw	r30, r12
    62fc:	60 81       	ld	r22, Z
    62fe:	71 81       	ldd	r23, Z+1	; 0x01
    6300:	07 2e       	mov	r0, r23
    6302:	00 0c       	add	r0, r0
    6304:	88 0b       	sbc	r24, r24
    6306:	99 0b       	sbc	r25, r25
    6308:	f9 2d       	mov	r31, r9
    630a:	ff 76       	andi	r31, 0x6F	; 111
    630c:	9f 2e       	mov	r9, r31
    630e:	97 ff       	sbrs	r25, 7
    6310:	09 c0       	rjmp	.+18     	; 0x6324 <vfprintf+0x4f0>
    6312:	90 95       	com	r25
    6314:	80 95       	com	r24
    6316:	70 95       	com	r23
    6318:	61 95       	neg	r22
    631a:	7f 4f       	sbci	r23, 0xFF	; 255
    631c:	8f 4f       	sbci	r24, 0xFF	; 255
    631e:	9f 4f       	sbci	r25, 0xFF	; 255
    6320:	f0 68       	ori	r31, 0x80	; 128
    6322:	9f 2e       	mov	r9, r31
    6324:	2a e0       	ldi	r18, 0x0A	; 10
    6326:	30 e0       	ldi	r19, 0x00	; 0
    6328:	a3 01       	movw	r20, r6
    632a:	4b d3       	rcall	.+1686   	; 0x69c2 <__ultoa_invert>
    632c:	c8 2e       	mov	r12, r24
    632e:	c6 18       	sub	r12, r6
    6330:	3e c0       	rjmp	.+124    	; 0x63ae <vfprintf+0x57a>
    6332:	09 2d       	mov	r16, r9
    6334:	85 37       	cpi	r24, 0x75	; 117
    6336:	21 f4       	brne	.+8      	; 0x6340 <vfprintf+0x50c>
    6338:	0f 7e       	andi	r16, 0xEF	; 239
    633a:	2a e0       	ldi	r18, 0x0A	; 10
    633c:	30 e0       	ldi	r19, 0x00	; 0
    633e:	1d c0       	rjmp	.+58     	; 0x637a <vfprintf+0x546>
    6340:	09 7f       	andi	r16, 0xF9	; 249
    6342:	8f 36       	cpi	r24, 0x6F	; 111
    6344:	91 f0       	breq	.+36     	; 0x636a <vfprintf+0x536>
    6346:	18 f4       	brcc	.+6      	; 0x634e <vfprintf+0x51a>
    6348:	88 35       	cpi	r24, 0x58	; 88
    634a:	59 f0       	breq	.+22     	; 0x6362 <vfprintf+0x52e>
    634c:	bc c0       	rjmp	.+376    	; 0x64c6 <vfprintf+0x692>
    634e:	80 37       	cpi	r24, 0x70	; 112
    6350:	19 f0       	breq	.+6      	; 0x6358 <vfprintf+0x524>
    6352:	88 37       	cpi	r24, 0x78	; 120
    6354:	11 f0       	breq	.+4      	; 0x635a <vfprintf+0x526>
    6356:	b7 c0       	rjmp	.+366    	; 0x64c6 <vfprintf+0x692>
    6358:	00 61       	ori	r16, 0x10	; 16
    635a:	04 ff       	sbrs	r16, 4
    635c:	09 c0       	rjmp	.+18     	; 0x6370 <vfprintf+0x53c>
    635e:	04 60       	ori	r16, 0x04	; 4
    6360:	07 c0       	rjmp	.+14     	; 0x6370 <vfprintf+0x53c>
    6362:	94 fe       	sbrs	r9, 4
    6364:	08 c0       	rjmp	.+16     	; 0x6376 <vfprintf+0x542>
    6366:	06 60       	ori	r16, 0x06	; 6
    6368:	06 c0       	rjmp	.+12     	; 0x6376 <vfprintf+0x542>
    636a:	28 e0       	ldi	r18, 0x08	; 8
    636c:	30 e0       	ldi	r19, 0x00	; 0
    636e:	05 c0       	rjmp	.+10     	; 0x637a <vfprintf+0x546>
    6370:	20 e1       	ldi	r18, 0x10	; 16
    6372:	30 e0       	ldi	r19, 0x00	; 0
    6374:	02 c0       	rjmp	.+4      	; 0x637a <vfprintf+0x546>
    6376:	20 e1       	ldi	r18, 0x10	; 16
    6378:	32 e0       	ldi	r19, 0x02	; 2
    637a:	56 01       	movw	r10, r12
    637c:	07 ff       	sbrs	r16, 7
    637e:	09 c0       	rjmp	.+18     	; 0x6392 <vfprintf+0x55e>
    6380:	84 e0       	ldi	r24, 0x04	; 4
    6382:	a8 0e       	add	r10, r24
    6384:	b1 1c       	adc	r11, r1
    6386:	f6 01       	movw	r30, r12
    6388:	60 81       	ld	r22, Z
    638a:	71 81       	ldd	r23, Z+1	; 0x01
    638c:	82 81       	ldd	r24, Z+2	; 0x02
    638e:	93 81       	ldd	r25, Z+3	; 0x03
    6390:	08 c0       	rjmp	.+16     	; 0x63a2 <vfprintf+0x56e>
    6392:	f2 e0       	ldi	r31, 0x02	; 2
    6394:	af 0e       	add	r10, r31
    6396:	b1 1c       	adc	r11, r1
    6398:	f6 01       	movw	r30, r12
    639a:	60 81       	ld	r22, Z
    639c:	71 81       	ldd	r23, Z+1	; 0x01
    639e:	80 e0       	ldi	r24, 0x00	; 0
    63a0:	90 e0       	ldi	r25, 0x00	; 0
    63a2:	a3 01       	movw	r20, r6
    63a4:	0e d3       	rcall	.+1564   	; 0x69c2 <__ultoa_invert>
    63a6:	c8 2e       	mov	r12, r24
    63a8:	c6 18       	sub	r12, r6
    63aa:	0f 77       	andi	r16, 0x7F	; 127
    63ac:	90 2e       	mov	r9, r16
    63ae:	96 fe       	sbrs	r9, 6
    63b0:	0b c0       	rjmp	.+22     	; 0x63c8 <vfprintf+0x594>
    63b2:	09 2d       	mov	r16, r9
    63b4:	0e 7f       	andi	r16, 0xFE	; 254
    63b6:	c1 16       	cp	r12, r17
    63b8:	50 f4       	brcc	.+20     	; 0x63ce <vfprintf+0x59a>
    63ba:	94 fe       	sbrs	r9, 4
    63bc:	0a c0       	rjmp	.+20     	; 0x63d2 <vfprintf+0x59e>
    63be:	92 fc       	sbrc	r9, 2
    63c0:	08 c0       	rjmp	.+16     	; 0x63d2 <vfprintf+0x59e>
    63c2:	09 2d       	mov	r16, r9
    63c4:	0e 7e       	andi	r16, 0xEE	; 238
    63c6:	05 c0       	rjmp	.+10     	; 0x63d2 <vfprintf+0x59e>
    63c8:	dc 2c       	mov	r13, r12
    63ca:	09 2d       	mov	r16, r9
    63cc:	03 c0       	rjmp	.+6      	; 0x63d4 <vfprintf+0x5a0>
    63ce:	dc 2c       	mov	r13, r12
    63d0:	01 c0       	rjmp	.+2      	; 0x63d4 <vfprintf+0x5a0>
    63d2:	d1 2e       	mov	r13, r17
    63d4:	04 ff       	sbrs	r16, 4
    63d6:	0d c0       	rjmp	.+26     	; 0x63f2 <vfprintf+0x5be>
    63d8:	fe 01       	movw	r30, r28
    63da:	ec 0d       	add	r30, r12
    63dc:	f1 1d       	adc	r31, r1
    63de:	80 81       	ld	r24, Z
    63e0:	80 33       	cpi	r24, 0x30	; 48
    63e2:	11 f4       	brne	.+4      	; 0x63e8 <vfprintf+0x5b4>
    63e4:	09 7e       	andi	r16, 0xE9	; 233
    63e6:	09 c0       	rjmp	.+18     	; 0x63fa <vfprintf+0x5c6>
    63e8:	02 ff       	sbrs	r16, 2
    63ea:	06 c0       	rjmp	.+12     	; 0x63f8 <vfprintf+0x5c4>
    63ec:	d3 94       	inc	r13
    63ee:	d3 94       	inc	r13
    63f0:	04 c0       	rjmp	.+8      	; 0x63fa <vfprintf+0x5c6>
    63f2:	80 2f       	mov	r24, r16
    63f4:	86 78       	andi	r24, 0x86	; 134
    63f6:	09 f0       	breq	.+2      	; 0x63fa <vfprintf+0x5c6>
    63f8:	d3 94       	inc	r13
    63fa:	03 fd       	sbrc	r16, 3
    63fc:	10 c0       	rjmp	.+32     	; 0x641e <vfprintf+0x5ea>
    63fe:	00 ff       	sbrs	r16, 0
    6400:	06 c0       	rjmp	.+12     	; 0x640e <vfprintf+0x5da>
    6402:	1c 2d       	mov	r17, r12
    6404:	d5 14       	cp	r13, r5
    6406:	78 f4       	brcc	.+30     	; 0x6426 <vfprintf+0x5f2>
    6408:	15 0d       	add	r17, r5
    640a:	1d 19       	sub	r17, r13
    640c:	0c c0       	rjmp	.+24     	; 0x6426 <vfprintf+0x5f2>
    640e:	d5 14       	cp	r13, r5
    6410:	50 f4       	brcc	.+20     	; 0x6426 <vfprintf+0x5f2>
    6412:	b7 01       	movw	r22, r14
    6414:	80 e2       	ldi	r24, 0x20	; 32
    6416:	90 e0       	ldi	r25, 0x00	; 0
    6418:	5e d2       	rcall	.+1212   	; 0x68d6 <fputc>
    641a:	d3 94       	inc	r13
    641c:	f8 cf       	rjmp	.-16     	; 0x640e <vfprintf+0x5da>
    641e:	d5 14       	cp	r13, r5
    6420:	10 f4       	brcc	.+4      	; 0x6426 <vfprintf+0x5f2>
    6422:	5d 18       	sub	r5, r13
    6424:	01 c0       	rjmp	.+2      	; 0x6428 <vfprintf+0x5f4>
    6426:	51 2c       	mov	r5, r1
    6428:	04 ff       	sbrs	r16, 4
    642a:	0f c0       	rjmp	.+30     	; 0x644a <vfprintf+0x616>
    642c:	b7 01       	movw	r22, r14
    642e:	80 e3       	ldi	r24, 0x30	; 48
    6430:	90 e0       	ldi	r25, 0x00	; 0
    6432:	51 d2       	rcall	.+1186   	; 0x68d6 <fputc>
    6434:	02 ff       	sbrs	r16, 2
    6436:	16 c0       	rjmp	.+44     	; 0x6464 <vfprintf+0x630>
    6438:	01 fd       	sbrc	r16, 1
    643a:	03 c0       	rjmp	.+6      	; 0x6442 <vfprintf+0x60e>
    643c:	88 e7       	ldi	r24, 0x78	; 120
    643e:	90 e0       	ldi	r25, 0x00	; 0
    6440:	02 c0       	rjmp	.+4      	; 0x6446 <vfprintf+0x612>
    6442:	88 e5       	ldi	r24, 0x58	; 88
    6444:	90 e0       	ldi	r25, 0x00	; 0
    6446:	b7 01       	movw	r22, r14
    6448:	0c c0       	rjmp	.+24     	; 0x6462 <vfprintf+0x62e>
    644a:	80 2f       	mov	r24, r16
    644c:	86 78       	andi	r24, 0x86	; 134
    644e:	51 f0       	breq	.+20     	; 0x6464 <vfprintf+0x630>
    6450:	01 ff       	sbrs	r16, 1
    6452:	02 c0       	rjmp	.+4      	; 0x6458 <vfprintf+0x624>
    6454:	8b e2       	ldi	r24, 0x2B	; 43
    6456:	01 c0       	rjmp	.+2      	; 0x645a <vfprintf+0x626>
    6458:	80 e2       	ldi	r24, 0x20	; 32
    645a:	07 fd       	sbrc	r16, 7
    645c:	8d e2       	ldi	r24, 0x2D	; 45
    645e:	b7 01       	movw	r22, r14
    6460:	90 e0       	ldi	r25, 0x00	; 0
    6462:	39 d2       	rcall	.+1138   	; 0x68d6 <fputc>
    6464:	c1 16       	cp	r12, r17
    6466:	30 f4       	brcc	.+12     	; 0x6474 <vfprintf+0x640>
    6468:	b7 01       	movw	r22, r14
    646a:	80 e3       	ldi	r24, 0x30	; 48
    646c:	90 e0       	ldi	r25, 0x00	; 0
    646e:	33 d2       	rcall	.+1126   	; 0x68d6 <fputc>
    6470:	11 50       	subi	r17, 0x01	; 1
    6472:	f8 cf       	rjmp	.-16     	; 0x6464 <vfprintf+0x630>
    6474:	ca 94       	dec	r12
    6476:	f3 01       	movw	r30, r6
    6478:	ec 0d       	add	r30, r12
    647a:	f1 1d       	adc	r31, r1
    647c:	80 81       	ld	r24, Z
    647e:	b7 01       	movw	r22, r14
    6480:	90 e0       	ldi	r25, 0x00	; 0
    6482:	29 d2       	rcall	.+1106   	; 0x68d6 <fputc>
    6484:	c1 10       	cpse	r12, r1
    6486:	f6 cf       	rjmp	.-20     	; 0x6474 <vfprintf+0x640>
    6488:	15 c0       	rjmp	.+42     	; 0x64b4 <vfprintf+0x680>
    648a:	f4 e0       	ldi	r31, 0x04	; 4
    648c:	f5 15       	cp	r31, r5
    648e:	50 f5       	brcc	.+84     	; 0x64e4 <vfprintf+0x6b0>
    6490:	84 e0       	ldi	r24, 0x04	; 4
    6492:	58 1a       	sub	r5, r24
    6494:	93 fe       	sbrs	r9, 3
    6496:	1e c0       	rjmp	.+60     	; 0x64d4 <vfprintf+0x6a0>
    6498:	01 11       	cpse	r16, r1
    649a:	25 c0       	rjmp	.+74     	; 0x64e6 <vfprintf+0x6b2>
    649c:	2c 85       	ldd	r18, Y+12	; 0x0c
    649e:	23 ff       	sbrs	r18, 3
    64a0:	27 c0       	rjmp	.+78     	; 0x64f0 <vfprintf+0x6bc>
    64a2:	04 e5       	ldi	r16, 0x54	; 84
    64a4:	11 e0       	ldi	r17, 0x01	; 1
    64a6:	39 2d       	mov	r19, r9
    64a8:	30 71       	andi	r19, 0x10	; 16
    64aa:	93 2e       	mov	r9, r19
    64ac:	f8 01       	movw	r30, r16
    64ae:	84 91       	lpm	r24, Z
    64b0:	81 11       	cpse	r24, r1
    64b2:	21 c0       	rjmp	.+66     	; 0x64f6 <vfprintf+0x6c2>
    64b4:	55 20       	and	r5, r5
    64b6:	09 f4       	brne	.+2      	; 0x64ba <vfprintf+0x686>
    64b8:	fc cc       	rjmp	.-1544   	; 0x5eb2 <vfprintf+0x7e>
    64ba:	b7 01       	movw	r22, r14
    64bc:	80 e2       	ldi	r24, 0x20	; 32
    64be:	90 e0       	ldi	r25, 0x00	; 0
    64c0:	0a d2       	rcall	.+1044   	; 0x68d6 <fputc>
    64c2:	5a 94       	dec	r5
    64c4:	f7 cf       	rjmp	.-18     	; 0x64b4 <vfprintf+0x680>
    64c6:	f7 01       	movw	r30, r14
    64c8:	86 81       	ldd	r24, Z+6	; 0x06
    64ca:	97 81       	ldd	r25, Z+7	; 0x07
    64cc:	23 c0       	rjmp	.+70     	; 0x6514 <vfprintf+0x6e0>
    64ce:	8f ef       	ldi	r24, 0xFF	; 255
    64d0:	9f ef       	ldi	r25, 0xFF	; 255
    64d2:	20 c0       	rjmp	.+64     	; 0x6514 <vfprintf+0x6e0>
    64d4:	b7 01       	movw	r22, r14
    64d6:	80 e2       	ldi	r24, 0x20	; 32
    64d8:	90 e0       	ldi	r25, 0x00	; 0
    64da:	fd d1       	rcall	.+1018   	; 0x68d6 <fputc>
    64dc:	5a 94       	dec	r5
    64de:	51 10       	cpse	r5, r1
    64e0:	f9 cf       	rjmp	.-14     	; 0x64d4 <vfprintf+0x6a0>
    64e2:	da cf       	rjmp	.-76     	; 0x6498 <vfprintf+0x664>
    64e4:	51 2c       	mov	r5, r1
    64e6:	b7 01       	movw	r22, r14
    64e8:	80 2f       	mov	r24, r16
    64ea:	90 e0       	ldi	r25, 0x00	; 0
    64ec:	f4 d1       	rcall	.+1000   	; 0x68d6 <fputc>
    64ee:	d6 cf       	rjmp	.-84     	; 0x649c <vfprintf+0x668>
    64f0:	08 e5       	ldi	r16, 0x58	; 88
    64f2:	11 e0       	ldi	r17, 0x01	; 1
    64f4:	d8 cf       	rjmp	.-80     	; 0x64a6 <vfprintf+0x672>
    64f6:	91 10       	cpse	r9, r1
    64f8:	80 52       	subi	r24, 0x20	; 32
    64fa:	b7 01       	movw	r22, r14
    64fc:	90 e0       	ldi	r25, 0x00	; 0
    64fe:	eb d1       	rcall	.+982    	; 0x68d6 <fputc>
    6500:	0f 5f       	subi	r16, 0xFF	; 255
    6502:	1f 4f       	sbci	r17, 0xFF	; 255
    6504:	d3 cf       	rjmp	.-90     	; 0x64ac <vfprintf+0x678>
    6506:	23 e0       	ldi	r18, 0x03	; 3
    6508:	25 15       	cp	r18, r5
    650a:	10 f4       	brcc	.+4      	; 0x6510 <vfprintf+0x6dc>
    650c:	83 e0       	ldi	r24, 0x03	; 3
    650e:	c1 cf       	rjmp	.-126    	; 0x6492 <vfprintf+0x65e>
    6510:	51 2c       	mov	r5, r1
    6512:	c4 cf       	rjmp	.-120    	; 0x649c <vfprintf+0x668>
    6514:	60 96       	adiw	r28, 0x10	; 16
    6516:	0f b6       	in	r0, 0x3f	; 63
    6518:	f8 94       	cli
    651a:	de bf       	out	0x3e, r29	; 62
    651c:	0f be       	out	0x3f, r0	; 63
    651e:	cd bf       	out	0x3d, r28	; 61
    6520:	df 91       	pop	r29
    6522:	cf 91       	pop	r28
    6524:	1f 91       	pop	r17
    6526:	0f 91       	pop	r16
    6528:	ff 90       	pop	r15
    652a:	ef 90       	pop	r14
    652c:	df 90       	pop	r13
    652e:	cf 90       	pop	r12
    6530:	bf 90       	pop	r11
    6532:	af 90       	pop	r10
    6534:	9f 90       	pop	r9
    6536:	8f 90       	pop	r8
    6538:	7f 90       	pop	r7
    653a:	6f 90       	pop	r6
    653c:	5f 90       	pop	r5
    653e:	4f 90       	pop	r4
    6540:	3f 90       	pop	r3
    6542:	2f 90       	pop	r2
    6544:	08 95       	ret

00006546 <__udivmodsi4>:
    6546:	a1 e2       	ldi	r26, 0x21	; 33
    6548:	1a 2e       	mov	r1, r26
    654a:	aa 1b       	sub	r26, r26
    654c:	bb 1b       	sub	r27, r27
    654e:	fd 01       	movw	r30, r26
    6550:	0d c0       	rjmp	.+26     	; 0x656c <__udivmodsi4_ep>

00006552 <__udivmodsi4_loop>:
    6552:	aa 1f       	adc	r26, r26
    6554:	bb 1f       	adc	r27, r27
    6556:	ee 1f       	adc	r30, r30
    6558:	ff 1f       	adc	r31, r31
    655a:	a2 17       	cp	r26, r18
    655c:	b3 07       	cpc	r27, r19
    655e:	e4 07       	cpc	r30, r20
    6560:	f5 07       	cpc	r31, r21
    6562:	20 f0       	brcs	.+8      	; 0x656c <__udivmodsi4_ep>
    6564:	a2 1b       	sub	r26, r18
    6566:	b3 0b       	sbc	r27, r19
    6568:	e4 0b       	sbc	r30, r20
    656a:	f5 0b       	sbc	r31, r21

0000656c <__udivmodsi4_ep>:
    656c:	66 1f       	adc	r22, r22
    656e:	77 1f       	adc	r23, r23
    6570:	88 1f       	adc	r24, r24
    6572:	99 1f       	adc	r25, r25
    6574:	1a 94       	dec	r1
    6576:	69 f7       	brne	.-38     	; 0x6552 <__udivmodsi4_loop>
    6578:	60 95       	com	r22
    657a:	70 95       	com	r23
    657c:	80 95       	com	r24
    657e:	90 95       	com	r25
    6580:	9b 01       	movw	r18, r22
    6582:	ac 01       	movw	r20, r24
    6584:	bd 01       	movw	r22, r26
    6586:	cf 01       	movw	r24, r30
    6588:	08 95       	ret

0000658a <__divmodsi4>:
    658a:	05 2e       	mov	r0, r21
    658c:	97 fb       	bst	r25, 7
    658e:	16 f4       	brtc	.+4      	; 0x6594 <__divmodsi4+0xa>
    6590:	00 94       	com	r0
    6592:	0f d0       	rcall	.+30     	; 0x65b2 <__negsi2>
    6594:	57 fd       	sbrc	r21, 7
    6596:	05 d0       	rcall	.+10     	; 0x65a2 <__divmodsi4_neg2>
    6598:	d6 df       	rcall	.-84     	; 0x6546 <__udivmodsi4>
    659a:	07 fc       	sbrc	r0, 7
    659c:	02 d0       	rcall	.+4      	; 0x65a2 <__divmodsi4_neg2>
    659e:	46 f4       	brtc	.+16     	; 0x65b0 <__divmodsi4_exit>
    65a0:	08 c0       	rjmp	.+16     	; 0x65b2 <__negsi2>

000065a2 <__divmodsi4_neg2>:
    65a2:	50 95       	com	r21
    65a4:	40 95       	com	r20
    65a6:	30 95       	com	r19
    65a8:	21 95       	neg	r18
    65aa:	3f 4f       	sbci	r19, 0xFF	; 255
    65ac:	4f 4f       	sbci	r20, 0xFF	; 255
    65ae:	5f 4f       	sbci	r21, 0xFF	; 255

000065b0 <__divmodsi4_exit>:
    65b0:	08 95       	ret

000065b2 <__negsi2>:
    65b2:	90 95       	com	r25
    65b4:	80 95       	com	r24
    65b6:	70 95       	com	r23
    65b8:	61 95       	neg	r22
    65ba:	7f 4f       	sbci	r23, 0xFF	; 255
    65bc:	8f 4f       	sbci	r24, 0xFF	; 255
    65be:	9f 4f       	sbci	r25, 0xFF	; 255
    65c0:	08 95       	ret

000065c2 <__tablejump2__>:
    65c2:	ee 0f       	add	r30, r30
    65c4:	ff 1f       	adc	r31, r31
    65c6:	88 1f       	adc	r24, r24
    65c8:	8b bf       	out	0x3b, r24	; 59
    65ca:	07 90       	elpm	r0, Z+
    65cc:	f6 91       	elpm	r31, Z
    65ce:	e0 2d       	mov	r30, r0
    65d0:	19 94       	eijmp

000065d2 <__muluhisi3>:
    65d2:	09 d0       	rcall	.+18     	; 0x65e6 <__umulhisi3>
    65d4:	a5 9f       	mul	r26, r21
    65d6:	90 0d       	add	r25, r0
    65d8:	b4 9f       	mul	r27, r20
    65da:	90 0d       	add	r25, r0
    65dc:	a4 9f       	mul	r26, r20
    65de:	80 0d       	add	r24, r0
    65e0:	91 1d       	adc	r25, r1
    65e2:	11 24       	eor	r1, r1
    65e4:	08 95       	ret

000065e6 <__umulhisi3>:
    65e6:	a2 9f       	mul	r26, r18
    65e8:	b0 01       	movw	r22, r0
    65ea:	b3 9f       	mul	r27, r19
    65ec:	c0 01       	movw	r24, r0
    65ee:	a3 9f       	mul	r26, r19
    65f0:	70 0d       	add	r23, r0
    65f2:	81 1d       	adc	r24, r1
    65f4:	11 24       	eor	r1, r1
    65f6:	91 1d       	adc	r25, r1
    65f8:	b2 9f       	mul	r27, r18
    65fa:	70 0d       	add	r23, r0
    65fc:	81 1d       	adc	r24, r1
    65fe:	11 24       	eor	r1, r1
    6600:	91 1d       	adc	r25, r1
    6602:	08 95       	ret

00006604 <do_rand>:
    6604:	8f 92       	push	r8
    6606:	9f 92       	push	r9
    6608:	af 92       	push	r10
    660a:	bf 92       	push	r11
    660c:	cf 92       	push	r12
    660e:	df 92       	push	r13
    6610:	ef 92       	push	r14
    6612:	ff 92       	push	r15
    6614:	cf 93       	push	r28
    6616:	df 93       	push	r29
    6618:	ec 01       	movw	r28, r24
    661a:	68 81       	ld	r22, Y
    661c:	79 81       	ldd	r23, Y+1	; 0x01
    661e:	8a 81       	ldd	r24, Y+2	; 0x02
    6620:	9b 81       	ldd	r25, Y+3	; 0x03
    6622:	61 15       	cp	r22, r1
    6624:	71 05       	cpc	r23, r1
    6626:	81 05       	cpc	r24, r1
    6628:	91 05       	cpc	r25, r1
    662a:	21 f4       	brne	.+8      	; 0x6634 <do_rand+0x30>
    662c:	64 e2       	ldi	r22, 0x24	; 36
    662e:	79 ed       	ldi	r23, 0xD9	; 217
    6630:	8b e5       	ldi	r24, 0x5B	; 91
    6632:	97 e0       	ldi	r25, 0x07	; 7
    6634:	2d e1       	ldi	r18, 0x1D	; 29
    6636:	33 ef       	ldi	r19, 0xF3	; 243
    6638:	41 e0       	ldi	r20, 0x01	; 1
    663a:	50 e0       	ldi	r21, 0x00	; 0
    663c:	a6 df       	rcall	.-180    	; 0x658a <__divmodsi4>
    663e:	49 01       	movw	r8, r18
    6640:	5a 01       	movw	r10, r20
    6642:	9b 01       	movw	r18, r22
    6644:	ac 01       	movw	r20, r24
    6646:	a7 ea       	ldi	r26, 0xA7	; 167
    6648:	b1 e4       	ldi	r27, 0x41	; 65
    664a:	c3 df       	rcall	.-122    	; 0x65d2 <__muluhisi3>
    664c:	6b 01       	movw	r12, r22
    664e:	7c 01       	movw	r14, r24
    6650:	ac ee       	ldi	r26, 0xEC	; 236
    6652:	b4 ef       	ldi	r27, 0xF4	; 244
    6654:	a5 01       	movw	r20, r10
    6656:	94 01       	movw	r18, r8
    6658:	14 d2       	rcall	.+1064   	; 0x6a82 <__mulohisi3>
    665a:	dc 01       	movw	r26, r24
    665c:	cb 01       	movw	r24, r22
    665e:	8c 0d       	add	r24, r12
    6660:	9d 1d       	adc	r25, r13
    6662:	ae 1d       	adc	r26, r14
    6664:	bf 1d       	adc	r27, r15
    6666:	b7 ff       	sbrs	r27, 7
    6668:	03 c0       	rjmp	.+6      	; 0x6670 <do_rand+0x6c>
    666a:	01 97       	sbiw	r24, 0x01	; 1
    666c:	a1 09       	sbc	r26, r1
    666e:	b0 48       	sbci	r27, 0x80	; 128
    6670:	88 83       	st	Y, r24
    6672:	99 83       	std	Y+1, r25	; 0x01
    6674:	aa 83       	std	Y+2, r26	; 0x02
    6676:	bb 83       	std	Y+3, r27	; 0x03
    6678:	9f 77       	andi	r25, 0x7F	; 127
    667a:	df 91       	pop	r29
    667c:	cf 91       	pop	r28
    667e:	ff 90       	pop	r15
    6680:	ef 90       	pop	r14
    6682:	df 90       	pop	r13
    6684:	cf 90       	pop	r12
    6686:	bf 90       	pop	r11
    6688:	af 90       	pop	r10
    668a:	9f 90       	pop	r9
    668c:	8f 90       	pop	r8
    668e:	08 95       	ret

00006690 <rand_r>:
    6690:	b9 cf       	rjmp	.-142    	; 0x6604 <do_rand>

00006692 <rand>:
    6692:	80 e0       	ldi	r24, 0x00	; 0
    6694:	92 e0       	ldi	r25, 0x02	; 2
    6696:	b6 cf       	rjmp	.-148    	; 0x6604 <do_rand>

00006698 <srand>:
    6698:	a0 e0       	ldi	r26, 0x00	; 0
    669a:	b0 e0       	ldi	r27, 0x00	; 0
    669c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
    66a0:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    66a4:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    66a8:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    66ac:	08 95       	ret

000066ae <__ftoa_engine>:
    66ae:	28 30       	cpi	r18, 0x08	; 8
    66b0:	08 f0       	brcs	.+2      	; 0x66b4 <__ftoa_engine+0x6>
    66b2:	27 e0       	ldi	r18, 0x07	; 7
    66b4:	33 27       	eor	r19, r19
    66b6:	da 01       	movw	r26, r20
    66b8:	99 0f       	add	r25, r25
    66ba:	31 1d       	adc	r19, r1
    66bc:	87 fd       	sbrc	r24, 7
    66be:	91 60       	ori	r25, 0x01	; 1
    66c0:	00 96       	adiw	r24, 0x00	; 0
    66c2:	61 05       	cpc	r22, r1
    66c4:	71 05       	cpc	r23, r1
    66c6:	39 f4       	brne	.+14     	; 0x66d6 <__ftoa_engine+0x28>
    66c8:	32 60       	ori	r19, 0x02	; 2
    66ca:	2e 5f       	subi	r18, 0xFE	; 254
    66cc:	3d 93       	st	X+, r19
    66ce:	30 e3       	ldi	r19, 0x30	; 48
    66d0:	2a 95       	dec	r18
    66d2:	e1 f7       	brne	.-8      	; 0x66cc <__ftoa_engine+0x1e>
    66d4:	08 95       	ret
    66d6:	9f 3f       	cpi	r25, 0xFF	; 255
    66d8:	30 f0       	brcs	.+12     	; 0x66e6 <__ftoa_engine+0x38>
    66da:	80 38       	cpi	r24, 0x80	; 128
    66dc:	71 05       	cpc	r23, r1
    66de:	61 05       	cpc	r22, r1
    66e0:	09 f0       	breq	.+2      	; 0x66e4 <__ftoa_engine+0x36>
    66e2:	3c 5f       	subi	r19, 0xFC	; 252
    66e4:	3c 5f       	subi	r19, 0xFC	; 252
    66e6:	3d 93       	st	X+, r19
    66e8:	91 30       	cpi	r25, 0x01	; 1
    66ea:	08 f0       	brcs	.+2      	; 0x66ee <__ftoa_engine+0x40>
    66ec:	80 68       	ori	r24, 0x80	; 128
    66ee:	91 1d       	adc	r25, r1
    66f0:	df 93       	push	r29
    66f2:	cf 93       	push	r28
    66f4:	1f 93       	push	r17
    66f6:	0f 93       	push	r16
    66f8:	ff 92       	push	r15
    66fa:	ef 92       	push	r14
    66fc:	19 2f       	mov	r17, r25
    66fe:	98 7f       	andi	r25, 0xF8	; 248
    6700:	96 95       	lsr	r25
    6702:	e9 2f       	mov	r30, r25
    6704:	96 95       	lsr	r25
    6706:	96 95       	lsr	r25
    6708:	e9 0f       	add	r30, r25
    670a:	ff 27       	eor	r31, r31
    670c:	ea 54       	subi	r30, 0x4A	; 74
    670e:	fe 4f       	sbci	r31, 0xFE	; 254
    6710:	99 27       	eor	r25, r25
    6712:	33 27       	eor	r19, r19
    6714:	ee 24       	eor	r14, r14
    6716:	ff 24       	eor	r15, r15
    6718:	a7 01       	movw	r20, r14
    671a:	e7 01       	movw	r28, r14
    671c:	05 90       	lpm	r0, Z+
    671e:	08 94       	sec
    6720:	07 94       	ror	r0
    6722:	28 f4       	brcc	.+10     	; 0x672e <__ftoa_engine+0x80>
    6724:	36 0f       	add	r19, r22
    6726:	e7 1e       	adc	r14, r23
    6728:	f8 1e       	adc	r15, r24
    672a:	49 1f       	adc	r20, r25
    672c:	51 1d       	adc	r21, r1
    672e:	66 0f       	add	r22, r22
    6730:	77 1f       	adc	r23, r23
    6732:	88 1f       	adc	r24, r24
    6734:	99 1f       	adc	r25, r25
    6736:	06 94       	lsr	r0
    6738:	a1 f7       	brne	.-24     	; 0x6722 <__ftoa_engine+0x74>
    673a:	05 90       	lpm	r0, Z+
    673c:	07 94       	ror	r0
    673e:	28 f4       	brcc	.+10     	; 0x674a <__ftoa_engine+0x9c>
    6740:	e7 0e       	add	r14, r23
    6742:	f8 1e       	adc	r15, r24
    6744:	49 1f       	adc	r20, r25
    6746:	56 1f       	adc	r21, r22
    6748:	c1 1d       	adc	r28, r1
    674a:	77 0f       	add	r23, r23
    674c:	88 1f       	adc	r24, r24
    674e:	99 1f       	adc	r25, r25
    6750:	66 1f       	adc	r22, r22
    6752:	06 94       	lsr	r0
    6754:	a1 f7       	brne	.-24     	; 0x673e <__ftoa_engine+0x90>
    6756:	05 90       	lpm	r0, Z+
    6758:	07 94       	ror	r0
    675a:	28 f4       	brcc	.+10     	; 0x6766 <__ftoa_engine+0xb8>
    675c:	f8 0e       	add	r15, r24
    675e:	49 1f       	adc	r20, r25
    6760:	56 1f       	adc	r21, r22
    6762:	c7 1f       	adc	r28, r23
    6764:	d1 1d       	adc	r29, r1
    6766:	88 0f       	add	r24, r24
    6768:	99 1f       	adc	r25, r25
    676a:	66 1f       	adc	r22, r22
    676c:	77 1f       	adc	r23, r23
    676e:	06 94       	lsr	r0
    6770:	a1 f7       	brne	.-24     	; 0x675a <__ftoa_engine+0xac>
    6772:	05 90       	lpm	r0, Z+
    6774:	07 94       	ror	r0
    6776:	20 f4       	brcc	.+8      	; 0x6780 <__ftoa_engine+0xd2>
    6778:	49 0f       	add	r20, r25
    677a:	56 1f       	adc	r21, r22
    677c:	c7 1f       	adc	r28, r23
    677e:	d8 1f       	adc	r29, r24
    6780:	99 0f       	add	r25, r25
    6782:	66 1f       	adc	r22, r22
    6784:	77 1f       	adc	r23, r23
    6786:	88 1f       	adc	r24, r24
    6788:	06 94       	lsr	r0
    678a:	a9 f7       	brne	.-22     	; 0x6776 <__ftoa_engine+0xc8>
    678c:	84 91       	lpm	r24, Z
    678e:	10 95       	com	r17
    6790:	17 70       	andi	r17, 0x07	; 7
    6792:	41 f0       	breq	.+16     	; 0x67a4 <__ftoa_engine+0xf6>
    6794:	d6 95       	lsr	r29
    6796:	c7 95       	ror	r28
    6798:	57 95       	ror	r21
    679a:	47 95       	ror	r20
    679c:	f7 94       	ror	r15
    679e:	e7 94       	ror	r14
    67a0:	1a 95       	dec	r17
    67a2:	c1 f7       	brne	.-16     	; 0x6794 <__ftoa_engine+0xe6>
    67a4:	ec e5       	ldi	r30, 0x5C	; 92
    67a6:	f1 e0       	ldi	r31, 0x01	; 1
    67a8:	68 94       	set
    67aa:	15 90       	lpm	r1, Z+
    67ac:	15 91       	lpm	r17, Z+
    67ae:	35 91       	lpm	r19, Z+
    67b0:	65 91       	lpm	r22, Z+
    67b2:	95 91       	lpm	r25, Z+
    67b4:	05 90       	lpm	r0, Z+
    67b6:	7f e2       	ldi	r23, 0x2F	; 47
    67b8:	73 95       	inc	r23
    67ba:	e1 18       	sub	r14, r1
    67bc:	f1 0a       	sbc	r15, r17
    67be:	43 0b       	sbc	r20, r19
    67c0:	56 0b       	sbc	r21, r22
    67c2:	c9 0b       	sbc	r28, r25
    67c4:	d0 09       	sbc	r29, r0
    67c6:	c0 f7       	brcc	.-16     	; 0x67b8 <__ftoa_engine+0x10a>
    67c8:	e1 0c       	add	r14, r1
    67ca:	f1 1e       	adc	r15, r17
    67cc:	43 1f       	adc	r20, r19
    67ce:	56 1f       	adc	r21, r22
    67d0:	c9 1f       	adc	r28, r25
    67d2:	d0 1d       	adc	r29, r0
    67d4:	7e f4       	brtc	.+30     	; 0x67f4 <__ftoa_engine+0x146>
    67d6:	70 33       	cpi	r23, 0x30	; 48
    67d8:	11 f4       	brne	.+4      	; 0x67de <__ftoa_engine+0x130>
    67da:	8a 95       	dec	r24
    67dc:	e6 cf       	rjmp	.-52     	; 0x67aa <__ftoa_engine+0xfc>
    67de:	e8 94       	clt
    67e0:	01 50       	subi	r16, 0x01	; 1
    67e2:	30 f0       	brcs	.+12     	; 0x67f0 <__ftoa_engine+0x142>
    67e4:	08 0f       	add	r16, r24
    67e6:	0a f4       	brpl	.+2      	; 0x67ea <__ftoa_engine+0x13c>
    67e8:	00 27       	eor	r16, r16
    67ea:	02 17       	cp	r16, r18
    67ec:	08 f4       	brcc	.+2      	; 0x67f0 <__ftoa_engine+0x142>
    67ee:	20 2f       	mov	r18, r16
    67f0:	23 95       	inc	r18
    67f2:	02 2f       	mov	r16, r18
    67f4:	7a 33       	cpi	r23, 0x3A	; 58
    67f6:	28 f0       	brcs	.+10     	; 0x6802 <__ftoa_engine+0x154>
    67f8:	79 e3       	ldi	r23, 0x39	; 57
    67fa:	7d 93       	st	X+, r23
    67fc:	2a 95       	dec	r18
    67fe:	e9 f7       	brne	.-6      	; 0x67fa <__ftoa_engine+0x14c>
    6800:	10 c0       	rjmp	.+32     	; 0x6822 <__ftoa_engine+0x174>
    6802:	7d 93       	st	X+, r23
    6804:	2a 95       	dec	r18
    6806:	89 f6       	brne	.-94     	; 0x67aa <__ftoa_engine+0xfc>
    6808:	06 94       	lsr	r0
    680a:	97 95       	ror	r25
    680c:	67 95       	ror	r22
    680e:	37 95       	ror	r19
    6810:	17 95       	ror	r17
    6812:	17 94       	ror	r1
    6814:	e1 18       	sub	r14, r1
    6816:	f1 0a       	sbc	r15, r17
    6818:	43 0b       	sbc	r20, r19
    681a:	56 0b       	sbc	r21, r22
    681c:	c9 0b       	sbc	r28, r25
    681e:	d0 09       	sbc	r29, r0
    6820:	98 f0       	brcs	.+38     	; 0x6848 <__ftoa_engine+0x19a>
    6822:	23 95       	inc	r18
    6824:	7e 91       	ld	r23, -X
    6826:	73 95       	inc	r23
    6828:	7a 33       	cpi	r23, 0x3A	; 58
    682a:	08 f0       	brcs	.+2      	; 0x682e <__ftoa_engine+0x180>
    682c:	70 e3       	ldi	r23, 0x30	; 48
    682e:	7c 93       	st	X, r23
    6830:	20 13       	cpse	r18, r16
    6832:	b8 f7       	brcc	.-18     	; 0x6822 <__ftoa_engine+0x174>
    6834:	7e 91       	ld	r23, -X
    6836:	70 61       	ori	r23, 0x10	; 16
    6838:	7d 93       	st	X+, r23
    683a:	30 f0       	brcs	.+12     	; 0x6848 <__ftoa_engine+0x19a>
    683c:	83 95       	inc	r24
    683e:	71 e3       	ldi	r23, 0x31	; 49
    6840:	7d 93       	st	X+, r23
    6842:	70 e3       	ldi	r23, 0x30	; 48
    6844:	2a 95       	dec	r18
    6846:	e1 f7       	brne	.-8      	; 0x6840 <__ftoa_engine+0x192>
    6848:	11 24       	eor	r1, r1
    684a:	ef 90       	pop	r14
    684c:	ff 90       	pop	r15
    684e:	0f 91       	pop	r16
    6850:	1f 91       	pop	r17
    6852:	cf 91       	pop	r28
    6854:	df 91       	pop	r29
    6856:	99 27       	eor	r25, r25
    6858:	87 fd       	sbrc	r24, 7
    685a:	90 95       	com	r25
    685c:	08 95       	ret

0000685e <strnlen_P>:
    685e:	fc 01       	movw	r30, r24
    6860:	05 90       	lpm	r0, Z+
    6862:	61 50       	subi	r22, 0x01	; 1
    6864:	70 40       	sbci	r23, 0x00	; 0
    6866:	01 10       	cpse	r0, r1
    6868:	d8 f7       	brcc	.-10     	; 0x6860 <strnlen_P+0x2>
    686a:	80 95       	com	r24
    686c:	90 95       	com	r25
    686e:	8e 0f       	add	r24, r30
    6870:	9f 1f       	adc	r25, r31
    6872:	08 95       	ret

00006874 <memcpy>:
    6874:	fb 01       	movw	r30, r22
    6876:	dc 01       	movw	r26, r24
    6878:	02 c0       	rjmp	.+4      	; 0x687e <memcpy+0xa>
    687a:	01 90       	ld	r0, Z+
    687c:	0d 92       	st	X+, r0
    687e:	41 50       	subi	r20, 0x01	; 1
    6880:	50 40       	sbci	r21, 0x00	; 0
    6882:	d8 f7       	brcc	.-10     	; 0x687a <memcpy+0x6>
    6884:	08 95       	ret

00006886 <strncmp>:
    6886:	fb 01       	movw	r30, r22
    6888:	dc 01       	movw	r26, r24
    688a:	41 50       	subi	r20, 0x01	; 1
    688c:	50 40       	sbci	r21, 0x00	; 0
    688e:	30 f0       	brcs	.+12     	; 0x689c <strncmp+0x16>
    6890:	8d 91       	ld	r24, X+
    6892:	01 90       	ld	r0, Z+
    6894:	80 19       	sub	r24, r0
    6896:	19 f4       	brne	.+6      	; 0x689e <strncmp+0x18>
    6898:	00 20       	and	r0, r0
    689a:	b9 f7       	brne	.-18     	; 0x688a <strncmp+0x4>
    689c:	88 1b       	sub	r24, r24
    689e:	99 0b       	sbc	r25, r25
    68a0:	08 95       	ret

000068a2 <strncpy>:
    68a2:	fb 01       	movw	r30, r22
    68a4:	dc 01       	movw	r26, r24
    68a6:	41 50       	subi	r20, 0x01	; 1
    68a8:	50 40       	sbci	r21, 0x00	; 0
    68aa:	48 f0       	brcs	.+18     	; 0x68be <strncpy+0x1c>
    68ac:	01 90       	ld	r0, Z+
    68ae:	0d 92       	st	X+, r0
    68b0:	00 20       	and	r0, r0
    68b2:	c9 f7       	brne	.-14     	; 0x68a6 <strncpy+0x4>
    68b4:	01 c0       	rjmp	.+2      	; 0x68b8 <strncpy+0x16>
    68b6:	1d 92       	st	X+, r1
    68b8:	41 50       	subi	r20, 0x01	; 1
    68ba:	50 40       	sbci	r21, 0x00	; 0
    68bc:	e0 f7       	brcc	.-8      	; 0x68b6 <strncpy+0x14>
    68be:	08 95       	ret

000068c0 <strnlen>:
    68c0:	fc 01       	movw	r30, r24
    68c2:	61 50       	subi	r22, 0x01	; 1
    68c4:	70 40       	sbci	r23, 0x00	; 0
    68c6:	01 90       	ld	r0, Z+
    68c8:	01 10       	cpse	r0, r1
    68ca:	d8 f7       	brcc	.-10     	; 0x68c2 <strnlen+0x2>
    68cc:	80 95       	com	r24
    68ce:	90 95       	com	r25
    68d0:	8e 0f       	add	r24, r30
    68d2:	9f 1f       	adc	r25, r31
    68d4:	08 95       	ret

000068d6 <fputc>:
    68d6:	0f 93       	push	r16
    68d8:	1f 93       	push	r17
    68da:	cf 93       	push	r28
    68dc:	df 93       	push	r29
    68de:	fb 01       	movw	r30, r22
    68e0:	23 81       	ldd	r18, Z+3	; 0x03
    68e2:	21 fd       	sbrc	r18, 1
    68e4:	03 c0       	rjmp	.+6      	; 0x68ec <fputc+0x16>
    68e6:	8f ef       	ldi	r24, 0xFF	; 255
    68e8:	9f ef       	ldi	r25, 0xFF	; 255
    68ea:	2c c0       	rjmp	.+88     	; 0x6944 <fputc+0x6e>
    68ec:	22 ff       	sbrs	r18, 2
    68ee:	16 c0       	rjmp	.+44     	; 0x691c <fputc+0x46>
    68f0:	46 81       	ldd	r20, Z+6	; 0x06
    68f2:	57 81       	ldd	r21, Z+7	; 0x07
    68f4:	24 81       	ldd	r18, Z+4	; 0x04
    68f6:	35 81       	ldd	r19, Z+5	; 0x05
    68f8:	42 17       	cp	r20, r18
    68fa:	53 07       	cpc	r21, r19
    68fc:	44 f4       	brge	.+16     	; 0x690e <fputc+0x38>
    68fe:	a0 81       	ld	r26, Z
    6900:	b1 81       	ldd	r27, Z+1	; 0x01
    6902:	9d 01       	movw	r18, r26
    6904:	2f 5f       	subi	r18, 0xFF	; 255
    6906:	3f 4f       	sbci	r19, 0xFF	; 255
    6908:	31 83       	std	Z+1, r19	; 0x01
    690a:	20 83       	st	Z, r18
    690c:	8c 93       	st	X, r24
    690e:	26 81       	ldd	r18, Z+6	; 0x06
    6910:	37 81       	ldd	r19, Z+7	; 0x07
    6912:	2f 5f       	subi	r18, 0xFF	; 255
    6914:	3f 4f       	sbci	r19, 0xFF	; 255
    6916:	37 83       	std	Z+7, r19	; 0x07
    6918:	26 83       	std	Z+6, r18	; 0x06
    691a:	14 c0       	rjmp	.+40     	; 0x6944 <fputc+0x6e>
    691c:	8b 01       	movw	r16, r22
    691e:	ec 01       	movw	r28, r24
    6920:	fb 01       	movw	r30, r22
    6922:	00 84       	ldd	r0, Z+8	; 0x08
    6924:	f1 85       	ldd	r31, Z+9	; 0x09
    6926:	e0 2d       	mov	r30, r0
    6928:	19 95       	eicall
    692a:	89 2b       	or	r24, r25
    692c:	e1 f6       	brne	.-72     	; 0x68e6 <fputc+0x10>
    692e:	d8 01       	movw	r26, r16
    6930:	16 96       	adiw	r26, 0x06	; 6
    6932:	8d 91       	ld	r24, X+
    6934:	9c 91       	ld	r25, X
    6936:	17 97       	sbiw	r26, 0x07	; 7
    6938:	01 96       	adiw	r24, 0x01	; 1
    693a:	17 96       	adiw	r26, 0x07	; 7
    693c:	9c 93       	st	X, r25
    693e:	8e 93       	st	-X, r24
    6940:	16 97       	sbiw	r26, 0x06	; 6
    6942:	ce 01       	movw	r24, r28
    6944:	df 91       	pop	r29
    6946:	cf 91       	pop	r28
    6948:	1f 91       	pop	r17
    694a:	0f 91       	pop	r16
    694c:	08 95       	ret

0000694e <printf>:
    694e:	cf 93       	push	r28
    6950:	df 93       	push	r29
    6952:	cd b7       	in	r28, 0x3d	; 61
    6954:	de b7       	in	r29, 0x3e	; 62
    6956:	ae 01       	movw	r20, r28
    6958:	4a 5f       	subi	r20, 0xFA	; 250
    695a:	5f 4f       	sbci	r21, 0xFF	; 255
    695c:	fa 01       	movw	r30, r20
    695e:	61 91       	ld	r22, Z+
    6960:	71 91       	ld	r23, Z+
    6962:	af 01       	movw	r20, r30
    6964:	80 91 bb 1c 	lds	r24, 0x1CBB	; 0x801cbb <__iob+0x2>
    6968:	90 91 bc 1c 	lds	r25, 0x1CBC	; 0x801cbc <__iob+0x3>
    696c:	63 da       	rcall	.-2874   	; 0x5e34 <vfprintf>
    696e:	df 91       	pop	r29
    6970:	cf 91       	pop	r28
    6972:	08 95       	ret

00006974 <printf_P>:
    6974:	0f 93       	push	r16
    6976:	1f 93       	push	r17
    6978:	cf 93       	push	r28
    697a:	df 93       	push	r29
    697c:	cd b7       	in	r28, 0x3d	; 61
    697e:	de b7       	in	r29, 0x3e	; 62
    6980:	ae 01       	movw	r20, r28
    6982:	48 5f       	subi	r20, 0xF8	; 248
    6984:	5f 4f       	sbci	r21, 0xFF	; 255
    6986:	da 01       	movw	r26, r20
    6988:	6d 91       	ld	r22, X+
    698a:	7d 91       	ld	r23, X+
    698c:	ad 01       	movw	r20, r26
    698e:	09 eb       	ldi	r16, 0xB9	; 185
    6990:	1c e1       	ldi	r17, 0x1C	; 28
    6992:	f8 01       	movw	r30, r16
    6994:	82 81       	ldd	r24, Z+2	; 0x02
    6996:	93 81       	ldd	r25, Z+3	; 0x03
    6998:	dc 01       	movw	r26, r24
    699a:	13 96       	adiw	r26, 0x03	; 3
    699c:	2c 91       	ld	r18, X
    699e:	13 97       	sbiw	r26, 0x03	; 3
    69a0:	28 60       	ori	r18, 0x08	; 8
    69a2:	13 96       	adiw	r26, 0x03	; 3
    69a4:	2c 93       	st	X, r18
    69a6:	46 da       	rcall	.-2932   	; 0x5e34 <vfprintf>
    69a8:	d8 01       	movw	r26, r16
    69aa:	12 96       	adiw	r26, 0x02	; 2
    69ac:	ed 91       	ld	r30, X+
    69ae:	fc 91       	ld	r31, X
    69b0:	13 97       	sbiw	r26, 0x03	; 3
    69b2:	23 81       	ldd	r18, Z+3	; 0x03
    69b4:	27 7f       	andi	r18, 0xF7	; 247
    69b6:	23 83       	std	Z+3, r18	; 0x03
    69b8:	df 91       	pop	r29
    69ba:	cf 91       	pop	r28
    69bc:	1f 91       	pop	r17
    69be:	0f 91       	pop	r16
    69c0:	08 95       	ret

000069c2 <__ultoa_invert>:
    69c2:	fa 01       	movw	r30, r20
    69c4:	aa 27       	eor	r26, r26
    69c6:	28 30       	cpi	r18, 0x08	; 8
    69c8:	51 f1       	breq	.+84     	; 0x6a1e <__ultoa_invert+0x5c>
    69ca:	20 31       	cpi	r18, 0x10	; 16
    69cc:	81 f1       	breq	.+96     	; 0x6a2e <__ultoa_invert+0x6c>
    69ce:	e8 94       	clt
    69d0:	6f 93       	push	r22
    69d2:	6e 7f       	andi	r22, 0xFE	; 254
    69d4:	6e 5f       	subi	r22, 0xFE	; 254
    69d6:	7f 4f       	sbci	r23, 0xFF	; 255
    69d8:	8f 4f       	sbci	r24, 0xFF	; 255
    69da:	9f 4f       	sbci	r25, 0xFF	; 255
    69dc:	af 4f       	sbci	r26, 0xFF	; 255
    69de:	b1 e0       	ldi	r27, 0x01	; 1
    69e0:	3e d0       	rcall	.+124    	; 0x6a5e <__ultoa_invert+0x9c>
    69e2:	b4 e0       	ldi	r27, 0x04	; 4
    69e4:	3c d0       	rcall	.+120    	; 0x6a5e <__ultoa_invert+0x9c>
    69e6:	67 0f       	add	r22, r23
    69e8:	78 1f       	adc	r23, r24
    69ea:	89 1f       	adc	r24, r25
    69ec:	9a 1f       	adc	r25, r26
    69ee:	a1 1d       	adc	r26, r1
    69f0:	68 0f       	add	r22, r24
    69f2:	79 1f       	adc	r23, r25
    69f4:	8a 1f       	adc	r24, r26
    69f6:	91 1d       	adc	r25, r1
    69f8:	a1 1d       	adc	r26, r1
    69fa:	6a 0f       	add	r22, r26
    69fc:	71 1d       	adc	r23, r1
    69fe:	81 1d       	adc	r24, r1
    6a00:	91 1d       	adc	r25, r1
    6a02:	a1 1d       	adc	r26, r1
    6a04:	20 d0       	rcall	.+64     	; 0x6a46 <__ultoa_invert+0x84>
    6a06:	09 f4       	brne	.+2      	; 0x6a0a <__ultoa_invert+0x48>
    6a08:	68 94       	set
    6a0a:	3f 91       	pop	r19
    6a0c:	2a e0       	ldi	r18, 0x0A	; 10
    6a0e:	26 9f       	mul	r18, r22
    6a10:	11 24       	eor	r1, r1
    6a12:	30 19       	sub	r19, r0
    6a14:	30 5d       	subi	r19, 0xD0	; 208
    6a16:	31 93       	st	Z+, r19
    6a18:	de f6       	brtc	.-74     	; 0x69d0 <__ultoa_invert+0xe>
    6a1a:	cf 01       	movw	r24, r30
    6a1c:	08 95       	ret
    6a1e:	46 2f       	mov	r20, r22
    6a20:	47 70       	andi	r20, 0x07	; 7
    6a22:	40 5d       	subi	r20, 0xD0	; 208
    6a24:	41 93       	st	Z+, r20
    6a26:	b3 e0       	ldi	r27, 0x03	; 3
    6a28:	0f d0       	rcall	.+30     	; 0x6a48 <__ultoa_invert+0x86>
    6a2a:	c9 f7       	brne	.-14     	; 0x6a1e <__ultoa_invert+0x5c>
    6a2c:	f6 cf       	rjmp	.-20     	; 0x6a1a <__ultoa_invert+0x58>
    6a2e:	46 2f       	mov	r20, r22
    6a30:	4f 70       	andi	r20, 0x0F	; 15
    6a32:	40 5d       	subi	r20, 0xD0	; 208
    6a34:	4a 33       	cpi	r20, 0x3A	; 58
    6a36:	18 f0       	brcs	.+6      	; 0x6a3e <__ultoa_invert+0x7c>
    6a38:	49 5d       	subi	r20, 0xD9	; 217
    6a3a:	31 fd       	sbrc	r19, 1
    6a3c:	40 52       	subi	r20, 0x20	; 32
    6a3e:	41 93       	st	Z+, r20
    6a40:	02 d0       	rcall	.+4      	; 0x6a46 <__ultoa_invert+0x84>
    6a42:	a9 f7       	brne	.-22     	; 0x6a2e <__ultoa_invert+0x6c>
    6a44:	ea cf       	rjmp	.-44     	; 0x6a1a <__ultoa_invert+0x58>
    6a46:	b4 e0       	ldi	r27, 0x04	; 4
    6a48:	a6 95       	lsr	r26
    6a4a:	97 95       	ror	r25
    6a4c:	87 95       	ror	r24
    6a4e:	77 95       	ror	r23
    6a50:	67 95       	ror	r22
    6a52:	ba 95       	dec	r27
    6a54:	c9 f7       	brne	.-14     	; 0x6a48 <__ultoa_invert+0x86>
    6a56:	00 97       	sbiw	r24, 0x00	; 0
    6a58:	61 05       	cpc	r22, r1
    6a5a:	71 05       	cpc	r23, r1
    6a5c:	08 95       	ret
    6a5e:	9b 01       	movw	r18, r22
    6a60:	ac 01       	movw	r20, r24
    6a62:	0a 2e       	mov	r0, r26
    6a64:	06 94       	lsr	r0
    6a66:	57 95       	ror	r21
    6a68:	47 95       	ror	r20
    6a6a:	37 95       	ror	r19
    6a6c:	27 95       	ror	r18
    6a6e:	ba 95       	dec	r27
    6a70:	c9 f7       	brne	.-14     	; 0x6a64 <__ultoa_invert+0xa2>
    6a72:	62 0f       	add	r22, r18
    6a74:	73 1f       	adc	r23, r19
    6a76:	84 1f       	adc	r24, r20
    6a78:	95 1f       	adc	r25, r21
    6a7a:	a0 1d       	adc	r26, r0
    6a7c:	08 95       	ret

00006a7e <__mulshisi3>:
    6a7e:	b7 ff       	sbrs	r27, 7
    6a80:	a8 cd       	rjmp	.-1200   	; 0x65d2 <__muluhisi3>

00006a82 <__mulohisi3>:
    6a82:	a7 dd       	rcall	.-1202   	; 0x65d2 <__muluhisi3>
    6a84:	82 1b       	sub	r24, r18
    6a86:	93 0b       	sbc	r25, r19
    6a88:	08 95       	ret

00006a8a <_exit>:
    6a8a:	f8 94       	cli

00006a8c <__stop_program>:
    6a8c:	ff cf       	rjmp	.-2      	; 0x6a8c <__stop_program>
